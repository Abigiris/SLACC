import sys
sys.path.append('/home/george2/Raise/ProgramRepair/CodeSeer/projects/src/main/python')
from Y11R5P1.falcon.prob1 import *

def func_fee692d0daec4e52b6091c4a14e29647(uppslope, lowslope, height):
    slope = uppslope - lowslope
    area += height + slope / 2
    return area


def func_377b6bcd148c4efb823348a048606955(uppslope, lowslope, height):
    slope = uppslope - lowslope
    area += height + slope / 2
    return slope


def func_bce8b8842e5448dbbab28fc437bbb488(slope):
    area += height + slope / 2
    height += slope
    return area


def func_9291266fc7174b919eadc37ac4027dc0(slope):
    area += height + slope / 2
    height += slope
    return height


def func_d71b1bde2ae84eee89d8202b183ec369(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_a79362b9e37340b58b9cea5dc233e388(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_b39661cb3e6e41a5a513f8f321f0789f(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_07b08922bb5243ef92e39f3b4b098100(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_0638db112ccd4134bb2253c9124a5afa(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_d7f6c04a54a0429eb46d2292a3abd300(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_5edec920cfcf449e92c0d0a2c4ac38e4(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_ce123efe84e9449b9b20117e13588e96(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_7ec94463892941048cce19c12516facc(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_e838e137625443ce841dd7fdb65f0521(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_481b26f395b24eb6ae9c363ccb225167(uppslope, lowslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return slope


def func_b185ddf8810a4ec7aa99b51b41c15193(uppslope, lowslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return height


def func_0a730f8a4561466dbf6e61f740023f1f(uppslope, lowslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return area


def func_e64270cdb95f4f3290fda5722168f339(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return area


def func_d86c2cca5d8c40dfb0db58fb97b01b69(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_5f3fe1724e4e413fa3e907a0e9cdd2eb(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_c3ea02abdb8240038a97f7eaf72a16a0(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_db4602f378354514b882679e52922778(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_df7126e46dd0433980f604d8b5c39b89(lower, i, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_c9f808b7045b4c6c9ee559e61644dc10(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_6eab9b18e7604e858e6c6a01de9ccdc2(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_12a297534d3f444a9bc0007bc30b80af(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_c8044991ba78483382f7e92de099c4a6(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_c418563b12db4a8489acab433d6f2833(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_c5e8ad7da06c4c2f8afdf74992b3d06e(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_dc6ee848e3b14a1c9076ef4e1be696b8(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return slope


def func_16c4d6a070c34dadbbed1dfdc8d1f7bf(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_15cd01a84ce74b83a66b5deb9d1ab3b2(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_f18605e2c20741509c63404eeedbf3ad(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_8f611d306c7b41d79bbdc433478f68cc(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_44a579a1d54d4e3eb48c71661c15c413(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_9c51af3cc1844a3282a3b05879496be4(lower, i, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return area


def func_bfc48bc1c1104eb2893ab6f672351831(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_b05b3cfe0b41493f83be1fc54d7f08ec(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_0537fc5b8a7642faa388d80db3063fd3(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_a7d499d8ec5d418191204703fc09a33b(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_5cbf31f6ed8c42198eccc249e63d991b(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_8a8c3d70787d4ddeb8f444e1870af7b6(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_6f308ae37dde462194250b1d221636be(lower, info, slope, upper):
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return area


def func_9ee17bc09e3940e481fa7d9aa722eb5d(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return slope


def func_b750456e8c114e2d9e438b738167b34b(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_1dbe03d69dce4e60a81c3ee2b54a5894(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_b090e97a4c3e44a1908125750af3e722(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return area


def func_a9d87c9d781946a6b549b6f6feb39348(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_5f51e3d6aa5a42bb83b6476ae3bbbf85(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_0a4c5e7994ad46e9a7606b4602c114b5(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_6a3cda96dbff4877bd894b3d35de4819(lower, info, upper):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_410a58859cf24beaa921c4be534b1661(nextpos, oldarea):
    cutfrac = 0
    remaining = nextpos - oldarea
    return remaining


def func_9c1bfef354214126be6fe6fdba600d44(nextpos, oldarea):
    cutfrac = 0
    remaining = nextpos - oldarea
    return cutfrac


def func_bd8d664a304d4bacb3f0d4bba6284fb1(height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    return cutfrac


def func_bd0ffb9086294005b3b9999a2e0fc2ef(height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    return remaining


def func_7f6f0417e2064e58a360ba0a95080b95(i, remaining, height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return cutfrac


def func_40fc5a0ce91642448b1810d151dfba95(i, remaining, height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return solnstr


def func_28ab72182bda4134be2109d21cd6f845(cutfrac, i):
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cut


def func_0e8bba94b6944875b4b6646e2e26122c(cutfrac, i):
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return solnstr


def func_d7a2c2d50ba64b9bb5917707fd96a128(totalarea, info):
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_a6a229b51da64611ac1a6452020f8ff0(totalarea, info):
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_3d9286b45bf240d88d270d11e1ff2b09(height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    return remaining


def func_0f29b237e7b048eea488edc70acc5158(height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    return cutfrac


def func_984d9722af614a728f0ecb9f154eb883(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return solnstr


def func_1828b827c40c40d59d5f9f2adb4c45b5(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return cutfrac


def func_ef41d6a201ec4ef78655015463780577(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return remaining


def func_473b0e5097ec4dff9b56f15472f700c4(i, remaining, height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return solnstr


def func_23b08a4f45bb45d4a13fc57dbb856f56(i, remaining, height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cutfrac


def func_b60d2b98fde744fea2b577f827b24ca4(i, remaining, height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cut


def func_1e6740fe2bfd418d91c7f051170f9317(cutfrac, i, totalarea, info):
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_5ea3d24373674d61b03b4f8310da2384(cutfrac, i, totalarea, info):
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_cbca994ffd844ed3a21d2dcb883f6aed(cutfrac, i, totalarea, info):
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_e84effcc4f6c48c8b49487e8a08fc4d9(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return remaining


def func_a39b5037fa284b4f99296d4bb48cc2ce(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return solnstr


def func_cce74785b0a8407ba0713e89aaf9d53f(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    return cutfrac


def func_12bda87c8c0543ef8fcf8ecbd5d050e1(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cut


def func_b56824795870468c9df994f2d4c32280(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cutfrac


def func_27486f7d75e0447585d36e5fc7cf21f9(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return remaining


def func_d9caa8ff2f514b15bdb03d2e217db30d(i, height, nextpos, oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return solnstr


def func_37bb726508844b8e83324221f9acca37(i, totalarea, info, remaining,
    height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_f716e7fe1c8a442db6a6465b18edb5a4(i, totalarea, info, remaining,
    height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_4a29dbd14eb4417fa225145181d4b022(i, totalarea, info, remaining,
    height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_a635eed9a1214d42b8881a49ac9607bf(i, totalarea, info, remaining,
    height, slope):
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_557272101f36415c9cc43192afca5bbd(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cut


def func_b00aed514b8e4382aadc112b5315b50d(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return solnstr


def func_badee2d88f374b7bbce5b3c9ff7d995a(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return cutfrac


def func_3fad761ae09f43318a8d57edefdb3837(i, height, nextpos, oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    return remaining


def func_2f05f9ac89054882a1474c4d3a26c8f6(i, totalarea, info, height,
    oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_dd27ab36877f40a0b1a39f890b810b96(i, totalarea, info, height,
    oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return remaining


def func_d4dd2b85a116446e85e84e19e0f0a63e(i, totalarea, info, height,
    oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_5f43f08fcca74fadada9e0f3fa942c2b(i, totalarea, info, height,
    oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_825b159e88754eb38bb261ee17881949(i, totalarea, info, height,
    oldarea, slope):
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_54f70c9c7efb4df49706e72a2cfc4603(i, totalarea, info, height,
    oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_33b80aad06b144e982c3c158fc12b8b2(i, totalarea, info, height,
    oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_900db22602734986b3243299f73e0ab1(i, totalarea, info, height,
    oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_83673b5120e940ecbf8972398b7ca520(i, totalarea, info, height,
    oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_d4b06f7583a1412eb7a6ef7e970d698d(i, totalarea, info, height,
    oldarea, slope):
    cutfrac = 0
    remaining = nextpos - oldarea
    if slope == 0:
        cutfrac = remaining / height
    else:
        cutfrac = (-height + (height * height + 2 * slope * remaining) ** 0.5
            ) / slope
    solnstr += '\n' + str(i + cutfrac)
    cut += 1
    nextpos = totalarea * (float(cut) / info[3])
    return remaining


def func_48796afec9444f92863547505d7a826f(uppslope, lowslope, area):
    slope = uppslope - lowslope
    oldarea = area
    return slope


def func_c5da77925dd242139ac66d95285e49b9(uppslope, lowslope, area):
    slope = uppslope - lowslope
    oldarea = area
    return oldarea


def func_6df062ef2e164d1fb2128cb12aca8b5e(height, slope):
    oldarea = area
    area += height + slope / 2
    return oldarea


def func_024cbf83ef8646ba9ea89b713880c83b(height, slope):
    oldarea = area
    area += height + slope / 2
    return area


def func_3fb31913ddba4ba8bc064718a359a511(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return remaining


def func_255b6631d8204ec2888f0e6525583c8b(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_7fe7e4e8bea64e3e9a68e391929c3085(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_960077fe32fa447dbf480a2e3617d918(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_28c7515f28e342569777120af328a2fb(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return area


def func_92d2a278b09847c3b8736a339a65dfc3(i, totalarea, info, height,
    oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_f0b505a1e866408b9945654b0b6653ac(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return nextpos


def func_ce02b264a5cc44758ebca140bdb7353d(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return height


def func_d3f5b849910945d080058d2d63a529a2(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cutfrac


def func_c8792ca281d246f4a12d3ab1085d03a1(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return solnstr


def func_9e8094fa90134ff489f3dad668aa303e(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return remaining


def func_91d5612089b540679a24d4f1ac150f83(i, totalarea, info, oldarea, area,
    slope):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cut


def func_8907750271274d85bf7a9928338ce554(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_32a398cba67d4dd9ba92fb08be7f112e(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_931517b4a1ef403c8c242aae2d755114(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_6f28a4b560334195b3cb630a71445fcc(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_c9fb6b14577a41749f0eea7c71c052d6(lower, i, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_ac22f9bce8f243f4b98db7b46668f523(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_b8581854dd234f398e1f3065689b6e3d(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_bd2f243ec30048d9b736566c6e23b762(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_b2f1e6d90d5648b7943f16dc294631f7(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_309cc997773f4489be26e8960fb04cea(lower, info, upper):
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_95e356fbeee847c899aec2bd66676fbc(uppslope, lowslope, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    return oldarea


def func_2e31a6a021c14c3d9aea9ab4de08045d(uppslope, lowslope, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    return slope


def func_3e7b3bb685f74cde9241a50b7b47d741(uppslope, lowslope, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    return area


def func_a03cfc6659944565a58b29ca45410b37(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_580ff69891434bc386f9ed20520e9a4a(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return area


def func_28e27b6b8585424d8cf476d6ff7768c2(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return oldarea


def func_a9dd2afbf04442b4bb6a5944d0990a91(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_3fffbe9522a74ec198eee9c6f61be5cf(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return remaining


def func_a54d7baea3124cf4852eefd7389c3a8f(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_c3345f31ba2e49e4ac73eedaac933f16(i, totalarea, info, height, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_80855c887d8146f0930120e5b3a6cff2(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return remaining


def func_060251fc83914e76a0c51f0926a8afa5(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cut


def func_3f1e1001f07b4efc90cf693fd624a900(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return area


def func_bbc1737354ed493faba6e479139f3480(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return nextpos


def func_65c1c504879f48038e9313dfb0e500cf(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cutfrac


def func_e8ffb812f3fd48e4899b45d761c3d2b6(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return height


def func_888ce23410814b3cadeca4315ac544c5(i, totalarea, info, oldarea, slope):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return solnstr


def func_effcf6c8223f43d8b0fedff212411410(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return nextpos


def func_dfe7f978b859429b9d10986cf1d723c5(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_8754b2200c1e40c1953b27fa15158a7f(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cutfrac


def func_376565784ec34d9cb772385d705d4264(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return solnstr


def func_ce3417524b4d472c9a68744f7885e1a5(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_53640a0892a34edfa2611e53fb7cfd90(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_72aaaf7d5fc84d958949b0895099f1cb(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return remaining


def func_0b771dbb428a44da90c20e4796a1b088(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_d876cdb877c6409cad8d9af2ed6eafcc(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_77636768f5614a97b59b01be620a50cf(lower, i, totalarea, info,
    oldarea, area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cut


def func_a1ac1ac5e2b54816bc0d4ed333c50312(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_6def84f3a97e440db9bd9c2ef0f63d8e(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_3666d5c3b3c843819f409f3de659da17(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_b07303ab6a134ed18c9c6feb68d1888a(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_c620c5d5ceb84589b8151c2f5642e6ac(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_b138df7863864371a484c07dd19b0183(lower, info, slope, upper):
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_f9ba0fb0b4b84652bad0679cd33fe055(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return oldarea


def func_81939b594b9a4290b07734af61370c25(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_5920c00da9bd4a8fb39784b4368fa0f5(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return area


def func_fc078192dc3a4a2db088181532e0a4f1(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cutfrac


def func_c6896d73296c46df8884b707e4f8e435(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_c9f832593eb041c69a155df64b470243(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_5afcfb0788a54dcfbadde3dbca2b0cda(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return remaining


def func_bb7c1988932045e1b64b07a3d09ad4a1(uppslope, i, lowslope, totalarea,
    info, height):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_eb1f6053bfb042d5a5928d72f8f813dc(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cut


def func_5b7c3cd56f4d467ea8cfcee79c3c5545(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return oldarea


def func_e2189a0338604174941cf409e23ef2c5(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return nextpos


def func_5e9c79ea09ac454f8e939f3cd5fc5f3d(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return area


def func_ed9d06414caf4c9a82401f54a266d24f(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cutfrac


def func_d0425717c96a43be828a2c163c1b0abd(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return remaining


def func_eab6b93797f3476baadb3c708d8e9e59(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return solnstr


def func_5114b8c69bad40b9922e1c6033296ca8(i, totalarea, info, slope):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return height


def func_918da37b9eca410aba40dd5c640a9110(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return nextpos


def func_4cb7164128b64e9c942ad8bcd55f207e(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_147e47394db9428abb13bef8a555b618(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return remaining


def func_638aa32cbc4148898da9a3ab82703db7(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cutfrac


def func_d3149aad43b34d4887bb9c6cec19c117(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_b14c7c15d0104103b29c45fce49b14c0(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_baac81a2d0d34aad88a0775b616dc6be(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_57a3674e5a544531acf63f0297f3159a(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return solnstr


def func_82443af2e1eb4e48890561c06f05e193(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return area


def func_9c59bfc5858241a8bdf5c895a7168392(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cut


def func_fa67d4f527b4450ca7b2c95a0e6df3c6(lower, i, totalarea, info,
    oldarea, slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_89a6502ce7e545c1b9cd78207c91f3d7(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_d06d849bda5d4b3ea67679a884d9bf22(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return nextpos


def func_a90983bdae3e42589e3b810fc8d41de6(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return solnstr


def func_cdcd99ed8e264648a923413f167d1f1f(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cut


def func_62417deea2e148478b0d9556010151d5(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_3c2853d23d6849e785e4c856088e4600(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_518649afaf82411a92535324bacddb11(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_b11939c0042a413d944b362803361918(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_ba70ed541fa245eda5eddb2f553ca12c(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cutfrac


def func_4328d7f9e26745ab9b55a0a669755093(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return remaining


def func_331e36ad56fe4b7d9f8065d8ad4d5a4f(lower, totalarea, info, oldarea,
    area, slope, upper):
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_8572968304af4b5cab31e85e028bf2c3(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return remaining


def func_ddb22a4cce1840fabf02a899beb20766(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return solnstr


def func_41f33c0ec6fd403c91b25f50241c5ae2(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return oldarea


def func_0e7b43a414fb415f9b77a2e5b67c51b5(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return nextpos


def func_1a674a7233e348859667468f7d296d5f(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cut


def func_1290cdf4ae9445748a29851ec3f706d1(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return slope


def func_53e7551ff7dc4d62b0e9ede80e637c53(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return height


def func_d4273a07be194a2d88bd030b829b87df(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return cutfrac


def func_e5cd4eb0a1054a3db806d52e1c89e475(uppslope, i, lowslope, totalarea,
    info):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    return area


def func_a2e4f555486a4c439b8e86df7f6c756d(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return remaining


def func_1fe0435e8ba84fbbafe7106da6d3c40e(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cut


def func_85c24389f4d641c5807ab5dc6db07f1e(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return solnstr


def func_c79c2f4f367f40bd9c87ef8edbfb78ea(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_2b9c26f3b1454a00b0c2cca74f02b667(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return nextpos


def func_04858695666a43f7a1804565b9b46a8c(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cutfrac


def func_4c90be998d5a464c863feeae541da3d6(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_28baf771d362488998ded15750d5dce4(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_38e72bd8e5ab4f4baf643284efdbe846(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return oldarea


def func_d041d4a9e5ea46ca9169a9bce87253e5(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_203223fa122a45cead824242c92abef7(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_283ea5aa12454af6b8e91148ff2dea35(lower, i, totalarea, info, slope,
    upper):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return area


def func_3507b5e22b984135a5dfb25196b16ec9(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_03216e49bdd2436f832575dbea75c025(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_4ac998574353420db71f6cfb6f99a8e0(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_3a9d62477f93447d96aeda3c5664cec5(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cut


def func_a128f829f4c647f6897da141097b1361(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return area


def func_0c63924d97704868948c9af7678d0ec6(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return solnstr


def func_c691d691a4774527a9d31cabb451ebd0(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return remaining


def func_4e5bdcd21f154c6da211d73b4b46b4da(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return nextpos


def func_ad773ee2a2c043f48676a89723e12cfd(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_1fc8b9698d1d45359f6789ffd8d0699b(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_a306ce7802ad43f48b2be1183105f99e(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cutfrac


def func_c10db60a7d39456cab2fc024eeaa138d(lower, totalarea, info, oldarea,
    slope, upper):
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_637b5326f88940119dd2f08a55bc82d5(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowi


def func_5f844688c3aa4f6ea61bcf817059916b(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return oldarea


def func_c7f2950f210347aaaa88b2024ad1359a(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return height


def func_a3abada231a449758bfc1cd65ec49bbb(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return slope


def func_baae678cf5894bdd8b4523ff291d4267(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return lowslope


def func_2c4af56ce4984cc98eb16f2b680d9e46(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return nextpos


def func_c80f7243ffd94dd6bb0f0a191df342be(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cutfrac


def func_fdc3a3049ad74026891fda03b14a9bea(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return cut


def func_adb6a4d516a248069af8545d467554c8(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return area


def func_35312f89569a4901bc76af3c201959cd(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return remaining


def func_2cbbc037b33a4f8ea54d595f7b6b8923(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppslope


def func_ef4316a40f69437ab280eaab7e4282d6(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return uppi


def func_7df299b5204848b2a9c12a7168527362(lower, i, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    return solnstr


def func_402ee7499ff44491a6c04474cbb934d2(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_4ea41591e2554c4fb9d19f3648033c37(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return oldarea


def func_a7ef5c19875c4429893eac9d7c4c1632(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_acd3853efdee42b3800d0b911503ebce(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return remaining


def func_9c37b8edba174227aeebad4fe209524a(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_0906c72499e948fd896aedf9cb9b61f9(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_abd077aacd8c46f796a801f9523522d6(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cut


def func_53d296fcba774a6e944c29629c244f85(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return nextpos


def func_3f51d0134c1e4a67a8fbbabb9e7eee7c(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return area


def func_ec5927569c91434e92d3d38be956d191(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return solnstr


def func_5ce7e87eb080424198c1642411ab3352(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_096dfb764e5343619b254f367e94ef86(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_2cb3182adaf1451cb32d6c09cf6e222a(lower, totalarea, info, slope, upper
    ):
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cutfrac


def func_204bd43ab2f54f3db362846d83762d51(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return oldarea


def func_05101dea7c57453fa9af1b4e003ec74b(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return remaining


def func_ce67687b1d9d4216ba7543b07e82ff12(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return solnstr


def func_01954090af5b40459cb2bf2127c415f4(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowslope


def func_94fdd7adbe10478c87ecbf3385c4ae81(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppi


def func_129fd5e1897945239bec650a8df756c1(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return uppslope


def func_b31b50eec0c540e0acd5e873b473c04d(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return height


def func_943617cbbe7f420aa7f496a73e57cbdc(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return slope


def func_341666010bca4b8686fc292cf1fea382(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return area


def func_d65fd1bb63b541acad2504e86b872982(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return nextpos


def func_7ade06e04ad54c50a732648466fe9c3f(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cutfrac


def func_37c4fb5d15af41a79e83af084baf2db2(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return lowi


def func_8e4f71e4d65241c585e6357449faf872(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return cut


def func_f344f0531bbd488f8c8e64c17b8c0c7c(lower, totalarea, info, upper):
    slope = uppslope - lowslope
    oldarea = area
    area += height + slope / 2
    while area > nextpos:
        cutfrac = 0
        remaining = nextpos - oldarea
        if slope == 0:
            cutfrac = remaining / height
        else:
            cutfrac = (-height + (height * height + 2 * slope * remaining) **
                0.5) / slope
        solnstr += '\n' + str(i + cutfrac)
        cut += 1
        nextpos = totalarea * (float(cut) / info[3])
    height += slope
    if i < info[0] - 1:
        if i == lower[lowi][0] - 1:
            lowi += 1
            lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[
                lowi][0] - lower[lowi - 1][0])
        if i == upper[uppi][0] - 1:
            uppi += 1
            uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[
                uppi][0] - upper[uppi - 1][0])
    i += 1
    return i


def func_042e5e8cc4be4771870790995151d028(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    return info


def func_6963834d056f401989099aa186d4670f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    return i


def func_f8b45be1ddab469aaf204ffc3ce0da04(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    return lower


def func_50765c4e87e948b9830d69f3dfc701ff(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    return j


def func_7b0ad8d023634f5ab49263dfdd61c531(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return upper


def func_ad31ff0a3ec847ae84b1a0d2821dfcf8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return lower


def func_85b5f5e6ce884c11a63da61d102f45d0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return j


def func_5b546cb45a6142579f5ac0cf1a345ba5(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return i


def func_2c7c8f3debe54a7a8d1c3cc0a524d359(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return j


def func_90dc3e7a664345ae8d2fd048b53341a5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return i


def func_8f7c3c4b580240d0980add3dfa99bdf8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return start


def func_b6cd479cca004441adc406fd03393deb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return upper


def func_d0b4938295a443bea190b5e40787c291(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lowi


def func_3694f05a5fa84176a17492f02e2efbd9(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return start


def func_4c20ecab3b874eb98faae2087b2a8ce7():
    lowi = 1
    uppi = 1
    return uppi


def func_155f4c136e1d4bc19986e144d6007169():
    lowi = 1
    uppi = 1
    return lowi


def func_c968e2cf6287455a9cfc1ef9cb986e2d(lower):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_8ed8348c7ee94ca78c7ec3cbadb2da0d(lower):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_2b1a4aa982304db8a5db6112c3fed100(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_91d00fa3fd464e6980455d555c1bcc31(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_39732cc253064883aec93c7ed93040d1(upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_733aa0ef80b04c18a7782de7966440c4(upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_0350085dce8c48a0be5b20e92186ec5f(start):
    area = 0
    height = float(start)
    return area


def func_39ac34cace454fabb2c33b771ad7f926(start):
    area = 0
    height = float(start)
    return height


def func_f37db5a0c2354e4d9a594ac90a30dc22(start):
    height = float(start)
    i = 0
    return height


def func_a9e6ca4437824d9aa1f944844b6ffb5c(start):
    height = float(start)
    i = 0
    return i


def func_1b2d05f305dd448ca9e2a1a051b636bc(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_34985b7326624b71b47920734d91c4ce(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_fac3a77f9ae64726a3f98b344c075a4f(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_30c3e57bdbfc463f94b39f27c1fb233d(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_97e6261a61dd4a76ab6a639c368c1b62(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_7fc93d6ffc1e4eb8a09aee0532b1e125(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_ab71a8b342504e628db9ad357b369eba(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_07ff872ea7fd430798d9e915b7d59a24(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_ba421923a98a46e8a0ae973efddbcde7(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_a83da4ea20ba4cf8a75acc09e6847009(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_ae3e5324fed546268e89bf9a370d010e(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_f2a7725cd5214a84af18a4e144f582d6(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_94af66352484453696ed779ea8a5e297(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_8e323f447d8b4d25b1b1b9d87e3c06cf(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_f1f8b35412514897bb864bf260fd734f(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_1ef47c1344ec42a683674905774c9cbd(lower, info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_be9e2f55f2ea45598d85d681d09e5769(start):
    i = 0
    height = float(start)
    return i


def func_7192655f04224dadb491ba08efea0a4c(start):
    i = 0
    height = float(start)
    return height


def func_5337451925524b7a9cdd0543bc2e7d88(start):
    height = float(start)
    lowi = 1
    return height


def func_1e091ea4864b40978954f544109ffc95(start):
    height = float(start)
    lowi = 1
    return lowi


def func_b27d4df87c5a45eeb731a15970daeec0():
    lowi = 1
    uppi = 1
    return uppi


def func_20d1fa9a08574c74bef2fbcd967ab0b0():
    lowi = 1
    uppi = 1
    return lowi


def func_2d559a2837114ad9a54866d99dcd8a82(lower):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_9f1248396d3a4a1a9b2f01e2157e29e1(lower):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_9cd4ebbf0934482290fa578ab82781b6(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_d38338219e7f4c7585b77d89052f94e2(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_9aee01d3d29346f194fc3f242d18993c(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_000cf0af2b42443fb002b6e8192b495b(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_767fb1fcf51245feb3ec184d1159d196(area):
    totalarea = area
    solnstr = ''
    return totalarea


def func_4e26029b3a264ad6895363e43d706e76(area):
    totalarea = area
    solnstr = ''
    return solnstr


def func_6af9175bfdee41279e319a696babf99f():
    solnstr = ''
    cut = 1
    return solnstr


def func_52a70808e7cd476da6a4efccd1f65456():
    solnstr = ''
    cut = 1
    return cut


def func_0260288b214247eb8c2afddd7bea764b(totalarea, info):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_aa62e0c2e2df4d75a91cbea2fe958cbe(totalarea, info):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_aeb8aff643194f9d96a9747f180c0123(totalarea, info, cut):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_16f6836f2b1f405bbcbcb92c09af9e44(totalarea, info, cut):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_b51d15d9d32448889b40606be7a3b128(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_92e135c39e9a4549b7adb575c57e2627(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_f94fc78d41234d80901ea0c1a21099aa(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_73c172820cf94f5697d54b0aeb3b74d4(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_cc0d13d733234928aa0bc5ce9bc72f68(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_8b188c8a8c0a4e2fb79e3367457d2eb5(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_40b42805b463406e84bbcf8a96d42c97(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_8da3adae637840c4a0c042d639f15165(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_c84f7e10eca34278a6e1d7daca79a583(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_1da88f03abba4adc9d9841b68a56f62b(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_5b18e4032dd0429ab489cbe1329366f3(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_56908b7af6f2438b8da68acc25bfd9a4(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_f3ac2bc7cae0487b935101ee751c54c5(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_bef8df18d6b342d38adfdf2c3cd6243c(lower, totalarea, info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_6ae910eb966340ad9dff93352a85fbad(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_5e40fe1957e84fd39d724afa91637543(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_63d0f3ae541741d3ba6b04ab5d53304c(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_1a7fb24063a345aab8810a267c48db90(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_6d8cb07214504951811ffed2107966e9(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_f2e6432367de4cbe9f825941df6a6c61(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_5d7b182b48d9450c8efd745242418db3(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_70498aca4b5547d68f1372e9bb459cb9(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_3a8a5c87b23043c7b017f56b09971166(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_f0baafdf135b424d8a8ca5f053626461(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_5a9973f58c524a00aa47b77706cf279d(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_149408ad17d24dadb5d467ab08cb0b1c(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_a852da732e244981b84b5febf222d099(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_6251163aa487477ea888157a7c5f2292(casenum, lower, fout, totalarea,
    info, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_161512bdbf4645ec95be7bd49856a43e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return lower


def func_56c9958d3b104d0e9c3f96eb655c05c0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return info


def func_ffbc068a0f304b02a8874e7485fc97e5(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return i


def func_aefe2424727e45668b4f74d313c4c237(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return j


def func_e3424de365e841f09c01788ae3406eb6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return upper


def func_303dc3079b534d808212f172de4819ce(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return j


def func_684eff5f64b849739c490e676157fcaa(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return upper


def func_985088ad87f244fca80af635df0ff137(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return lower


def func_ada467dbf56149a6933cb4884df50143(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return start


def func_592401c30c4b41eeadd2031e2726ffb0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return i


def func_8465edb6bb484818b1305e7cdef3d07d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return j


def func_c8127627e70a4131ac1921217d7ee943(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return i


def func_40cdb018e15e42ae89495143c98c9bd8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return upper


def func_88c1166bf58449289826ec7a16c5b01f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return start


def func_790c3db91a374dfb9170fecdb3751696(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lowi


def func_1ddaad045cdb4b21a3b0d99662a3f56a(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lowi


def func_741785f860174f32a00288ceeb57c848(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return uppi


def func_d5110dcc2f7f4043beffe68073b91aa5(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return start


def func_20d0ac3ea6d845cb82de91ac9aeb1b43(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_98d12b803769451e95a25dcf45d5e476(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_cd003e5ffd194b67a54962151a0af4b8(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_f59ba749e6de4fc296b6b1506b9c7d9e(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_ad9039a6a7ab424bb9117296643740d1(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_69a9b151d5bb4da09c84625d0e1a8bb7(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_edaee19368184451a677eeecd355ee0e(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_f52e625f69d8411aa31399ac2894f078(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_f421e85e6c864a4a81a00ae317a7dc8a(lower, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_4a7865e08a8c4baba4c17a8e8fc5674b(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_080fb535725141988f67aa839a96c830(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_a805d26e09de4e6eb19b266af6c49262(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_55e67cf0ef104b15a0f6854094e64ce4(start):
    area = 0
    height = float(start)
    i = 0
    return height


def func_47308b6315574dcfa9b885a68e4637c8(start):
    area = 0
    height = float(start)
    i = 0
    return i


def func_d048603a734c451695146e2cdec2b53d(start):
    area = 0
    height = float(start)
    i = 0
    return area


def func_d2bf9d10aafc4cf38106b670e9375c12(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_4a1669620a844a64bd58918649edf99e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_cde93f8e183b4cd6abda5afa25568a4a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_3f8ccd4ec57746628c7580323ceb0c7b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_1960031637f04240a3d588db51a4a107(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_4461d839c3384a888680fcc936557c8f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_8f6f58934e7b4a28bb941aac08c6593a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_fca094374cae4d8ea0cafc9cff6f56fe(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_a00e886723c54bcaa78986bf392a9590(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_05d9979e7aac4926872584b02631826d(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_00c73a0e14804d4aabb171a3a3ce333f(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_901ed7892d4848c7bbba6c72672cc235(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_9071b592b37249e9884d92498e6bae47(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_328c0dc73c3048e9abd4f55c43b7fa0a(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_b66cca5a477949388286503f085fcd3e(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_68464ea2abec4dc5ad00da7bc0a4acde(lower, info, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_7804d56b5dec4438bb896193fc2f5a72(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_f018ed07acab48ffae27a4e7f79f744e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_924f6f882a7645afaacf170fabc3a327(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_8eaa9f465bde41739181e9faf7d81ac2(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_6918b37b99ab4e1fb1d7490acdd435c0(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_30e9bc28ed89464493387ff16af6fafc(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_e90d3985c7be4a4b9863fd1303692d68(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_af3993a12d134e25bc1af8d851dec560(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_ce144bdc679f4cb0a21f0565921056e9(start):
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_80003dd005984966bb6bebb84b2c6437(start):
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_6534753546e749439cf707798efdf67d(start):
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_e0056bdedf1445e19599dbdaaeef9f49(start):
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_0fa0ab04f4d9418593f2cd72fd8bf167(start):
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_af5c7b32639046da8cf28edf01da4327(start):
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_2ee37cb8563147af8abb9e042ecd2de2(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_79813e892aa941839fee1845219679f5(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_e21d9d68eccb4815831cbc5d5227365e(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_0ba186104fa5498f9218fd96bec0e2a0(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_30da9b70a4cb4812b6dfbff6db2d72f6(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_d2cbba427632419bb466810cc076283f(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_cc76572fa22c4efab78a7d7cae92c9e4(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_b47ff3c169be4cfe92a8c1ebeb4aa18d(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_aa2ad03e721e482dadc9e9a947b10d74(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_3aa2148e753d446b9bfe102fdf4f21a9(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_c80a3a53cafc4c72bab8b2b142dbb3eb(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_621c636bd0584e489c71810ac14cd66f(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_e59610dbfa9341c2a3b7ec6422ed9fbd(area):
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_a31e6d6957f246fd8e42a28790588744(area):
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_4da1e1f0f26b40e3ac7f860f82e50ee8(area):
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_f16a89b0297c4b5aa02eda054808348f(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_85aaf045d022487f8ad13261cb8d745f(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_3f75c4c105a64a7cb6ae5cf595c07898(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_ac1448497aa3490da6965c680ffca53f(totalarea, info):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_4cecc98576ed408e87e62ecad3729e36(totalarea, info):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_704ed1525dad463eadac2da6477fed7b(totalarea, info):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_15aecb5a4efd4548a84e94f55d784dc1(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_a120149f261743bc8187dcb3a73baa97(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_8b0a486a36dc416cb3c64b7faf24bae9(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_e4ae1cb4e57142188c960d44f99df2c0(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_a46c3bc436a34b6dacc116af3e8eaf15(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_802a6bc7dd4f4356838c98686e8b1d10(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_10ed476782164b8f92490c9ef38bdf4f(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_5feefdda42c04e96b8f10df03664b222(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_c3d3a212d4464b88802806449a296ca9(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_79576ba2aa8e426e99d7bae964a86bc6(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_57920c93a2754483a019f7ac5acb4691(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_6a00125e6cdf4d5680fff191dc94d3d4(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_a002a5a8e66f4d6da55466c9a478bad6(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_0cc666c2265c4bf3bcd823176789237c(lower, totalarea, info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_d34e9851b8ce45968678aeeb54203ca4(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_1c41d08e726b42058981e625f834da6a(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_e689785cd7c64371a57cc37dcd5d7e43(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_a2b82ba225f649188e0d30f9b63b0355(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_8589f6311b9441fca40da8db8f3f2655(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_22fe83aeaecb4bf59f2fbbd584a37983(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_7f40d3ad8e7145309d7863a9957b8ca8(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_4d3c04587bc84310970eec3b6c6acbd5(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_9a01b3a2f764473c9acbaf77d3ac340f(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_5ef132561c76496c9c4e5f720de7f746(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_5b27a577098048218f48a694acb92c1e(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_f9816ddcc3614d64afba3df601ba857e(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_1955347dbe3d42e1ad27114680967491(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_ca75025b6a104a8995a8a7c4ab6cbc96(casenum, lower, fout, totalarea,
    info, upper):
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_20a5cb62f93a4e9aa22c1c1736fb23ec(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return j


def func_176f89c3223d44d9b27040e1ef162ee7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return upper


def func_732c358f5fa54e1fa9cf896d44bcb11a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return info


def func_d6a58349eb3f45b68acfa6c8efae9867(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return lower


def func_82d2bcdd33054ddcb403422bc9a5ad05(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return i


def func_9c392864dc2248f4ae218337189fd005(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    return start


def func_8174a2e05ca447f4af78e2969920bdf8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lower


def func_15813ab269594fd1ab00a1062588686b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return i


def func_c03e1c4cdca54e46aa1e753185e8a9e1(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return j


def func_200e56e51dbb4eb0a259ce8b305bd99f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return upper


def func_d437cb6586ec4ce58d94ded3bded46dd(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lowi


def func_0b8fc725f6b843759d1619854a33fdeb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return start


def func_20dc8964418143fda490cbc63eefdba4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return start


def func_56fad19f468d416f95c7f8304224dfac(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return i


def func_5b4b49f14e7b4ee7833554f7e93245bd(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return upper


def func_597bddeae277433ea2afa23cbc43cd40(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return uppi


def func_779d63b489eb4826a5db82b4c2c72935(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lowi


def func_68479099bf8a4ecb99d6a048da2661d2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return j


def func_4a1aee9069b342b2a27f086a51c12600(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_3c70789180be4fcc87fa7ce7e473fa5f(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_60e06f9831ea415fba994ea9bb4bc146(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_e92df90ff35e462f83070e71b600f2a0(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_b52c708186ca4d72ba568d5343b9a587(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_4465b0fc28c947379efc2b6780638751(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_652f9120ca2c4eccb1ac93396e1a50f0(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_c30f2522706042e9a9e2b57d2f55fce6(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_c72044f94f3a497abb2a55c9c653c66b(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_6521b0c1ca7d4259b3f93cc4547048c2(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_97b38f2dc41443c290edc364fa26f391(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_1edef5b3f4ed4bf4b26fa60883e7a5fa(lower, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_31612e1f79cb45a0b8ea2bca73dd2957(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_e08067f14fe44e0ba38b286ed6caf6ab(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_06866c2b6194427cba3256ff843df918(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_1d7a4496f5e84a8298c0f61dd0abb9e4(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_0d3c0b96254b4d829bf72a5b3537616c(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_a41bf7b10e3144389b0573c14fad85c3(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_2fe0e42d1b404e03831d9113e238dec5(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_a26c86b24a1848b8b875e615f788401d(start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_2c26358bc6f443ac8a177fa4c0683d5a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_04d6e42684d44582b3125504b3db42d8(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_d73bfee4e38149e28a3a8e73f459d962(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_6b6c8f64dd26491a834c560624459281(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_a9155735f81546c49bf0013238f9912c(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_75e76fe65c5844ba8f31efaad7d4244e(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_9fc690dc649c4c1d8a77e0a09ffe2145(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_7310836b3c504254906cc541bebb7552(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_8ab88142b7e14169a8bb87fc501b2936(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_e4c922c0cd154fc7b5040d7664f67790(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_fa2e5407fc024d35aac7ff3e14c54ad2(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_b70d2e700dca42f1901e7d7fec67e766(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_29121d38d1014f11ac6dc39576d07f8a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_98af9f7912b74924b74bd01f8d2d810e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_32ae23694b1a4cd78bb0b5a4d7b970c8(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_cd7055746f314036ab2e11a6da01ed89(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_120ce6d1c09b404dbb70ce8a75796f84(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_6c312e93867b43f9bbfaa270cebb0d2e(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_c827f23204354ca9aa0e2fb7a81cec5d(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_1643aec75430427e803115f695cca9c0(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_c2b9916525484604a67695443f5b996c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_d05cd0d6c61046459225897b318457aa(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_12c905e14829485e848ec4d98e9a6489(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_5cb0e33cae4043018ff4387ea319bf11(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_dbd6c1cce58944b698acdc39e950b34e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_71d7d78339a04bf39f643a71d70503c2(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_7e9f49f51e904599a2ad4420dee685e7(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_baed03ed0d64414f8f5dfbe8fd5f331c(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_94f099657b1641008e726061dfac850d(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_c8feb736179840179e5bd500d7a3c726(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_6ef1520e0c324bf28b39e9ecad1dcde4(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_d1462c06d9794d2fa9c4205ebf2b0f6b(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_744c3b9d14544c858da12b61e02680a9(start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_4fa397e26e3c45548bae21bfbff516ab(start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_dff5ae5cce0c4d628cc9eb13a4edfb07(start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_606a7948a4d2431da49b599f097714d6(start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_f0b7a72f9e5b489d8fea9341ac984838(lower, start):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_a73163a1d4a04b88baf5037efc904318(lower, start):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_d6208849541a497b95e5d1cd3f64033f(lower, start):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_9496423e656d47b7a48626326063ecb3(lower, start):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_ef8d579aad94420389cfa2473692d2c7(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_35e27a4be38341459802b6e28c81c2b7(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_ab7f496f58b94292b08bb0e70dbb59e9(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_2f3f441dc1024678a44e256469fe050d(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_0f583e616ec846dd9dd1741a21da4d09(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_29ac332138c241abb2e3a027c1e961f6(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_9dc1785a4c7642829da6784cbecfe321(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_21a49c4e763549b7b00a1741c1f6db9d(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_4ee9fe564f5b471d8911f77d24f80191(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_cc4afc9521d14193ab6a4bcd9e94e06a(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_7b5cc7a1cbfa4ad3b0eb5db75624b370(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_53cf0b8e874f4d5e845d5597b486b3c1(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_d678a265edfb45c6a8d5dda1acbff4c7(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_8e324b3ba275447c950f8c129917961e(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_3da6b50d8c2e4584abfc95571861b059(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_40a9e8ac658c474b8d9fe4589d0f467d(area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_909c413a910f4097b5ed84bd54c357d1(info, area):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_5f7db96cb64c4cdfbb56db76cd4d1731(info, area):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_e066ef0c715a4a0890fad6357a3b8e3a(info, area):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_6dbb28fd0d654c199fecf5c55438aaf1(info, area):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_65a0168f1b164e4882f88bab008e6c12(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_3c35e65503a346eea26fcfa291365d7c(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_8c7bfe99c23f4bf8b44462e93cc33851(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_d352664e71c4437085052e0058b2976e(totalarea, info):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_a19cfa1c922f4ee4a3098c6674845565(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_237ca77dd5914d12a991dbf9a27070c7(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_c66a0a34205f4ec4a8828887b30033cd(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_a6d10012bdde4b4f972194cf1b6ec969(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_d6135616346e4f70b7551a9be336426d(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_ba60d6421d6b47829d42ea6283eece04(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_17772e174fff4a679389623b9be52240(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_80442ad43dac459281deef8990afa189(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_350db1ee4bd4417d991d6587be1580e0(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_24a69be06e2c4040adc55f09c0594b91(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_5a4a76f385eb4b9c9446878902cd13e9(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_027f763196f04ff1b8294aba18881e02(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_66e374591d114a1494d55cd91f2090be(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_2a13b123ef254ccbbb2ef64f36e79254(lower, totalarea, info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_ed126d09b24549288c13cf6b4ec70282(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_a615ce4053ad436695da4c75a5e19852(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_44682b03277041518a24e04120a1dbc2(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_c0e94e760a9e49a7a5433ef9e8ceaec8(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_28fe7b313789444a85173436d7ff67b4(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_6aa1069a9a0c474cb933605d7dcd35f1(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_99da8a735a854e5fa8b7cc9894c3b57c(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_7a56a2392bac42f6b4c5aa37668b22fd(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_c7190ac3c2c8450891ec32ffbc3c9dd7(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_9d24fb52f2304c01a67d74287c9c7d49(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_c1459e2df5d2436383d956bfe7c20503(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_fb81177dd2054f348dfa541076c7a7d1(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_cdfb8a4c987142859f7ce33b5be0c165(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_4fd70a560649427796a6237a18c4ff8b(casenum, lower, fout, totalarea,
    info, upper):
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_0f522513ced74ceab2a77044bc33a4f9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return j


def func_fc02cb465ed246be82fac3a7a227eb3f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lowi


def func_f9d74795b42448c594477b54fddf633c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return i


def func_40c494e08f084838ab47cbc7c457dc99(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return start


def func_6c2f9da1d762446480181fb1c9046e33(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return info


def func_eb7e440b5cbf48609de3bf50983e51f9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return upper


def func_598b4efe5a344ed791e05b62593a3acb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    return lower


def func_6363f0cb8dc442c59cc1885c1a031764(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lower


def func_2e82ba0bc4a84631a5c980efd36f9feb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return upper


def func_6b0a1a20f7084e4b97b80b700023b14d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return j


def func_20dfcf92e0fa487aa33e8049da78d63e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lowi


def func_83db79687af04c33abe401fa3f79a6b7(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return uppi


def func_2dee1f863b2a414885821d77731fdd3c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return i


def func_ca6aac2a9a8d4800818bdda7dc4b2fcd(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return start


def func_6ed45ffafb6b439396a1296f35b0caac(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_7ab3442f2df34f89a4fd0daaa6fc0fc6(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_7884766bdb7349c4a165fceebd35f4ff(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_7a8075fae7bc47cf935e19e4cdd52b1d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_ed14a061377347bb80225c218c0d3b07(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_4088a8f4ccb64b6eb98a71f0e6baaa8c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_7a3050d09e6045039a9dcb04e9ad33e4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_2b37e3d5808843b78316d7f89d3a935f(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_4cfbd7f6d1104446969dd4c595a59567(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_f7aa28aafea94bbdb671ddef0c2b9baa(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_d930a8c7f6404d35aea51fb07d13b0cd(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_3384d1e468ee4b2c8d40cb7f7205e344(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_f800300bca3f4f50ae904dc010a1704c(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_eeb00a8c2bfe4f8492efe3a5e324715e(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi


def func_5ff81a661e234dbca6e66b0d2344a420(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_5399d4c219af4ba59e7fe0cae5f94562(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_38ddf3a540eb456fbd90b0ac488c88c6(lower, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_2ec1884b6bac4193b4447993c2285bb5(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_df734db2604a4860a6917cf36b1ed6a1(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_e3de9e5a091149a5901ab9018681377a(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_9adfd0a51b994d898c5c0d40be951e70(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_f614b1e5264c43baad979b890f317916(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_cbfbc13a2a624929b001bb7968482993(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_a57cbda2980646c6ad669d59467acf6a(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_94102c0767f5472c942c5299d8ec80ed(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_5b58c6d158df4d038e90e224577ae904(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_af0ad3a93fc041a0be99857abb0fd824(lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_c53143725456435283d58c07db57277a(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_54a27651b1c1459ba5f399bd15d03f3e(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_9b35f1f914ee42e1a44f22e2877a874c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_7922c523414541dbad58f28ec9bed3ac(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_87ba6bde060c44d59005e014ae912966(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_9746e53cf33e4b229b440dba1f1b03c1(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_7811fb958f0644ef9f554b9e19fff905(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_42be8914fda6448883bce39209608647(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_0facee7b87574155a5c1648880a5716e(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_d994de311a894a70b594700b787da027(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_3b86ce5d64494f8199458de71d5301e2(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_bbe9757f18bb43418915a6eefef877b0(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_782c48efe65946a393bcea7160cb3786(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_2ac9ef62b0614664b6b9a0dcdab96c5a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_7ffb3b77624748429ac8aec78be0e144(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_f6d4378b3ff64b869b022ea94a05fddb(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_ca83a10f5e604f549a622df4514b4bfe(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_19095f58f909474f9c9a65330ddc8e5a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_499b2521acf74c70862734ab5b00fb3f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_05c551dbeb68474caf72fd074ed851f2(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_268338cf82af46218f96f2ee5c6d12b6(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_47e0f7b20cd34fea95de06f6ee562043(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_815ff18516e44b32899859b23c4d525b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_200bdf41a13645848c0a0271f8da709d(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_c2388f6f270946ee824ddf99c702ff59(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_1659240247e64dd9bedc671ebe23ec73(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_75d5e4981f7249dbb5659f1399e82997(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_b6f6b2fd8a4c4c4ba345532327d94b8a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_7c91252843cb4c4d8c71caf861ce5512(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_9bed6c97aabe40afba803ec747d3e0b7(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_87a35e9ecd154fc88dfaed0138e95803(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_c8893411fcde4876af16e966d65e9698(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_02c2085b3a894da5886972426f9c0d70(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_acd45635e9a044feadb5f256917e4c95(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_2f8e8fb757d140b6995a6ff5a15ebb66(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_54c1afc758d04cf2923f43d100986860(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_0ad9936a9d294daba10a1bc638f0c0de(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_400ec93049d14e79b797456ba08bfcce(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_e40e3361f9eb4677b05f50e319675de3(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_bb335bf69a9f47b9891bc9de3fb84a82(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_6efec03e305a4c4393cd42caca9233aa(lower, start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_7497a9d2f0d3496294446b5a940ea59e(lower, start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_3fed3b0818c14b81afcb90a8543cab24(lower, start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_3463998505074a1e9e3d39fccf0f2b7a(lower, start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_3e3119b18b494c57a48184eb4efe0e68(lower, start):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_fd44ceed5ed34be68fc04d505764a0d4(lower, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_948249d8fad3461e87e6e09a474f6168(lower, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_b62de6588f1f408db4a8ba0250ec4148(lower, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_f22d4e3ea5ad4980aa73311f68b1d175(lower, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_8cfb9ea9005c484d869e3b2a7f72de4e(lower, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_b0095ea038174beaae4377371af2c547(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_192ad22ef42a44a9a33fcfeedec67b4d(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_303996abbf8f4f0fb35f72bc1d062bc4(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_14b3970855cf49a8b90e72f59886bf31(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_3cdc9aa7a0a048a58f4355aa6dc48a49(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_35ed4f8c18e940c384767c7eaa7acce6(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_afed4a324f9c4b89a9e5435ded533884(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_fcdd480c1d134b92a51769a89d2d2cba(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_3512d62b6a674eb3af631673cc32e391(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_165c27029248447aaae62763fd0cfa34(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_00763c7df98846b6b9c12978f8778a31(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_9cdebd5b77304d7cbf28b23922fca3f4(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_85ace43ebe434c6089d10b254d4486d3(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_31adc14950e240028812449aae2b7aaf(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_778030a5d51549a4908c9a97aa220614(lower, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_38a83be13fd14caaa0437abe15d89d95(info, area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_48e46340241d447eb866773ba2308ff2(info, area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_6fdfc5b3258a41329139f760d8b33a53(info, area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_5090d4d34491474b951f6cce50a1f784(info, area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_2e880dcb0d65497d92874177f3910907(info, area, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_a61b9326b4684c82bd9c8ed9a8b20853(info):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_73acd6bda23f4adba42f4d5b71aab116(info):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_446ac2c105124cb1933799fb90c1ae41(info):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_46288b069eb147ad9833d505f0d06231(info):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_15b3799e19814784a3e256c3626ea990(info):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_170d010533c3494297ed7da3f99b4b0c(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_ec99031775b946ada3315c59e4e00e9c(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_6ed4325a468f462ba0399bd41c6c5a47(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_36e5a9e5e573493aab6e3b9434a42f07(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_2d3197382b844911b3931feea973cd99(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_09228f3f295e419faaa847fbcf926936(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_1124c3288b9641029a8cd421c056d90c(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_b1f1320ca2af4ff4acc01c6cd381a68f(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_698d4a6204a549f5b440b5d6801ae5c4(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_d0423d55ac44427aac6fadc57fb73b09(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_2a6179a304864622a6a43ea45a408079(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_74d07274fb9647bba72b8683b6eed25b(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_347c2f0510d6437a864ca5afc77cc315(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_e05f229f36d34527876bc9cad606c745(lower, totalarea, info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_e8f728616ad14a6ebd3f22947c652ad9(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_cb11e05695be43a494aec244029060fb(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_834ae7076e3f491d969c63cc660b0335(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_e9fa26047bbe47d790c3ea137d9627db(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_105fba70594e4abba4bc7e090999f05a(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_114e079b7f3b4bd198e208e6bcf75660(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_7b4b0ef6b79740be8cf23ae00d4c7902(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_f3e9d945498942cdaee87c49aea98e0f(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_08fb00d690bc41e0be8fae395eeb97cd(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_b1db56ed24d24760b7db63d21c32d0a5(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_520ae1a0b7414c739e46e7d08a62ba9a(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_76455cb4d51048908bd2c059c7f4a6b6(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_98dfe1febc2f491cb2b47329f9a3734d(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_995a8c9985514ff4b52a206adbd3d209(casenum, lower, fout, totalarea,
    info, upper):
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_6ad925db9ac9469fbd163065c5276afc(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return j


def func_17a7174fbc51419e9b701d53646e2d17(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return start


def func_78300cb2fb3d4f08b71f0ce855a869f1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lower


def func_dc5623489f504b33a545cbe7f5970e84(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return lowi


def func_e159acd393a24ba2b7107c7c7ea94f5b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return i


def func_25686b94ff0b46688afad3adf213ddc0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return uppi


def func_41b755b9113142a2ad8e5d4b4b839a0d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return upper


def func_cb8ec4f9d9ab4e6bb97f8d7ceedbb529(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    return info


def func_35fbb55cc41c48e7a1282f1ec2b74668(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_22ba8ce84ab7489cb09c971a170a68ef(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lower


def func_b854435ad1cf48f8a02c8742fc232225(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_777946f6535942729cf34fe862900a5a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_8ed6b1a585c74f418ae100251cb455bb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_0082b62f520a483987e0c8d00e924bf9(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_eb06d9bd05b34e6ab12537c63afc6553(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_26d6a226f3c44bd9bc65e0246aeba8d9(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_28009234b8d94e9e9467e76f9e6cb29a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_29a011aac82647faa80523cf8f275824(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_fb4e66338df94ef096d2ed617e58275b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_5dc1ff1088734d3cb635093958140e4c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_b2983d0324584920a35d4f7a8bfc04a3(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_381e777a26064d6a851c12dd2960a44a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_74813e31d8c248feb7b96670cbb404cc(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_a4d59e2707264e1c8cd5fa6751761928(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_3be621b7035f4b08b5b4b1d6c43aac96(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi


def func_a0c79f53c29940b8a81e515e6fdc8fdb(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return start


def func_2eca87cafd1d4ca2a26c1c9d0b59519d(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_efb32ecb95db4d5a82e6ee0612f60573(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_812cd4ae61ed41e7a692961e480df49d(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_566b63ec601e4285add11f9ddb92bb58(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_c5bdbafbd1f04bacbcb16804f1442bfb(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_4f85b04d47174b719a2a3eb77023b38c(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowi


def func_96514970b6f94916af5e280386475022(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_41e9bd3289a24ed38227253f43af20d6(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_10398d21070d43fb885d9f6c49c6e8bc(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_9b9770adc15e4df68db13d582de2469b(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_ac7fc3110dec48cd81eacec374bf4a44(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_7728875ff58f4abbbea88b9d707f64f9(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_ffb7bc0482ac4052852d82dab51a7710(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_896728fb7f48450d8dc3c32a1dab0c95(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_63a9c6222e76451082f2d701eaa16e4c(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_15f29ba4bc6841c8a559d290bcf52808(lower, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_3da34058913c4963aa8c765ee0e130fe(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_ec8f9e0a083e45c79d3e9753551f165b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_0a5b61670a2e44bb97fe6cdaadd19438(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_3ccae445008e4143b4270252df87233d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_9e15552d586749de85a3a7cee6faf639(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_998c748a8418454f9eeb25dc7d77e5ea(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_3363451134a84d63af2b2aa958673038(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_b7afcbb939c6490db5e9c3fd580f71e0(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_afdb7ce8082e4b5eaa8f7df1a0090da0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_6ba51afbc19c4cb5879b6be91bc6cb3f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_f3239901441d485e83f4c5e67f820584(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_b6ff4736877240f3ab848bae7be2b65c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_594a3ad1f20145a0b224548a9acf2c0f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_3a8af534417b424fa23b52b3335690e0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_f71df8b18fea42b6970e9e3e1da83988(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_254c66ff52874308be5728c2c7320cb6(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_580a493db8394219b580d8bf79a83c24(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_37b09e45868f4f46aa5c1be8a14fb8a4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_564c9e85e5344245a1faa9053dfb5769(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_cca798ee5ad242e8ac80ca592a6da2ea(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_97b606fb7ec546899aaa925d27a9abe3(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_ecd7640a323345209e602c3b958da785(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_1572df33a08a4dba828bfa8fd9357cd9(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_2dc3ae13ba4f4a9d9a94b1ccf33ef99a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_a29eced2c5f440c6a7a5c45e56077424(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_641ae3c0ea724c0485baa92a0eae34f9(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_423acca728a841b4a79d589580b1a071(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_3c8d98405b9442f491216489cc70cf13(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_e9c516c2d5314f9eb95dbc0d930b1b1c(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_b862e8049353484e944ad753c08c1674(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_6ece51fbe71d417eb27d7de9b1c80349(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_5b87fea7c4924770912017666e9b3b2e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_5a8c0086360d47b4b3779ae42918e530(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_29b70b758da2444db091f0dcb98cb655(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_82ddc1796b9740efb6d6fa25d45ce9d6(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_caee23adbd6f4fb58de9a0ccd4fa4e3a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_cf25bb008bb14add8678644b4ab02ee3(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_17eee805b55640769304cc71071de21b(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_f0acaa3e2fdd4b22b89c4545e5c5da2a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_0febfd88a7b34426a421a0448f7955dd(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_5c234bc4a1d24f3c922ad2fd4e061e39(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_7538bf435ebe4924a00ce1c5a6d85b41(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_0fef7e107dec41928d15eceaaf58059e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_fd0ba09ebea34a5ba7a666b10c8a139a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_e75dc28c3eef46f0b85a6620557f5ba3(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_a45b7ed35bad497b9a1cc859ed1cb48a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_8b50bebbc3a6465981178a422879dc6a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_d85b0cbab69d4f0f8dd536a5f2c021b6(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_03300357be2249b49cf9db2883182680(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_97c537e23ab149e18129e03244fceeef(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_376324b288a045a49bc48dbb6ffcf8a3(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_5c9f93f2ddda46d9a5286bebf46d9db0(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_26af8d44a31442df9a00068348eec7a3(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_1e9c3b4ca6bb4b0a8104b6950ae448ad(lower, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_8beb5d17c7b440fc9a84fd853c6e94d1(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_1ce5ce11417249a6ab37d6a21e46ed33(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_2ea031e13afb46baa7914105ee2f6867(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_d5ed5629559040d49122d5c7fc22a951(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_4816fab3c16a4530bc68db11cf05b1ac(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_dad2dfc13f6a44faa8f75aded905c48e(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_a0ded670823d47fda35b94501b6e7d93(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_3518a7910ba545328a9970964d804160(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_ebbe8e16e99c48468629b09757a7bbb5(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_a72c382720b3470a9402dfdc155040e7(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_1ccd63feca734b3a88c95cd9bec5f746(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_415fa661c6f44f6e9c67808d262c9c9d(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_c8393b24e603455a94a82dcd47a023a7(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_d56c20542b594626b5a1bd03ff182331(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_b7da018436934e46801878c45eb8b114(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_19eb915ba6f642668e0538251a23a579(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_c255becd9134479da325b7287f34565b(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_eba7b66b710b47dfa51e7e8160ed3336(lower, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_7f480ded29d746ffa12f6173ec614b58(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_1a49c31a1fe6471b9131b66d6005117c(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_c2cbfc71c46e447dbe3c11c657eda43a(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_db7090d778414f329bbc406040d5f244(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_c07f4049c0904429b1769143e327d748(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_b2ab8948ad8f4ed8a679ce132a511c92(lower, info, area, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_88619b91b5d84743b66ddb132534b2d1(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_604d22b4ba684699a8d6a6679fdc3f76(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_44de31a9953e447782ba72b971a18fd6(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_dbc1681fdd054388a67948d9f10ead03(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_fb49057aabf740f7bb8568d3f87fe9a3(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_4165514049be4e4eb987f324aedbb254(info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_776b88fa824641668da007b48fb211cf(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_8720093310fb43ddaae30ae2cf48c376(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_192655cb30c245429ff0edd2d0fa21dc(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_8c3dbe995ca0478c92cd4de428a994ee(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_e045619475a148a1a56f182124951dbc(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_cc0be737aa28429a93cb9f1969e53408(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_259d96aca03749c4aef4a41793f79240(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_3f5932e5190e4a6da41da7c44bfb9ba2(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_5482745d12054650a78337e2fee5fd88(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_328a35789aaa4dda8b3934d3e72164b2(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_aa65adb3f96c48258632fecc7a87ca1c(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_fb3cabb0a09340afbb3cd593575d5a90(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_bb2563717f6149fa9d1651540bb30425(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_a0c31ad235984ef196142fd66379972b(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_8a31a671d6904df0871ecf066d4fda09(lower, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_00f0df19507a4b2ea99ed45d6ebef3cc(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_9febe7da43e44dad83e7ea6a9bb97b05(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_b1e7e780a8ed4f0da648225d60357252(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_1b19d130352744abb388d4e13eab6cf8(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_788f02cce11d496a90349f6772abfe97(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_079bd4c3ba6249909e67cc89f77631fe(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_7a772a60ea7f4c92beeafcf66fa277f6(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_f63e3a065ea4476bbe56e3061572d4f5(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_50b239f642174086bf955dab081f91c9(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_2e10296e18da41009e3df8890cf773b9(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_70e9ed05a84447b3b237fe694e120db1(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_53389c1604d34c0eb6c471efdf909d84(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_f2343e57e9024285bdb8ffe9821e0985(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_fd644e0bed924aedae3eb0159dfb5238(casenum, lower, fout, totalarea,
    info, upper):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_a5432330163c4687a95ae236a68016cb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_c44dee55cec54d9f975bee7a3f61fde7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_e710226bebac425f863d061b5e9c0fcf(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lower


def func_5ad47c894d55466ba575b79b0a97eb8d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_c177b347a7ac435d99c347345cc564b9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_032d45fdbdc64b8eb17b6e11bdd87a05(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_38edd824d96a4de5913e78f4c06a42cb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_97c33998a6a64bcc896b09e57a202694(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_d5fa86dcda7948658639eaac5bff98e7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return info


def func_8253e2905e354705bc506ff11d94d58a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_7133e613f7884a43ad3d9c132456c0ea(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_d044d24c45f640f58d9e31521aa20d49(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_f7fc451dcaea47aba696fe9576a1cd78(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lower


def func_192f6480a0c34b499fdb744144a98a05(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_5a6842ee51b64bf286706f102bc7e647(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_1a7bcb64d5cd4a16bfde3e9658cd6b79(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_e84b609049e149ee8d6b7dcb1f7e20c2(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_f02d478a31b1402ca98235a7f025f27c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_b8e70f09daa446b281ffff9fdaf33a1a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_afa15d1a8c6b49ed902791272f243086(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi


def func_a623c5680904494b92dee0610a93fdf9(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_bb53d7a96dcc4fe2af0bf7c4ebb3cf47(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return i


def func_cecee3bbb6554145a7b8d6ef43d86bc7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return start


def func_5c398556191340fe968362580a8999ba(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_14be0d81f75447728ba742a1721096d2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return j


def func_6086f7212e1444969d54568765511817(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return upper


def func_e8d4ddf39c39408ea2e228e15f0b1d04(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_24b00624a614428b9063381d99e9f8ff(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_e7f7c1c331c24b938197365acfc9449b(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return start


def func_a096a0326f3e41cabab6f45b8df545b5(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_ceb31af427a546fb80f7036e99302a2f(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowi


def func_60657e2ae7b84a5ca722e762d973509a(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_02e3cb8bb9ab4abaabc3c51520622b27(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_95ba1000941d4766aff238750abe3887(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_ad67eb52d1ae43c1921c481620968d35(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_398295c6f9784ce586019a32386a549c(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowi


def func_50c0a480315f4ce6bfcd11bca625b4a6(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_cd668271afcf40dcaa2ae5e4cb345d6c(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_958b8f47cdbb44ec8a38bcac9f1e84c8(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_1c95db260a224d26b6e113dc2a0e0363(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_6cb998f832e643ec9a80dbe641a47cec(lower, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_aaedf42516fb459a979ba9129e49a109(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_08985fd882524d4eae57391ddc6a86bb(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_50dc4cb5c96848a4820addafdebd7190(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_6d1e199d86034582b424975c62df6560(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_bd834a345356422b808c34783aff61ae(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_6e8c374515bc40159e266f8bfca24629(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_8d7638047f684d53b1c77c1c499df202(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_1a110e2673d340cabfbedfa65047a158(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_8ae962bd268e44b7a523afe699e1d429(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_ab7967df6c6d4c128f46964a1dbf6bb0(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_ca6fb4e87ad24188999c47a6e4d9d846(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_a41afba3ee5245658835220315960415(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_e2e6e187006d4fabbafa02f3d7cc8a10(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_408e8eaa56f54a95bb65c70128b7505c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_594c73cb0a86412c8ac78a4c1d2eacf2(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_83cca4537dde49b3861e379013046e72(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_141c9e4d135a40708b857bb172194008(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_b39cdd9a01ce435e86164549e1471665(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_563e8a42019d4ec0a36f600e53041ac1(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_1b04335213f74111a9f2ace2aeacfc3c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_109fe4e8a6424a029dbcbce5514d0078(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_d5a60385b249475ebcd9933caa7d5839(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_cbc5fc28d7074fb78dfe070611168787(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_8fa2f75e8aa94631849cd5a956233f5c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_9c65c14574b94824b3b817d65993f40b(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_eb6211c2f842453bbed214cdf1a84243(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_06c753e26949451badeb5720012620e8(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_d34f1ef30b8941528c6b085f0efe55d6(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_2322cbbc31d5441586359076fad94a6c(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_bc24da21823942dfa75304db554e55c0(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_345eaf8cdd394504a6fef935602341c2(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_e5c229630ada48a09bcc9768895983d4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_f7595a0b6e0548849e7ec598bb46564b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_ea67d66bcdd64ac1a8f2845a27086284(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_02c1e6356bf44084adfb817fbaae5238(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_40543b6233224ad184a6854c106025e9(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_917b5637bc024975bcf3dce10f27c616(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_61296bf894f54d128c48757c969e42bf(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_139a837fc07a437e8e6383232f713914(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_5b50849eed944169a5f63df81cae7e0f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_b209367777124e639837037be607c76b(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_e259d47dab19439690d4fe196e0193ce(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_71481f3b07ad47fe9c4893bc6cedac89(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_1de939ef7e0947f7a28c2c2317963e79(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_4f816d22324b4a99ae25617a1fe70a54(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_197b2022f6634aa9ac78106ac351b71a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_f5485d61489d4ca29d5e7486a0015d71(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_79989de0c15d45ba9fc8fec875fec899(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_000643703c90457eb102b10737308d0b(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_a98faf921edd4d9880d6112431c9a932(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_b29e1661a34e494780d5939dc4f650e0(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_cbf61b5b5b904be09b3033cf0e127898(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_840df1a6e4ef4665a4a6c2dd6c053589(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_e518e8bb1bd1422aa31ff196cc52f274(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_09b25e08d691435cb2fedaec92ad423d(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_0d5fa2bcab0142d3be09f770b3ef45bf(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_8855563defd643c492631fd5371f7c95(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_ee5237b0fff4469496e98802f412662f(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_b3361def3b1242c7bca1f0c98189bd21(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_faf1ca089ca94029abd3ec558aa6cd72(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_e695d5b86de846edb307f23f3a01bbcc(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_32942f9dbcc84f958750f8a8086e98d5(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_9e078b075e084c1aba1a7ba85ec2cefa(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_b66a06d5370647658ef3818d126c5a8f(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_dfdfa98d3cae43ba8397223a41e2b5e8(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_8b67898873c845c3ad00d379ca376178(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_b4b2c27af2534a76baa5cd812ab449c3(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_8205167a3de04d0090480721fe9c1cd8(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_59c02d03ff2f4ff8859b574e7ae329c1(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_7fd5477f8dca475898e6342dc04bf793(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_8c811328038442ef87d11101417c0ee2(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_2ddb6b5453544af6a4f4686fc438fd13(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_f10be22ac8f74bafba955b5bf1222ff6(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_e3256fb8b80a4dbfa3ab41c3f4f7c6d2(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_1660061742a24946bc5f99caa7779bee(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_8f7f45db0bb74495a5fdd5deeedcf3e5(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_9b0024ed3c4b4bdca3c2d48af8d65248(lower, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_309a218c36484adc8ee0f1f1f1b933e0(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_de3a9c5206c34e69b8da402b64ccc8ac(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_fe35a33c7ee547588205c17163481615(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_23680797b55543df8a90b21f2c78049e(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_05da829aed034b408b6b39633eda93f9(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_7a8b6c42641a47519ed4b3dc818b9d62(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_1cdbc185d4454f5cb30895cd39d985eb(lower, info, area, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_5d04c175e34f4a47874523551b66cb23(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_25a349b1fb6a49bcab0e18e122d2a427(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_f628a4d9773a497fa37784524c13f619(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_d562dcf2f2034b0a98d2774546fb7cdb(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_8ebdfcd6ee1f40bfb61c795de4cc151c(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_3fb59f52d6ed4b1f9099c0c59dc57583(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_d165627e3c2e443dadd2194283cf466d(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_2a975a76e5e6433c9e8f937050050aad(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_0618fcf619144ccda1394dded28ca0ad(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_15bc8843e0bc46febd468c593bfeffd8(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_c32a845da15f447b8e0447d47780c14c(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_0f9d124e66f14d778059c7b5c115f677(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_b371236c07ad4e8e89fed39b90fbf55d(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_c768c8a396754af3b4e451d7c26fdee3(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_27e7f0d01f4e42f0ba0598dafe94e0eb(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_c85f7a75f4944246bcb51c0f5b664c6c(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_a63186e08580418689e79c9f99a38657(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_bcc7ef4619d34e489b0e91bc2703cdc6(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_21e73c3f69e14ecfb8270f238ff89482(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_30b4091f83ec428ca5e7a35c859a509b(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_d8c10e276b684d668245ccaf479faff7(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_ece69a9df00c4875af7d10b46d2f069b(lower, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_c2cda357018241768ed5fbb38b253699(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_0582bc92f39f48478b8de2780912a8c3(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_511bc8e5bb124008942b08b7829b0826(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_11b8e3151fa44e2d8ac8b76cbe4320bb(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_9d4939ff61374fa78a8625d110cdc378(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_acf5ca3566cb41fb96f3d1d134ec400d(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_cdfd8729247a495fbc392d0d03368563(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_fe1780ad0397453182a5e8f958220c14(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_4b71aa116e664bf7b21469b5d4ebb60d(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_bf73560fc0e3421fb6f76c3e87a1a55a(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_ef905c5dddfc459ea103543e43e5a74a(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_5937355680f74f07b6d638a01fb95d77(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_c4f82bf416ec44bd9c48124796b8b741(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_68ea4838179f44df88704e8d19858050(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_33a6431f911c4e5786ff7608a16d1861(casenum, lower, fout, info, upper):
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_1a68f5a8f27a4595b13e1f67e4dc0178(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_bc22aff39b734fd398f497fda8090946(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_8b8859d54a034527a69131dc1fe9dbee(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_065faf92e8554b5fb254c0db793e6854(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_e5923a30f3e3496daddaa05fe871e80a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_d93ee13dcf214b44ae2ddc5df569e2ad(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_4667ab3ba732480b97cac63d648eaf13(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lower


def func_66e3a621fc6a409f91fc9e664dbd11f0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_c4b9915571204801bda131025679a8f3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_41c1f017d6dc4525b8a49f89059d2478(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return info


def func_8bcf82036646416382c55e5aa42dde93(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return start


def func_a17242a6e6e0428d87f4460c422adc5f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return i


def func_2e1db59dcb57456bab12b276ecc99b3e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_5ba5fed86bbb4982b36c325b3533b597(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_7533b6108eac4787ba75f3e2a5f0f12d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lower


def func_5cde02f7d3b34e0da0d2a55c32961287(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_9d51cdac731d4b04bed5e4e9aeb1af57(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi


def func_e8e0f41a41414c03b64965706f7d7e19(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_00958b83e00d43e8a4fdf8b6d496b2a3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return j


def func_73242f5aba1c4faf8b7ce786568465bd(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return upper


def func_13761474165840b091c6d2cd36856d82(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_15f06c950b034c01a4bf1a87f4e0d87c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowi


def func_e0b15f658c084901984644804890c6a7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return upper


def func_6ac30f9b088044678a72af0134c4e779(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return start


def func_1627183f074f498fa414193851c95ff2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_dc36711eb4e441cead5554bb53428042(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_b984b1da00494c9d97998caeac14b52e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return j


def func_6ec45699362447818dd97eea174cb6c5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return i


def func_88c7002a56eb44639f3141f706a7c25d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_b67a05cdb2cd4835a72126f3f61b9476(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_00b9c68835de4c33b63a17b761cdae11(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return start


def func_819877019185449c81be38acad9e0d7a(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_66ca0a37c4144b698c4c21da26bbcd01(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_ac9cd5e3150c475288dfb7f045ad1a0c(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_58eb73eed9f141c69e69556be7499885(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_564d42c2920748628ab004bc687df52c(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_e50266dbe5064e9d9fb83e19172df3b8(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_e7cd4f2c5ad947a4b832cc0b847eb5e9(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowi


def func_18a3989874fb4f0e844917a59a9253b6(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_3f3e5c9365a049a4be8c3565de8bc328(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_da41ae4fc2454ac3b334c300b60edaf7(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_cadf14da799c434f8b520f829fdafc53(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_1629d4f29a1d4512bc5ef87c239937e5(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_5be51b787dc848269c3ef4fffd788e16(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_29c3b5cff2514119848b3b0fd06b19d4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_bd840fcc24744a3bbd8dbafcee215b75(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_e0838a3298fa4d40b0107d3a7a06f2dd(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_11ecab31e8224817afafb787306c52af(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_f294bb448d3c4f6fa723d55afa1ce654(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_5aca379a34174384bb4d2cd9cad11731(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_4a8708daf8c149f38f0bef27c693b210(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_f4b261dd066c44cb8ca1c135eee489d3(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_10bb30e821894280abc8fbe4b6bce50c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_9f8d03c6c8e842019af56d094c479c0e(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_0d3ad0d5e05747739ad1722e2048d0a3(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_1268b7edfbb2454fbc17542e7566848f(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_cbbf74c488a14c2d9479887202f542dd(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_8fc14b701fda4e5eac18f5d90ad7d66d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_0307677de0fa40ffb2deeff32171cd96(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_16ef933f92274e94a657535780a65972(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_e72666c6d38c4cbdb43e26867aad4e35(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_c4ab86e7c70d44af898eb6b1226b7d55(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_85c8a19dd0b24305811b1c62e6ec8b60(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_44ba5121aaa34f918164494f3b77b78c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_e260372e4fd147edb39e891c35a1a8ad(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_f09cb46dfaa84311aa4f9a2326c898d0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_1c061434850c4449b42f6c11c02b54d7(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_61e28e6e1fd743aa9ff821c62eb46738(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_52e382d9c93a4902b544af9b631a145b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_b5c4a5deb77b4117940f728204f60bb9(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_447d4c7f4d36440abee0d51874913d4b(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_057b18e6b543435592434d0f2041a047(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_eb44ef727eb34a7a9ed4aca34d3f83e9(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_dd10903a003d4157871b1f31e2678380(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_4ffb31da23a040349b74564771bc0da3(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_caadd35feff6406a828261f6734df026(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_8661b7768a58478b9895f6893755ea77(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_d2648e1f64f34379a5668502ae0490a4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_e24ce3eada2a4d4f940cec87c04cbee1(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_623a6a44faa849d3b9931ee0a8c53362(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_d8cbbbe1e8434842bd0b33401143f600(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_2f714c5c3c094b6f9baf4a6bd287baef(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_9631d35a99fa4d7e9ec9ae948a7edd2e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_aa99fce775a24dfba1f772ac511e0c01(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_5ebc6b055dee44af8f09d9eeb8fce0a3(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_3a432598a8a14aae97d112c38315d228(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_3bf05d9ca3ef44b28c6fb67aa4685bf8(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_e0be4211cef94938b6509d0428189e8a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_5ff807c955cb4bc2822f8f7c0d8b1dd5(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_ec136b1d150c4f12a1f7c0a3e3172150(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_16e89ce91bdc4080ac84a7431aca8d11(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_0705df11af684103a0c6140cf50dc4f6(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_c246ceeda0564e4cb0c7d45cff565546(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_6e7456afa499468aadedb4f13359e38b(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_ec6fa8124f07474994226daa1c2ace8e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_3fcbda27a61346da9869e246ed33a6ca(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_715ffbfca3664c7bb70040f35399c21f(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_49d5c95627f94d27803d27d828726dad(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_0af2f6270ba8413395e1adc5030110e7(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_291f7b90a7d34ad3b9e7f7b904dc77b1(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_796fb5beba1f4f9d8ec19bb49f8307e8(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_b708ecdb5ae14cb5ba06dad7062a72a2(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_08f0ec139b084a77a10f63212a3f36bc(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_0fbcc8c0adaf4227beee01c599f7d692(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_faca7ffc5f744a99a37f4c742ddae2bd(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_12881b927a7b404fab317246647c9700(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_635bdb213a59452b995a44b28a6eabc5(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_d5139e80e2e24047b9dff094f923b0a4(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_d1db275f618b49e0af2954ba8190657f(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_0af7ce549bec4e248d24e989bbe8d0b4(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_dcab1589496245c3932d7c7d28c3be85(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_73aa3d54a1c94e41b02504eb5a1b5eac(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_bab10dad0ad948e880a21ec582cc553b(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_f9115bc1a4df40878ae7e577bb2ed77c(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_5d94c9a28bfa4a339979ca044ad652ac(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_a53fd0159e964377aa272e7b3ff2c4ca(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_023455dc5ce448459aeb69bc68ecfb61(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_d10a442865c1424c814f204a060db30a(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_87e1deaa94f8411a9384123ada4bd10a(lower, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_b45478271efd405985f8a9af83f0702a(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_93159a0962c34198ad7e5cc204ea850a(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_eff662d51a70424788227c66a16177c5(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_e464c903f57a46ccb8f7de90b6c96b17(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_3b0501054ee9405eaaefae1fef80e776(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_5eb8035cb2d44a63808999dff0ba1590(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_d07705bce4ea409dad853d435e3127c7(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_359f369b6a894e2fa5cc2583ca1a8d7e(lower, info, area, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_6504313ead5c4a03ae79ebd2acba773a(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_28001b82613e429a96db41e7931c6282(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_146c6238e6e042b089975317d8ef7738(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_e26f51f565fb428b89f3ce74d0fd771c(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_bbbc482c1c214e5c82744db8574c3bf2(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_7dfaa75760ca4acaa574c2c07c7979d9(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_4c88f9bbe3844e82bf7845356ff1e5af(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_e218741b5ad84571a4ecdac9ed9aa709(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_134c0a737ea243e1a527c5cd9056e9ad(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_d7c7a8b63d424fd2973e8151991a25f0(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_56c57695b6cf4556be2c343ea37d9483(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_75dfcff7f6bd4bdeb18a73fc09b72bbc(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_5352460623ec4f478d02b83ee5b83628(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_211c34186b20486083c5f610b1d6e0bb(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_15129bf85b7d4de09634cc087bb7022c(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_56edf58da2e34e9994d52b4f8431078a(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_dc09f545af5444f59cfb1317a0e721e5(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_0fff6000aa0e4599bc915ac601c38702(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_ff2f2f639e254eaf93f32f19703a3461(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_0ffa19d029164006b901cc2d6374a3fa(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_547a983a6abb4fd89e4c4f6862edc9ce(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_d4b95ae8171540f980d42183a55188ad(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_9a76bf907d504369b2383c9c8c789178(lower, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_220060c99d2346b8b9a67716a97360e3(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_96c434282ffb41ad9804fc931ed5d055(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_28625cab61624ed8a1a7ad3f64c0eb55(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_98115087f2d247b4a9df86990f53d848(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_6bea92ee5efa4b079fd9f3fad5e13307(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_eb0f6cc164704b1bb768592787ed2d9c(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_7ef9aa1fa3454566b7f7086c58a8a0f7(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_cd4006ff7f5644f4b3ee25beb52158cf(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_43db1bcda39b47bc94192abf1404a08e(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_79ad28754d9e4375be078314a898cda4(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_890aab6b225c4b65922cd528f9e3af17(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_5d4c540c27f94837b587194a325e3a67(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_2cc115b639004cd4a6f026fad7083f9d(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_20101f5e56a84f5c9f52e0694ab87057(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_b61a58f698cd4b80b7566e8b1b38f1d9(casenum, lower, fout, info, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_03f428bb4dcb41bc928706e10bf20aeb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi


def func_9981ff12a5db46c89b4c90bd1e42e7f3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return area


def func_71bbe6e7331242259429d2f0a18e467c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return i


def func_8d11d5e4cff84f73b4d346125f8ba06f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppi


def func_7781bfa1e3004151b61c37f30e54f09a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return start


def func_093c574dcdeb487cbc668d5fafd745af(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return j


def func_bc3d44867c504f6f80124a6d6d264b57(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return info


def func_186cb01e0dc0448387fd3f2feb5ce479(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope


def func_633f30e101ec4826b19d764b4a3bd7e1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return upper


def func_d9444f8f7de4467e87610c45aa726a06(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope


def func_6202fffec1f340d196cc12c8162a3078(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lower


def func_869b647df430479dadd0b725321795ba(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lower


def func_9b0049d743de4242a3cc4ae2a02c1fbb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return start


def func_930a3a6df4c041ad83ebe732e9b9a90e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowi


def func_61fedc725a4641b5b0ed995fbdd357d3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return i


def func_f05bab4ed7bc4c2e91a4eafc659e5f4d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_fbd86717efdd4636b457205c4a6af988(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_0c8af4d764c94de5a117bedbbb870ad3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_4461d92ae4e84b0fb0e92f8864d19efa(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return j


def func_d486cfe4cabb40ce9dd3b9c1a3dc0da8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_3578d5513dd2451ab6117a8ffb5c8013(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_901ca3312cb54a53a2295edd2a6b94b0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return upper


def func_4acedd46d1a34efd8ed3c20f23a2c556(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_256d0a1389e14deab4823fb9af26dbba(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_d87697a6d816425496ff1a45ef3104b0(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return start


def func_18a845f44cc74f48a736ea20d974a669(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return upper


def func_6f0977bfe6864c9f915d6c88e3c26f9f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_1c3d7667b23b442f98d9cc3b11973d75(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_1b915182498d413ebedf2addb7a41688(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_c5acf4acba7246588f62e97e4a6bc291(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return j


def func_bc92f6edba3f4e73bc5aff06dd35dc55(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_4b797cef7f824518b3409f661d945c2c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowi


def func_dc2848279d8f41ec87738b95c8c2e688(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_721a0a8d3a6d485392b54829dc70198b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_25d67f30f2bd4071b1e51c2813d61cb5(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_0d8228803cd745d58380c37c455070ae(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_a74570fed7de4989969928c7ccacd662(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_5b424e0e4cf84d0fb6e26075b6ebc563(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_0716534a2f434affb771b3883f61e420(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_f2b6ee2d25c146f38d839fcee755ff35(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_d90821aadb2840f4b5a0be1411d674c4(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_66219c20acaa4ee8888796e45d984873(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_6b2f7d4b6d174cc5a96962e8e66ba3bd(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_8d68eb977c534f418e0faf07f223e9b2(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_640fc15897fd485abbb6d5f2a8db9f29(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_09f4eaa8a5d74a009522b4db096a02df(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_54749835441d4322a724c4eeba8927b0(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_d51fe4832d394dfeaa4757ff5eb1d0b6(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_f84a2ca7f2fe4b848f3e9e5f1602fefb(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_d3c490c1101d49248cc26740827630d2(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_24872f4200664787ad21c0dc5daf6579(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_f6f19d2eafe343db9961509a03902e53(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_9205d99d78304632805e013978ebec96(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_a475683521a940ca81a5a04580b41ab6(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_061ec1cf4e454e86899338f1b87f41d3(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_b79687e83440448398c2460a984b90fd(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_3dc49768226c4f7e8320ededdfc87471(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_7a55169f6d8b46d28a3d6c50f07199a7(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_efab8cd7471044d690f361249f88daf6(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_d214ce499d0f4614a20e32333e042939(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_e42284b766d844bb888361a6cd4e0ea5(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_e18602c732324fb9a4cad894648cf1c1(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_b68d6e09c0434f81ba14d4efffd15331(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_42905a9ccdb9471a833eb52079563185(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_4c712db49ce64a0e9a0fbcff6d822198(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_06465d6d54ca4de3b5af5652c28d9eff(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_75c09b1e472a4ae289829dcfaaef3228(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_0da9d488943c4a84ac853a03a6fabb10(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_7b493d88becf429ca50ff0dd04584d82(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_71433795860842f4bfb30c2c363b4fb2(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_c734c9dd0dff49e8a2483f6ba7560073(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_069f2c8de2af4b109ffd83ec356d1e5c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_f36f996bce09452d837bfad20845587c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_34d82df6575d41ebb7b13ef2c742d015(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_60e61840cc1249bcaaec3d8735bd4ca4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_ef6420b97b5e459999a7f1268bfd642a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_193fc3c49ea34d3791605d750d0b8dde(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_d27d53e9267d41a2bfaed1e1e9cc455f(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_bc4fb1f89eee4083b4658a6e8badb331(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_600005329917468dab0d17b27a02100a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_bdf0072164224e66af7a29e12c0b95bd(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_7e727baeb068419da3e10e8e0940f100(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_c67ed31d74434ea58d07dba0a3d7056d(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_0c11c5778b8245b28771d26dce0261c1(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_d1b2f696ff8f435ba351c17385fc5b66(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_e4e570b29d7140d6b4c922341e0f7917(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_f3a3864fbf6c4eeca0913a0c3b1d9a50(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_7780540c0a8e427b83186496e06de8ca(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_a5a06eb1bec4494a96030ccba90b9876(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_a7a66b0dcc1e489cb391ee6c4da91aad(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_4188c8bbcef642b295ebef0f3e9f303c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_39efc60007a246609273d230bd703ff8(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_e1e83f2dfe2f4fddbb3f192cadf73515(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_9b794345d66d4e319d428e788a5100de(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_8b4a587152234ed2a09e78a4e0dc602c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_102c7ea27ddc4e03bde8e59e2f7b119c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_7c78eecec3c345818c6eddc3beeeafc7(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_ab48a8ba8a2a4872906ae253f2bea545(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_5aff8f4bc3144e8cbeabdd98671faf44(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_074b8a7552d14f6897628330e44913dc(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_5238c03e21ac427f81050017078ceb62(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_e417dec60a934fbc9d623d8427f05155(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_2e3c9d2674a8485cbfe92814a044880b(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_56a548d6d0c147b288ca918db52f99dd(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_861e2c51587a4108ae4225a42f7852b1(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_1715db38b6d44a8c8bbebac405c47c68(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_43dc1b2bf2bd4c8dad1c45e9cda823ae(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_60867c8ed1bf4abc9e99f71e8b18f108(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_f6807bd92e2e49ffaf3be985ece6755e(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_66277a60029944eaa05a4fbbdc5c6449(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_373e2ab6103f4786895ab166e5949d67(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_f3dd4f4b32ba41c9b26afd414873029c(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_957076aaa0c442938229540bc3dec62b(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_1286b891c8ca4ea0bd6e5d68c92a45a6(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_6f88150e644742889fe6a975d82e1636(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_88291c69c1764f7da1c2e0249b2b36ef(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_8602a5955118430ca4b048cf4e9e86f4(lower, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_fd5bbd1039074991b348377c4d7384ef(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_04610a216e304d2c96b60bdf61772a98(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_1a402ea6313b49e6bc130e9335550c49(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_531057ce183c49e6bc489aa87b9bb691(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_cf49909efca74ef39d51b562dc26819f(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_0767c282291848c8856a4a0e2f9da6ae(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_b69bec7aef6b4141b066abd60b056a72(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_5e1546173b20418c950f28890b941659(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_41fcada9f7954cc9b2356c38fd608333(lower, info, start, area, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_acec4c5d7139406386860d7f70b21ff0(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_1e7b5b30ab4e41b1be00065cbba7c2b8(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_d50ddb9c637b4e1e87e1082cdc83ab11(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_7d49010d9ee64543b1d8ee50abc49c81(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_9f2fbb01db114286a9a2201b312039f4(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_2c8d32d457c8479c9cb8312de4a6ccde(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_3798b408cead436494b7f1f263cf0241(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_d321bd692f144a8bb4536fb3a050f5db(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_d42487506eec462f95f2cffe4301a3f4(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_c59fe2db92ea4e3f85b3dc2d4bc33b27(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_95057dade249448bb06d9cd471d0dfb6(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_e2dc35269daa4d64bcc87da877977141(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_b98fe32a614e4df8902a8b6098095987(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_fb851a677ea74857adfcea5f125e630a(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_c8d04646c73f4444915b91d0a4a8a56f(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_ef2a73e3b764474da1c83c128f4fff53(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_9bc67003c6b647869d3cce01fc8865ee(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_2e325203856646e990eb77f76a281876(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_7486b30af7b0451b96f2ff15767f3565(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_ea20643389754aa3bdf68bb8399dcf09(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_15f44d44faf94650a1047e48a4b1deda(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_a981eadfd8ae4c32bfcd7ec522243e36(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_bf80c7d7fde2471db4ba37381fa2ecf9(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_1b89d284780f4ee89dd457b5ffab3521(lower, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_24a89a42f55b4430b991782af177c897(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_bf58150dc684433ca6c69d6760af6e68(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_b6e28e2773764d4d8f641cc7ac2de055(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_c5d8787b8f674d50b579972ffa9ed3a5(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_9cfb68ca010246479450baf015661193(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_d9cd7d55df1649d0baafed56056c44a0(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_ea575edb250c4957a7c712de1a0438d5(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_f4aff50cd7a544c6995b162c68b63311(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_a1dec3270e7b4b5ba5b2818e44cab8fb(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_23a8fe0f37f640deaea44660fd9a5b44(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_fbce793a54dc45ffb32e8ebd18d6cab6(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_9e5a3012331e4895aafac560eb88be83(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_75632a6ee7e8495a821d44079f37fb03(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_1ed437362e9c41c69c7eaebeefc56b5d(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_38e734d021214f638ab02df0aa2ed09e(casenum, lower, fout, info, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_03874593d036408da4f3bb4468021d1d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowi


def func_6a2e746d94174ea7b963de4c89637bf3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return area


def func_a6782557fcf04d5a939730795168555b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return start


def func_ea7173987d814686ba4e72d6b4d450ce(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lower


def func_f253628c5cdd422faedcbd80d4174906(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return upper


def func_2eaa9f41ad2744b1ad276aaa48a778c9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return info


def func_a151fb4c0acb4ab582ae07407e2581a0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return lowslope


def func_8a59d8f449c1477a9cfa2b7a767d1bfe(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppi


def func_2a9bd5e097e445399051629431996742(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return j


def func_4f5f9c5e4069431bb41c00aa1a6984a1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return uppslope


def func_8f9baa04573942058a1c7cdd84151013(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return height


def func_f34b5f3a4a7545938c0a6313fcac7d6d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    return i


def func_48352400d23e4289af7334e58798fe79(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_487ebe8322d445acb44b401f38c753df(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowi


def func_c64ab319c3f548dfa331723c36da9a7f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return start


def func_ba57d24a3b0b46aea969ec4a76d406fc(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_7a7ac82fbd44439e9e23b826d51264da(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_cba0cb2d1f9f44f68bcf47791bbe8c21(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_8ed76fa216a44d60a5ff117c0039e207(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lower


def func_d6c1cdd00c4c4f24a2971313ffc6e2de(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return j


def func_d9b9aefb9b0948248e6d9fdbd61ceae1(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_f9e019302dd94e9a8715282d692a7236(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return upper


def func_383b41eb0d194533b8df9bca38dba88a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_d2e44fad093242deaa89a4f4c420dc6c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_dae57fba5abb49109f0f00e71d17ef4a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_5186bf07e0a8497880d0e8a136064deb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_270dbd51aadd4e7f8c1cb4c1fa7568c6(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_8867452723c74c3d8d67c3d29384d1b8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_f11e0323274b4ecfa5fb39f9310a5fdb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_0995e9a00b6b41df97bd82357a230277(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_0fdc9730276e4a1983d3a41c04b0d8e4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_e49ff6ed4a8d41f19f1b120a4efe49c5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_f377f5ce2a8a4f128ac09e0bf4da9d14(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_2e483092f1324d3e86de7f02087111db(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_aeaa283bdf68483bbc0085f8b0abcc6c(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_4fe479f079d14f0f84bde5077292e773(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_0075792443eb4342b23194fd58af13d1(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_2176a77e51a54a63b81d40b6fe85c53b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return start


def func_07ad58584b3c4664976b2038b0a7422f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_f2515d2c1be740618bd2c88f6b675ba6(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_459b57ccdf7d43ef869d36336df0df84(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_7dcb2fa6e35a48c1841dae5c2741226f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_f1e548f581f04d0e9deecdeff4b1095e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_6503602e78e54bf9a015b210715cabb5(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_15760550a9e74de2acbce73b8853001d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_ce490a19735744aa8196de3f12ad8221(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_f740e0ba9e0d4475bae48de5e205db42(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_c1270ffaaa7045ea824d9a01723807fb(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_5316364717fa45da8fc44c4fa6b9efc1(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_ea90f049a10a41a091f46c5a4d73f453(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_16841c385445481594225e5bf2273a2c(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_5a2187abe9044237bdde426ef72233b5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_cace182b47fe48639638dfc1f3163f72(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_782fb666ce3f4adbac186a8d6a59e053(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_9324d3c972aa4bc9b3a857a0a10bba61(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_b044e9c7a66a4b9ea11351a85764d1a3(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_a057fdc6dfa14049932bdb35c07a55c7(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_d8bb5e3d40f3429b8d69b686e16d6e3e(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_20bfa07e9adf44588bc684f22a443dd6(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_5c47dcb25c0848319aa1ac21bd33a8c9(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_c81b6618a5d846948bdd340d78872130(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_786cf6af35cf4b31a035afa7755869eb(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_6f193b06a4e24a3fa934d46460570f7c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_1fc921a198b04acd9b5b8128f5b40e1b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_c52c2e74114a40b3bd59c05e7ef7f76b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_7f96c3b8d2ff4c17aa969c43da5c606e(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_c0c3a07686814705adcdf5244e2af529(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_dbe0bb86a0fa40cab0bdf5d3bd8991be(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_2ac11c393f4f443eabfac887473713aa(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_b8740cfd4e61493ba6d6ae81dc8b15d9(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_3ad9376eff9746a1b4e847278c2ff7a8(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_7a7ba9da61a149618d6f056ee4e94a87(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_5fd392f0eb7945b1851c83357a7aee29(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_160fb6ade8d94c5f815d996e1d644b37(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_859c78ee3849407abf3fcd16d82046c0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_8fcff6a7cb5a4186b8ff72e75e9b85e9(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_f8d35ee4e8014933907119f8468cf6a8(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_eba6896f711049558c35fb0300f5cccb(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_682bce61eb924c02bceb2b4461ca0357(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_8ea92ecf1fb84fcd80c08e5ba103681d(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_8765fca13ed94fb59d50673d675fa622(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_651ff0cc772a43c38547773e46a7779a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_8644baf3cdcf438a9920037da04f9c44(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_0b7b9cb87d8c4a9e9f1ddd4c9a47ce5d(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_fc561cc241b94c40952c9c9619920014(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_efefdc386d30462e84741cf9310904f0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_e27cc405ec3249b1bcd8bef67830180a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_c75848d4af5a4ba5b399f7e0f94eede0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_a3e8896582a3440db8a6e8a58034c47e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_eb89810fefa045b8ae6e4216e113da1b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_341a1a140ffd4be88065d9df5425a47f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_7b69aa85910c43dcaf59fab377782abe(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_55122b3e0d9746cda1c23e992042bc5b(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_b0e26ef08f2e4138af4e9ee8bbb918e4(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_643d588f20ab42eaace7a270e51eb948(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_c26729297cef4f8e9ef5f25e812040ef(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_5fdd8dc73c6147359adeef83ab4cde41(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_4d25478ad82b4e76b5e55bf369b0954c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_90af4cc4f68d4bfb8e82004f496ae124(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_adc01d4118f641fb96e9f980de5fe2cd(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_334c95caeb0944a49fb9d1283a16bf28(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_a4e367f0222c4c588e0b6a6d0286b62f(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_da0ba44ebd7a4555b96851abee8a6f51(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_dbe12bf7bb0c40319ae466f7bfe62611(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_8b010993736a4da292122ec5fddd582a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_b149593ee5c24b9fa601e2c851e3dc63(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_b0c530dc50ba4478bc8ddba254ab9188(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_80f7db04221a4cbe8786ac5d1d86e0bf(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_251677e7512e428aa3c065b79fca86b4(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_04434c67499f47cb85d04b755d31da63(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_52d33b2f86174894ad62cf5e02bc4e9e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_d4faa010dbb943b782f66a2e66c9fadf(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_d631c9da9bde43378b68e67acbecfb9e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_3f54984d3a7f40eaafb12f3f16d2f771(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_1026bcefcfc74fe1899b6abfa5178680(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_01be914547094ca696dc37c51a1f56a4(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_21d38b4c39f242cbbe6c5fa979c6712a(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_f36725672369442ca69c6d8197b32594(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_a917232a7f4240c09370c18a1eea8220(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_bcfc020fef4f4c13928e08b5bebe9f09(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_6ff6df5d6f2c4e948f04c379ced48842(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_525c35d41b9649728dece55ad51b80ed(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_8e155e9c3e3b428c8db651d83b36b95d(lower, info, start, area, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_9aaab301c0b64e6e8d0d837940c7739b(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_07ca9e58ee594f37897cd4af41c685ad(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_afef4f03c067424e9d22bc290ad68370(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_602a436ce1d64973b34d0fe18fd083b8(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_a8082fafb99548c1bdc75daa00fec91f(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_e267c3af2ce34eaf8c67b69bf87863f0(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_3beed923dd4c424fa29b7d69c1c30354(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_9043ac8d51714d3ca3256096a9709864(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_0a6950e6150b43cc99c63593d880f316(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_884280ba347c492e8bafea2550c5f158(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_ece58e49078341d2acef9165416f3de7(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_a2c5001e4d1f43cc8677c80b803d6091(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_d626368cf4a5410f9f0f01d71f9757ff(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_4c7c9d2262894fb2ac2a4acda6316490(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_a22ae79a72c64d7dae7a82e542a8b9e2(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_30d49508259543f4815c9a6d48fca261(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_c1f746c28b3f4599b4848c054ce77018(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_834ecac0830e442d988288f1c2802ed9(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_c0371bd40e63404680b725e816d01ecb(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_7968153eab6748e48d2e7c00b36d2e7f(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_4e7bb41bd37f4cb6a34f502a464f42d3(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_4cfba0314d3a4580ac34dd911d83d110(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_65a72f1f9a464fa4aa8ab9b3fde269b6(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_f34804a2ba8540e8b72b0ac38a166d67(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_ff47f64d94a1417aaa523e5f9515f41a(lower, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_4d88ccca91584f6f96ccc4c181d7f139(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_17056ee9ca0246239bfe42fe086acaa6(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_a8f32a5f6c9341fbac60ab1b198e3683(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_eda92988d0004b31914e48e35d55518f(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_8763a835cc944e8b8fe81058c77f2851(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_f7211bfe229541a2ae55cb9ebee562ac(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_ab066a0ea8784bf7b509eab635d72183(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_1290ded314064857bb81d482cdfedfea(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_7c888e0f2b6e41c2a1757009fce6712d(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_9396387b6fff4133a6c279f6c15082ae(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_0e157ab2dbbc487bb8b64579b067352c(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_be95c99591f64f9382bcb04681a24d73(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_490827096e3c45e3802de293d03d89e3(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_c661bc7ff7374406a5dd8ee3f6497482(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_17e268092941453f9c741985aeb1dca8(casenum, lower, fout, info, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_e4fc0008794f4240ac00086668e8ac46(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return info


def func_06de9d978cd74b12b22626f56fcae869(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowslope


def func_3da53c6725d5452ba4096d4014f0aa70(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return height


def func_769b656a26ae456fa5bccebb1dc713e7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return j


def func_7646e341add9443092eabff537487955(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lowi


def func_70cd433744ad4fb099daeb0e4b8d21ae(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppi


def func_14e33c662e624777b6da5cf25a76e159(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return uppslope


def func_e9c7b57f88704ef384c5ab8786946ef2(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return area


def func_f54d9675208f46fb853309d77f707d7b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i


def func_3ec830000deb455e88e0535fa3c26cd0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return lower


def func_f24e3cada1b24844aef67ebbd7ea5dee(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return start


def func_75dec328a79546e68279e3b4e664f1a1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return upper


def func_4374342f3265494a8b4db571355ba10a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_224934ed897b4132b831db4d668e0a40(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_8bf445e0664f4befa0666e121a34a2cf(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_12c6fe998dc54864b5af3eef0f7ce207(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_898e883195a34fcab288164846717c79(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_00fab3140bad46de9f00c22164d1f55c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lower


def func_bf47baf42cd34962a351f8ad82caa14f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_d96084d8b82d4d9eb1ec6d185fd2382a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_71b02852cfc74f829cebda101a813e73(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_0bc0f886521a4678926df796c3e0c280(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_91cf9e74c7ab49ba91edcf719ca96cb3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_7a720340dab64581a537fff31074df96(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_5f02c3a4c78f4e29b6db7bb9684f9a53(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_ce186b6a4a9c461489210564997cd69a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_fbfb07ae833f4bdf8a086bb45aa9a783(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_1de155a7205b411abb4c2979b01679ad(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_99834cb4194c43fc9207d10e3b39c8ce(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_541ef0ca664f4fd3a6ae114a549c41fd(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return start


def func_c14635cd15c04952806b3aec6e58452b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return upper


def func_637f350ef9454c02acbecf0f901d1ed8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return j


def func_2d09621af7894624b9cd5b98f3e8dfc7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_09294cf0d11045609516aff172690e68(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_97e0fd1ebeda4b229a687cca4e307bd1(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_d75610a6a9344c059d08663d0f5fc760(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return start


def func_4ddfb6f65e2145af880ac234fa002110(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_d2099afecba7472f8fe801f3af38dc3f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_cdbdf6d7c52a4443a1f0a15e3ad56f2c(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_465494a0edfd4eba886ef7c45e3d63d4(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_48ac44757464404eb0d55274e059ffef(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_09219edc516b4dc7b555054f22ef46a1(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_3f366e3dc2ad48fc815dc62021df5cc1(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_23cda63409c24323b374867304b19c07(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_a3a8e95c16e34d9695553a6bcf25a833(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_e47e3f849aea43d78828d4fe81916072(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_5e32022b085d4c909a87585848620e21(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_cc0054fb067e43059f6a1597bad86a54(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_7be3c95334fa4b82a2a55d6bc5566a98(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_0d1a667df3a44f1c8cdcd50e1a78c032(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_f15ac6840d3241c89ac1295d1aa6eb19(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_8b7cb44318fd4a80b2c04cc54968b9da(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_fd30879451e64fd4b46234511f656446(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_68025ff3f1d3466caa002fef4d960a8e(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_eb9b446bbe564b4c9a2395e2dca22096(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_8655b2456544460d9a2bd1fa38e92f37(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_5cfd981323ce4a3981aec27f52e0323c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_f6dd3dc0763d4fc08997fa21a659edab(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_6e43b93f93654989b455cb36b4cfa471(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_3afd40b28d8749469c412cb42fa2cc2c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_3b1e4103024e4057bd8a69d4340502d0(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_f29dcfee61594d48b754b83e6de79e66(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_4b47f58209ce4a5eb400e7256ee3fb3c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_452b8440c4284e2685db28e02a098b19(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_25f204bbeae642d4bef9efd276ee5ea9(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_38288c5e91f54b18ac210f70bee5a5e9(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_3170b7d19adf403f877bc9537b79ed9b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_6c12ef4992914516a518397e110e183f(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_2769c8f4c2814c318789494d58493bd6(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_93f9089f260c4a4091d2892033850e18(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_8b86c4f1dc8841a7a60b7dd2bfc47ed3(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_139fbb9ce5e44ae1ad4149d33642da37(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_3a62fb7a1bf64838b87ac70499de5e44(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_e4de2019ab76447b98ef573146d9decb(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_3817a6a5c1e34686acc42e01e1145625(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_e27c55acbad54ca28d7e714f95442b02(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_d298a8d6dda8494c86ceb6dd174ea154(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_c1e688411b4944d0b4d0b6f713d37f54(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_10d76f5775f141cba5e0ea836c63e492(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_e846fbac006848dbb464600b398fc105(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_192dcd617f07485b90612c9a04246eb4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_397e9083489348b2b89c0fa1cde211b6(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_64179549adca40ee94dc24bf7123868b(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_7974de39d570414ab08f6645410f3fdb(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_4f7d86f7f6c143b8b15647d7700fb851(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_3bd90a6c56944b30aa2f04b5ba06a473(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_aa750f9c137b46ea91db52e85a455676(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_e2a043cd670a47a88d1fc0c1bddb163a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_229bd21f188d4a3f86af06f7ca577eb0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_232d8716c9204c92996c8e3b54ffef3f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_f72163c202e546158f1dc0ae7a39c356(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_f52f37b8e60e4d81ab0d6414fc566783(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_165bbd4ca88f4e699d2fb950637acb4f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_3b18c09b39a34cfe8ea01117e8ed9f03(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_83f5e64a10dd4f7689d5b13d79b36910(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_4c80b92b690f46079d796624fb9521f0(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_c7bb04fca0774701adfe0cdd5575c128(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_8443055cca764ebfad531ac89542d867(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_72af574b57844bc3af3e2046242aeb51(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_ef2b6f041a7743cfa82d9a909188197f(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_c7b6830320b64ff4ad25be7358d3e953(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_f3f101473ca9469dac9124ca41d0eb9c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_ccbad7c5c43642499670844ff0f60f15(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_0821f137ba8f487b9d0d8ff8c578fc05(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_83c9ead500de446fb69e614b55ca6e91(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_da040e6ee0fc447d8bf991dfb44895e1(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_dabf51a2f2b642c18884d27eb30fa569(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_0ad90508009e49f5890be8d8fd99f86f(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_8ed832cd591b4a5ea58aa777ad870b55(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_c3506362cbe0451aad55a863418da586(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_ab8757cdfb5641168acbd710080ef6f8(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_4ef87c4f085d4126b6b141e18614fc8d(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_631abcb95f77431f848d60c0b4c74792(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_68e9f46834c24683baf945ddb6693216(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_3d2f668de7ce4d859f4e5fa04c40b3b0(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_1d8fc69d43de4086922c787491995b21(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_0d6176b6eb724cad8fac5e55db83707d(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_aca3c05182d64f2ab275fd6361d71fa2(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_57d24dd270694d8e8e4d7902dd214ec1(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_848dcd36c9a44d158fac521ff170eb33(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_c0fff26876c544a89af8889c8f2bbc04(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_fbb81fb4b6094e32a88eba2872704d55(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_28429ef8e6bc4095ae502691377b3c09(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_6b4a16544b9243a3b5e7d07ffdef554d(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_8a7c9eee17334697b42fb41979fee837(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_1413be6301f6424c930a86ed5ea4a39f(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_e2762881309c4c4699fda48c621a5f8c(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_2e9516dbdbaa4365833d65c0282f2dd4(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_dd0cb5b612a64e6a8f83fc8a93d0de1f(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_3524bf4cb7d64f209967d12fe487f4a9(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_bfd32d8395214e358475567ed29c68bb(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_82f9cd662828468fbe2786a0644a3ea5(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_1142a4bf5ba64a6ab20c9286b67765a0(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_5a88b42056914060916cb4e976a4725d(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_0b1cba413c8f448583eb59060731e7db(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_70bfc4cf034a40229311c87b68998ce6(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_3efbbe756bb243c3bd47fd7344e72901(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_c6f1aa15c130433197524d85e37ff5e3(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_9aa72606f280499d823e90d65c778bf9(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_0d9721affc9e40398308b20d4c0695e4(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_e24eea0818324b2ea04c689e2f5f3ea9(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_889725b6dd1d4028810145e0ede44064(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_f97ac0069f784d269930df99c2adecd0(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_1ec12ed589f749898ce951d2611add3c(lower, info, start, upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_ff8e383b56184a31b09c2d8254e8049e(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_468ab3f51be14359961248ddcef2a38b(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_8a7f3d2014654c15aacffc16aa5dbb4b(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_82114f548bc6453ebffaff4256c514ab(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_85fd764666cf4f1a8ae6d095ccc483fd(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_7d790c7caab942d39c71a58fa48a692d(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_e53641a7c78b4768ad2073034d63d97c(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_d7c47eba3624482bad140036515c587e(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_08a7a0948b90407e82f4c5c3f0a167c0(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_3e80fd9ec9864a60b1c6d86b9a3c39f3(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_71a0eadf404440fc93e7211719b9075c(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_e6395fdec1ff450297e5412ca3dbc333(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_aee8b1f70fb14420b98356bce9d7d072(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_e2adc5a31a1941acbfddcfa44dcdcceb(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_ea407ab91e924a7e98b511cbb5cd9fd2(casenum, lower, fout, info, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_aeb753e0ee7145d5bd79927046ab3654(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_466d2f3c19f3499a8c5b0cd59cf520e2(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_c5d16739e936400694a06f585a543e4f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_660a5057ff934f6aba53bf69f0649931(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_16700ac495b04404a8af6a017c2accbc(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_90088dacb8914e328407e7823d7e65f7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lower


def func_3d520f10ba7e4bcdabda4606f44ebbf4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_728b91120d1f44198291a42f4c721ac8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_9c58e89d8cba4ec092c9511959f00618(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return info


def func_f669fbbbce99448ea513a5a00367ea33(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_3a78a46045364de18bfae14c0de19817(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_dea5b82df716422c9b460f1aaf3d3472(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_d187ff8539ad4343852cdfa5bd3084d8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_82ca6d7db8514e5f9298251454179a75(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_5fded88fb1cd4bed8ade84f807b85e58(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_3be53d6af78b41fe85eac7e0850b00e6(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_5170c3a5c5d9400980296d4c1be335c3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return start


def func_c49c55a957cb4d0489cea8438d8a2447(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_dc6196b869e54bda8df82da5bba306ba(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_8861e0795eca493c9e51536585a20da1(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_7454d121daf74d2e99f218630bda906d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return j


def func_e236b86e957045348b78c3a0490a5e11(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lower


def func_05de2bd1ea2a45c38c7d5a25c95e4da4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return upper


def func_d1513c752db54c66a96fec530e2f8536(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_8c53ee702a6044929f9be08c5dcd5447(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_d25ecdbd4792402dbce34cb92748056d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_2b1f1ddc46ba4fe0b61ce9a8f6161b3e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_2f400760480445cf8e9ab8a4cd846708(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_af322305f44840d392d0d5acda659013(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_d5780e89da4a435daa2800622291746d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return upper


def func_b85cee4bcde840c1a4b39c62c08665f9(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return start


def func_db5bce4e74014d0ab34b24782ffb70e4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_513c6247d0b64cf184387c5a79d3472d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_36fde34271fb40fc80a2fb1c0ea03c0a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_8f2da389f496469ba6bd409930d17d81(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return j


def func_068e367b2a0a4894841b3f7169d7c48f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_29fcd0b26712428cacdf25d8c2e8eebb(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_3983665c785d46e8b969c46466ab8bde(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_2d28826da3c14b4581fd709e60ca4671(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_e523f7edc19a47dc9dc47af0a3c423b8(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_4ba2ee0c4b554c4d98a44a57b33982cd(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_de64298b58e54dd4a2c1c1860947b0a3(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_a2d8098502bd493d951d42891e21e89f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return start


def func_05d155cb03ee466b90e53bf9fe916088(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_28940ef105bf474abc4f4f85faa186ec(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_f1f0bf40623b4f0ab8c14a40aab0bac4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_2df192c488c648c68027958aa4c3464e(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_ed2780b06c0541d2a5343439f8057fef(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_b79a52b7d6854a24a174f65ab801f008(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_be9848eec6884868bd4d8ed4d80a17f8(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_966064ad589848f4bb374592c0b49c12(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_f8ac9c19df25436abfa246a8eea4f8b4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_a6f3b6eb8ea34652aeb2f990e1167c15(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_7a58e896cd364dce9621ecfd0b36cda8(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_8c945519b4d04e6e8d917ff0457d8be8(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_08d4be7596864bd7bac07a398067b181(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_09bbd47d25924bffa78feadbdd1ec930(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_ed55d1eef5f0448eacd875ee08816952(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_05ebac9232ec4fc5b47b5c6d2be2788b(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_5845941ffdbf4a96b46613a95b814a6a(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_b72d48a153de45109d15fae132077d93(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_c2f579dbec054c94b7f58978daf08161(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_a4930748ce5c4daf8a62ffa17d03ff1f(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_da02aca6189a4d0f8888bb93f0b8a396(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_464fe90798704754a8c158754cffe635(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_4699e495fe6f4324b62dbed5d3bdf744(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_62fc719bc8754aef9666333e497eea3c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_d7ab61388c2e42b7b006e8af32ab30f1(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_76af7826444d4df59f3c684947fd2cba(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_ec0073dff691475a8940cb57cdd7ce20(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_ba2001f3c0934ebf9165e7c87dcfbeec(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_9f4a00ced62a4a8fbf01194a0be7475b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_2bb15205f3974e0fa9ee09a72fd55ca1(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_b20c32bddc1340e7ad088aa1457fee30(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_a43403a22d264d0ebab45c4f2cdb6893(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_08fa2a2ef8ee4245b9427d8c76dc3bd4(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_b476af99eae5493ca2d5b1ee54209613(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_03f4af8b72dd445bba3ca9365aef1c3b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_b4f398bae1b94516ab9a9d0d905b21e5(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_f56004f12d394b0b8482c146de794069(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_8de6e65e07b046b78f3f42ce5498d1fd(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_0b5ec7b5031b4f4a890f20f17d22f703(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_81bff90a107349c395790f871ab24f27(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_a9a2c7cc670e4d5d96be42c0387ecbf0(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_c4a8da5897c24cebb1e296b0b59f0166(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_f8313156c243481cb3989f4db77ea485(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_8a8904d7b9714feb8ddbe9f1ecd66b4f(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_0146959420144df2b882e5f75216beaf(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_44fac798084d44cfbf2ff1c0cd5ed8e0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_485fe1638bcd4c3ab96ab8881d5761ac(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_e6e53856ea0045d186d6716e687ed0ae(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_55c668091e1845df802df8fdcf338667(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_2db85707c39345dda8a92d8aae107ef0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_7a27624f188d464baf0911792427f743(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_8beaca5dcb314905af8a1adae654553b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_70164f9ac15d4399861fd4e3898e7815(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_b903e43f627840079a93da9a7d677ce6(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_1e92f10a9ff44a60ab177f9b55901d1e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_3891f50a23a74352b385fcaea087306e(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_a86f2e839ac943e2990f2214ec523329(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_61f853f337a949218137f5a62d672c78(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_e3c763b6a5f34975b2756af8bb4e204a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_ca5378bfb19b4d6a8e45fbc8261bae8a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_daf8aceea1854da9bda3d63249c9f5c8(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_3508f687f91b44c1a068d948c85d7a04(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_53e0088777b14ffc8f27608f1159e1f1(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_42787eae4c0543d8a71fc170510dc44a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_0e0e2eb4c5694d32a14ccb13eea80304(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_ce78959f6ac2441cbdcd46417accf959(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_81e569516794456ba06930e22b6397d1(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_4c7478cd2c7e441da230e8730c54bc8f(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_9ee31a0eba3f4861a58e10107f820c2a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_22e80183088943419c2ec7b9de68944e(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_859bc8f46e554360861c59989164737c(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_4aa5e9a5823c4371b8beeccf19c4a6bd(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_247e857b074c44a09b182da93a2f4e89(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_10550eb1029f4f28b2c13a1b15649ec7(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_cd57496d793647cba57166a850a8df29(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_4ff1c40ab7d44297aafe3e05982160e9(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_caa077096db947328af06c487d93ef64(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_39454e662494423dbbfdbbabbab43e4f(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_48dc17199eac4af7a4b30c028e095ea2(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_9bc4d28c3d7045fa8c2fbc9d28176edd(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_52ba489f59e44c22b5ef72dcca3b05a2(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_cb95fa84f8414f77963a1c8af6d891b0(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_cac1d603352449c78f58af4335fd38cc(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_a87e42ce810d4d7faac34106420a14cb(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_11dfa29e642b4ad99738ff5285afe567(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_32d040cc31f347febb7d6f712054caba(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_4747208cc3c64b5fa9278212758a8f4a(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_d1c6a1c2f4ad4400b1cb5d86606e7bf2(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_69aaef57f17049a791ed1d3da55b78c0(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_fa6fa4a4ef104a97beed5612d57f6bc6(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_3f6ed8fd732b47aba0354ac8acc27d17(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_0e6e7e25e40741cc95eb8335eac11843(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_ffc5cddd96ac4c13895c5412d45f33a6(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_2b742ea5089749c8adaad6741f025eba(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_a35e2c8acd6b4399b54391ff596c2601(lower, info, start, upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_7360e28848ab485e833b4f3c3babcad8(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_c32b2755c8354e58a7cb690cdaf1b312(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_5c3d88d8b10c47e1836c551cf1b61dc8(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_ac130d49a3ad40c89fbc99c85b4b0325(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_75dc9e7a7cdc40c28696a8337b82ba7e(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_4073bee4b1a54199ac7470540df8b991(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_d2c160be75894564870bb03ef26ad224(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_d6084027f2d449c5af2d393aeb8ecaaa(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_3a22fdcddb0d4478b54d5c7ec62533de(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_3e9416309f374a15ac2b4fae118c182a(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_b4e9297e0a2f4b0ea3a79a7649744d76(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_7343809a194c431f9e0dd7fc41fddf79(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_dffafc155d6d4fc6b7f6a28b3618e70f(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_91ec4171f6cc4d0bab3b737f4a6ebe8b(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_5761e0bdad7349f889340f59b927bc44(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_89767408f7764ac2abdb9f78ab191bc9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return area


def func_e580c85baaca4ce89276847e342e9dba(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return i


def func_33f20c6526bd442e851a7c97eefab9db(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return height


def func_e9c3f0bea82344c685b70f7d7c8ff5a8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return slope


def func_406dd9a634ed44829541c0e78bc4f82f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return j


def func_5e80ed3b38b148bfba8e6027e6ca83cd(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowi


def func_016824d681d743efb4061d6b66a4f48d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lower


def func_5f5ea77bc56f44eba17531bfca394382(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return lowslope


def func_88a60599081d499d8729a3ac8d37833f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return start


def func_49c9a337c441483a9d9ef939cfed7fd7(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppi


def func_f43f1c37da274182a3b1a4bfc9b09d09(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return upper


def func_c94af47fa69546efbd26d96158865ea9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return info


def func_130b672089fa4e19b518bdb8a35a8e0b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    return uppslope


def func_c31225d4321b40c19de0231f1b70a87f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_fb4d8adcabbf48eca8adfca9aaf977a3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_c9dd5e9c8d0e49d6ba46f7d53542ce54(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_408ce5962db84fa9935473ca8a5c9b14(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return j


def func_2c6b937056064342b5acab9365329761(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_c82a36761d84460cab4965dbb8ea2373(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_5ea7835a152642818d72187ef2fbf872(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_1c21ed0811d646daa68af0dc1e8fc98f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return start


def func_480d68cde837428db4faa2ff0d5b1909(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lower


def func_aca94fbdbef9452daa60d1762c97fb4e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_c3d8cd1924a3477cb8a53c80718e8638(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return upper


def func_c91bfe9459a441a0844f4c1cb3bf66aa(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_52e80579e06841f999b5575299964869(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_ddaedc8eace74757a25e7a505d7a3df2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_24c3f683c07a4c948ec71cddf124240d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_93e592adc8be4616b6dc84922bf4bc83(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return upper


def func_2fd2509ac22f4f48a460d6e0b750b3d2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return start


def func_b8f213a90dc9432785a1a1710492b838(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return j


def func_cdeeae8ab5244083899dd9d462e3c506(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_319defd3e1f64355b2827326028760bb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_b1c9f8c27f3946248f61f3800d4c58ad(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_19c07d91f556404788d491a4d1b5ba90(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_9c542bd4699c4a83a5fb00ea6a2ad995(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_59b74b42cc0447288d92da66690524c0(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_ad8509893bf542b599c6a535c82ecccf(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_6890eea7fd254f98bcee30c8e4d1245e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return start


def func_cfcde9cd9f4940048fe9f706f0ee3fdf(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_7c77bf5bf8e44061b2dd263a55f67551(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_e632d8be33d4490d9e3285ba140c007e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_dfec8e700fb54480bf8b2572122f8844(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_ff87d043bf5e4202b4bf379a2d1ed8ed(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_c191befb9f6f4936b40489efff841804(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_06723857424b42d8a2a7032447bf952f(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_737d785c15bf404c96272e46c54424c3(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_9a0e30be5bbd4443bed715f7ea6f3ef9(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_23df7606725443df999e23c70ff44f11(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_cafbefb7d65041a39253a5d1936b567d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_fa932595ca3d4b78bc16e951a4a4b667(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_d37071444ea841bd8b32ed6c21645877(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_addcc73205b742af8055dd28fcca288d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_680e7240018545e39d321ed511f25025(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_04a538e34501472dbb2e1f6ea2d23083(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_11ff11ca9ac24975ab6fbaf9f54de51b(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_9dc6174c38fa4d8bb0e22f8cdb67a4ba(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_14a2fb1d2ff64c308eee3d4dd2604358(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_569d7d5083834dbfbf69e52e8e4eb945(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_b2b84b2dcfc14f8db56092acc178263a(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_aadee161285a4771b753063cac6e01a5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_a84f700bcc034e5daf051fd6eae779d6(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_dfbeaea8310c4807815b872b602a2b00(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_54a9f3bd36b7492d9c82debdac56dd93(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_0614edee705a463684cb9821e7436df7(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_26a86c0a172e4eb590eaaaa0dcd13797(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_534575f771df4d0a9bbf39a7c1845caa(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_b7dbd359e9244183841836b75c5a25b3(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_e7a5215461594ea98bfe32f1d8b59d4b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_f350f2ded0054f35befca36f5ed1f597(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_68cf9660941d4140974014adbce5f0c7(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_e75b1ff45ec8441ea495715bbc52803c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_0fab92eaf7a34377ac3d9ea032e3906f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_df0f658fa7ba4715ba9f26e9998badf7(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_1ec67a02bec348b9aff7e3ee25422923(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_878589e5595f43fcade9b13a35f27f68(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_90980d15848b43fa85fcc1f834a51f1c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_d69733d3a94c405396ee15e8e30f544d(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_f16f820888b64788be3cfd84dfcf4c7d(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_ab24707d45234a948d67403f48b3340e(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_f1bb18990a3b4eb1ae5508787ef5c211(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_f13a17031223415da14ab6a816612916(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_2f2bda3919484bdbadace246dc6b9ca4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_b78612ce03cb44689d43ea82afbce868(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_473a6ab7300249feaf2521ce8b4952b3(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_2eaf014c89024c9eb8e5fc36ccc89b05(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_22fd4144e7ba418483f5e2ef14328842(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_1063961387fd421cb8377a528caae1b1(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_a1cf5524a0a64c1ea80bbee176cc03fc(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_a64d9491e76a490f9c84184d10a75f07(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_59b332df9a78471e8354ea8bd38977c2(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_220f46c7cbb3453f8467655be465364c(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_548b1739b10f482bbedeae42a202f322(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_e2280175421a430798c7330e8369e785(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_f8b332d2342c483fb54c99dd2c476000(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_7cdc742f1d0e4bc38c010e3e9499485c(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_695e968ad05b4d62bb70d0cd5fd5d345(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_6c19f1785b4d4d2c81a8ad732c768f3d(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_3fcad86227884487bbac8dc1633b3213(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_3847e53137db43e9864f9af53c026a0b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_4a23b8f3c5f946c580d9a7957c9b7c35(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_eb871ac7e3034651901e866c5b00292b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_087d2bb9592f47e8aec8c74ed8aa9613(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_506b7efbfc374b2ba48942b75a9448b6(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_b3bb4459088d45838546ede9381f0b38(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_120edb96fcad4331b7bef21d334f3d97(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_1245fa3bcf5142ec846f9ae0c744ea09(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_5f2862249f354f948753b6f92ba30c2d(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_7100357cb3a8479ebfc64ad1dcaf51fa(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_557f5fd9d0d440eba7608121e28a8ec3(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_48148a95204a40cf9c78aec7306c4a63(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_9957abd47b444ee8aa39b952c37c21c3(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_708a5216302e45d6897854012e23c0bb(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_43bd21f442794d9793cfa4c1cf60d247(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_3aa50b5961b84ddfb68306feab6f752e(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_a71b365c44bd42768667767b8627971a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_896eeb0384164ed5a9ed754efdc5dc4b(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_f79ba078908145e49534bcebd1a8f042(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_42466c8a117f4f6b961dd14a883369c5(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_e8a037a4dc0845e5be52f8a94cb7e876(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_5b0eec41595b435081893ec8ee67ba01(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_4643e6406bbb49f39d37038e1fda8314(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_512d1a6efe534b5b93b551d8dee9e5cd(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_9991597f29004b3a87eda015d2b4efb3(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_84b3a76dd6b94cd19365382873a86ec4(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_fb207526f64348e29730179b64db4126(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_b6a2084f6aa0433ab73d005c7483180f(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_3165596bec1b4515b69722a4fa618a62(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_0c5f1e15a5cc4743a72f4acea873a463(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_06f496fe5d4c413787d33ef641ad418a(lower, info, start, upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_4f813669cdbf455eb32af33dada68596(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_435868419e1c4ebfa169e4fe859fb7fd(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_1ba9c62c24594bd2b734b69953f9c07d(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_46c92441b3b34d118fca69c6d1c0f26a(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_c7e2894e4cba44889ab92d21327687f4(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_98e3f1243ca044168b07b5ec408dbc73(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_50649ae950ee446eaa2f8d1322c18a78(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_92525b6a8f004277b424e256bc2b308a(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_471033a735404971b4ec14c07f4bd43f(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_b16fb39aa2d642309c1f64bb27871448(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_89c74b21655147b99d8583b77feb3e79(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_6ccb80e72c584745968dc6c60c017abf(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_23b7acf8707d494983056c2e758a3ae4(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_0978545742924061a5e8093d2cfb0c4a(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_8a6328288de646a29e2006fe0401b3fb(casenum, lower, fout, info, start,
    upper):
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_28bb7b5c7859440e8441b8d7a5e0a645(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return slope


def func_c675473cc7d24ee98246a25ef32cde84(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowi


def func_d8c47ccb4f4b41eaadc7753269978fa6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppi


def func_4bd87c634dba4b94a9d888116175e237(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return uppslope


def func_c6b6ccbfbf3c4840bbf4d5672a1c8df1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return start


def func_4b7debcc514f45769c4a55e5c22f6f33(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return info


def func_bb937506ee00408ba726b5c072830c5b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return upper


def func_cdb85ddad9fb4216afb2f013df4d0f67(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return height


def func_6e6e880b7dcf439995f7a180a1ca62b2(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lower


def func_908380e6316d4e64936f425650655ea3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return area


def func_687e9e496b4b40568dd0ab2d59b65785(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return i


def func_1553dda53f24472aa898547829574dfd(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return j


def func_482064a4b16942449140fde629230a88(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    return lowslope


def func_359baa9c870c4dc882c92c68ec309e74(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_cc3f3314fa1f4bd5ad7d9b7678c49ee4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return start


def func_f53cbabf42a047c1ab5983b50d62d4d9(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return j


def func_90477982b1d2476fb6010c87d11363e8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return upper


def func_42786b1e5e7f4c4590e800403add104d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_4758a5b9b6ed4afb8b593ec49e2d9cf3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_ef0a89fd570c429e8032877e3634dfc4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_c16b5674cf9a4aa38e386b6a55465550(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lower


def func_ffb435a1350c4cc783799fcd73fb6f57(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_a5ea777e4eb143779f8034bfddeb102d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_516122c2201e4a0f93d98f99481396b5(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_0a4f4141acca45c3974c23463a3e7565(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_f22a7cf13de9470ab1cc350de646753a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_66c116621d3544719f2c71b3011f9739(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_ccac697223dd4f338534869afc4d3e0a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_503db8e8df074bb78aaf94bc71b32568(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return upper


def func_233ecd1136ee4d81aafffd9265a3267b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_ad81495d94874142af5f7ed3c644a177(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return start


def func_3b2c60263fcc4913ae6b32cb012f1529(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_cee1b69793ea4dddb67fba999532dac8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_e12c1b2c23c749d88e68dea8b941fbc5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return j


def func_a06dfeb215b3476b9d5399d6d8bad01f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_55e9c1a4ba194bff8a67d6f3f3653588(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_b54538069dab462093cbe1bae6abf610(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_89fbcf8377f04632adedd1e1a759b6a1(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_6453a9f75bfc43bca4ab0f08b3fb0894(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_3a6ac6cd84a54949bfb25f9b6f723941(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_860c47c76b6c4846891c636c81689cfe(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_28dfefb2cc3147a7b0493d95c60f2071(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_0e96924fb1a949fa8d8f212e37dc9cab(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_83c265753af746679c8e7b294f402fb3(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_5d7db90730104461b3a7d4e74a5cca2e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_922a6436730c4e2197442266625fb65d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_c13d230c92434acea1e4d12bd936c1cc(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_e59df2dbca8d4888924aff9a82061049(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_6400be6ccf844558b6b442e130731a15(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_66e89d03974f47a2b4043156aeb34324(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_58105691f8274190b2d0af1105c6a29d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_ec4e59ec29294f2eabf53b3d439b447f(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_b7536a4f3d434e35bf3443b728ad40a8(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_fba5b74ac34a4002b1ff62a697d5142d(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_98d3afa78f9c4105acea881abf4b4eb0(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_1d5ad612f00d41c5b853063a71630448(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_9e47a8f092ff4342abff0d0a130bc23b(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_fcbbdc7bdf1d4604813425b123300151(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_d348d7d6059849d1b14b223405875ef5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_2143b3cc9cbd436b99ee1eb483b19ecb(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_add239d6e0a5455d9d8404cf9231c556(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_1b6ecdb9d9b6432880924852453aa929(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_692f50e9767046a790ba99eec01a0c51(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_830bf545b1414bd6a85a03883619c3a8(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_4122edaa4d6a467f9e4262dd2d821574(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_9bd98a8ccfac4a228847223a6769c3b7(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_20f8ac65544b415189f6796678be8a5f(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_9a1b580bb67c4719804aeae8db36727e(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_9510c1a982074a5d897a43f332c2ee07(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_6d7c5ee7376d4887a817c4af6852c1f0(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_d26b596a71c14e61bc1d09780251aacb(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_0eeffa2bee964f13bbee7389fef3c01d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_472587974b2c4d36ba8b12c3d9b9cfff(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_68c4fcca645c4a028e295cedf0397782(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_745729aeda5d4c078c37771577a5c437(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_847841a0a6ec442c848125cc89b85a47(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_ff82ab63d501443c95b0e286864c17ff(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_7fe9eaa3e9a64359831f947bf0e14426(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_30f12ced24664876ad6be4a808af9553(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_a551cdead1af474c95fa4a0f7c60a49d(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_a24f62a6a3a948d4b116a05e9f45e27f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_366966af626d434dbb713ebf9f025e66(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_3f3ff40ce2f24990a45b82b1a396d61f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_a7454c6f34974e9fbbeee116c604945f(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_c6ecdcb40eed4c62be6ac05d83437e0d(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_718cca178bc14e73a6beab5c26172913(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_efd466de821e4530954cf5226d1fd6c4(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_27da31ea1496424da95adbc268959c13(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_cdbe5cff45db4d70ab8127269b787671(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_0bb92efeb903492bb42c1cab9d181452(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_10e709c63b9645e8b4a796500a60b4ab(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_67102569137b4e02909c66a544e1452f(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_d73038662e044e00b377e0df634a6664(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_3629b32e874e43ba93a537361a028bae(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_127c63da812c414d8ccbaff1178587d2(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_de41e74b622c4676801de7320b9e9df7(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_d448e162bd1e403099a86c6c6d70ce9c(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_0aac0ed193bc4c0cbaba67c3d7e7c788(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_50807b0a62a3402c89efc305f247abf3(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_21c84d7b354a42b698a3d950f8e4a800(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_c02dfc1937404cf7b4c91fa2432cc27a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_f0b162e9c0f04564b87df01492d1d528(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_3fadad8c28e9491a90e14132f34158c7(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_2236d6dca5344b84b5cdd0849980fd8b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_146cbe931fb44694b3402bddafa59085(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_4f816dfd79504e818da1931f6ab5354b(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_3776ba17ff4146f893baeeb7aae10dc0(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_12f79adc98954617b93895192e7b0468(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_c72361a39ea64005ae546425d5393052(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_75607a099919459f973b007637c1a0b8(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_5a56b25c6857466eb438cf8534655475(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_d0c310aae8484fa5b387ef8c13a42bee(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_eb789aad5b7a4eb8a7f2217a12b86477(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_e2b0bb8de2724d98a0643448fdee67be(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_623fb77491e544cc806874d9d37aedb3(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_5d1b9a30da7a45b5843f5d4f3bb0fdb5(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_977fabd6ce7d4c41b3abd92386e0237d(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_bed9e081a2f44aa9861f80ed1de036f6(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_a9efa768c86f49b38b6d22f10530e7c2(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_13a236605ba8491b8d225549cb065f0a(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_29019ca95a01466f96366337e6651e2c(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_512124973e8b461b8e15958dc72727ba(lower, info, start, upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_eecd272284ec4289aeb04579f11aa194(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_3e4a77a330de4a6bbf92cf3268138aa5(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_169b384521484137a212c1273877e38a(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_caf9b25c707d4a9da2d2ea58cab98725(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_8947779361b9496fa58d8f9a7b6d9d82(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_77970e6333c7436a8bcbb20b139a9c43(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_e5c985672c75484487396d45e54e7b42(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_a075a3ac3cc04d07a4444b02c4c5879c(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_a1b6b8968d574356a850df9f8d50f134(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_27ad6198585e475d82b53de5e127bd93(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_9981c9e8ee894c0092d028b9182eaf05(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_abcce5a02ac04454a4a021897bc128ef(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_def8d926e90843f8b5737ac0990ad4c7(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_8c959ddfdae74e7f9a598ef1e8419d7b(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_3ccd8a4c88804db7be3c946b285344f8(casenum, lower, fout, info, start,
    upper):
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_a2856503d88845129ef2d7481a03b4d3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return info


def func_2a27bfdf6de94f04905cbd7b3fc24674(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return area


def func_cfe5d87b081a4cb2bec015bdd6726019(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return upper


def func_ef2e7eca02fc48b5acf57e1422de3602(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppi


def func_f3d2fe1c120c4bd88f9eadaa923ac890(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowslope


def func_68002713ccdd4dc3bde48e326109c38d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return height


def func_9092d0bb18f148fb8939d6e2f35c5199(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return uppslope


def func_7fcc40aa28ff4e7a88d59e3ea0b00ace(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lowi


def func_0ed4cd422d6449a28d6a414bbff6a89b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return i


def func_69d4121e56b64612bf558465306ada04(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return j


def func_7dbd9cad6938419aa19b772d4c22403b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return lower


def func_ca3da1219dfe4640a47d05f11bb2af6b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return slope


def func_ef10986276ad4fbaacb4b32b0753e3a8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    return start


def func_bfab6001e2ec472799cdd7e360595688(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_99f518f6eb624410a4677d8526036a54(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_99494c1c486a4fdda5c4a038f0145922(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_39a0a0f5438b43b18106dabbf0b259ac(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_f447dee74d1e447f943aad4471b19f33(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return start


def func_42f3f39bf13442bebd0adc75a66b629d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_f6930dd7cb8d4635bae9e87c58e54744(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_2b1ccc52873d430eb7e3d6bbda34cb5c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return upper


def func_c897392ac7354cdebaf3d6e612a67b2c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return j


def func_ed392012a2c549e280f3e335680192c8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_08b6ee42a959488f8f4de3433e461fc9(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_e1668712cabb4c7385b2115140e47a77(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lower


def func_9b44bfe880e44aba911bbcce78931019(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_8ba01c08487b4489bcde6bddc7fadc94(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_4c8f94c615074654a1de0b19cc3359cb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_99be72765a5d429ab838788bb2d9e63e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_1d6a692861e44d01b3e6c12501aa22c7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_8e095bb40b354dd48b41c8fd3f691080(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_2de247019d3843ba83d67f0e703399a4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_fe469cb16c58469891ac81a5fd118f41(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_c3d9d627f58b454088c24c523cdecd35(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_925a70512de6498f83b55146eaf6dff7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_0c0b11ece9bc435db9be4ccb7a3e163f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_ee1bf03ed2db4653a7ff76305229fd79(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_a23a18c35e674856a5328f6a8a732e3d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_d63cf485599c4e00b2d6164df569aa80(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_1728ee2a5c3b41b3b21e867ab2b7dcf5(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_e299cd8612af4d58ac43b4f72fd0a542(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_f9031ec0835640d3b94f2e83572e1264(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_cf5c3bbcf4ad424da25627a5123d6fce(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_868182558e4f478f9332578b87764414(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_aa71484573f84199a3345fa84ad6c4ea(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_f54d314eeeaf4cc2b8a2224bb9276ffd(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_ee3faacc165f4e128631067dfb6f211b(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_8cb41043918f4ce38b91846f53085bbf(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_198c022e3245420aaaf8268702e94d0f(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_df567eb7e9a446d293bae8c8387a4a03(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_04c29468e8984df1908390b98fc06609(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_1e9e35c492254f2a82a5650482fd2e4f(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_ae8769a1aad84ab88cf1b470a7bd42b9(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_da6f55e5b35c4e9e8ef62e0244a0b802(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_5327d53d432449b4a3ee09ea7ef7884c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_8b3523843b8c46f0b8c6c731abe1731c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_23c7d2de151b44edb17530271f987599(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_b27eaa7e5ee14e55b6ff56dfb4d38447(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_79c00d60a8ad4552b358ae9011616a58(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_6b6ca4d5563c483b9c5eab082f086531(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_80da8598a877467aa52f003716c23388(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_8f7a40395b03435bb0e067b0253cc2d5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_58ae9c5ccaf144e2a15bc47ba72c9c9b(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_0fe9803adeb844e396c9675ce7d83a42(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_644098f5df984358b61a8c5fb032b3fd(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_9d7dce588d04413d89a3cdb924594d04(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_74473cdd89e245cdbd05d836ad0895ae(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_f233ddda18ec4587baf8702f06e7fa03(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_64306932e5d1480bbe7c9c4c5889712c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_e230beb0a1414c5992a721c6c7bf8fa5(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_72acad6a1f22405d91231134d3a73bf2(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_ef247a0b5357436d96b7d27344366896(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_621ae30666894be9bf29920b10e87c15(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_92745803f4a44688b24b5a19e04c88eb(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_0b12321b5f984dcfbe9306b571252281(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_821b8395a85c4085ab10f0a6ade384e0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_809c2db47b8340fc8a98b95ff6659e22(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_a23274110dc648d384c731a550e59283(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_b1c1b74e33d14bd8934da060f804b7c3(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_3f6e1ce294b5437197f7d1d0ad5b326f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_27eeb23317414131906a4b435633834d(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_e8d264b0ba1e4d67804912911a277791(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_b8de1fc476ff43789b4fa84140b01aba(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_b3088c5a93d8455da50225953d28c99c(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_21accb6d395749a0bb94cad741aa175f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_18018b8425964166b31628a4ae5c5651(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_a3020003068346c5965b8c4bcb2600ae(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_ee40e1cff72d46508fd92ef7cace7b01(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_659782b953724b39a507b252bb8b8d8c(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_3af3529c0b1341189e5fa6e17ffc493a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_ed3a0516da38426a82139089cf2568dd(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_5675e615c49648a48654c2e4ca594163(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_841dfdb54c194a8c93a14bc0fad4cf00(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_4426406e70b949a386b72ee8737fffa8(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_e64c47a207f34df697168006f96d17c3(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_35da4becfabd457ba55d5780151e0e45(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_60aa72958e8245cab59431edda6fb023(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_4f5b5846c77046c7b4617751cc4d2360(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_a087e0d23f7d43bc91bd51ed25826027(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_c196c4ce461b42b0a463ee9042ddf28f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_fadfe1e2d5e14861a5776c94c3279fdb(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_c0f430a27c6b4bc7a51c3d4440e76c34(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_e5aeb879c84a467f8a2490a4e4d66b00(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_1ef9bb957ab6455989cf47e6cd0fd66f(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_f73de9b0d0ae4af9bb6e59d1cc8279f1(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_19265815c0ed4e01ba7755d89feb7010(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_8e5218ed40e04f10942d559019d4bd60(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_8998eabfa8aa4405be1f70fffe378dd8(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_f830174e87a447f9a8d342fd5ec043e9(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_2c609c627351401fa24dc814fe4f6d80(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_95af07d22cd64462992726393de28b5d(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_9c55490263f948168a4233c8d5cf2ae8(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_ab960abc6585497c9745cd20e2a8f423(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_ef954aebf13545ef96ef84cb094fd65a(lower, info, start, upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_e39eb2e0392e4d7b8e4f756a896fa3a7(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_1dc0ead2c42b4b7a89f01ee1ac5a48ac(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_9326beafa0a34566b6cc0adea420922b(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_8bd0c2bbc8bd40da9151f4cc8e8024ef(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_d5e05c0334634969b7aff3e710c72576(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_27cdeb6fca5d48abaaf4f632b5e4a108(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_e0e3712d84874b40b6c3f93d0b1fbe7f(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_6a3ec3b7d6bd41cc94e55d39eab176cb(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_4d503bbddb87440c9e6ad083c820d778(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_0d7a69d963fb4f9797795614df8af635(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_01e59fc16a674051ac1edc58233a3d8d(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_86af0e0b6d8741d0b2bba415d2cc3ffc(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_948da59d7de445399cf06d8eb56b9dc3(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_f40cca1a837b44f48129c4a3c3126cba(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_c44edab8ff684edea1d44b2508d998bb(casenum, lower, fout, info, start,
    upper):
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_bbbc5e67e80646b4aa87b5253f319d02(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return info


def func_a6cc818dcb2d4515bd7c05696bcfd3a3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowslope


def func_04cc8624bc82419aaafb2bd9b35351d9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return i


def func_4210851d101f41b6af82697f63bb1885(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return upper


def func_546e32d5aea44c07bd78c9973117c1eb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return height


def func_743a105d605340f4ace9330b96d70aea(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return start


def func_e3f46188203d4c09a018f5cad71f7de5(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppi


def func_a4360c299891433296922c429687ee28(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return area


def func_6a6bd58283054ce796af45d5b9d374bc(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return slope


def func_806a4e23225a42468f058fe7f08fcb4b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lower


def func_231d8f31a57342aeaee573195492a66e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return uppslope


def func_5647066386f14083b262179e96ff22a2(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return lowi


def func_ab5783dbf0fe4fd5830a848a9cda6812(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    return j


def func_de18192d4c9748d9b28ef4dc551e2f59(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_227a01c51f1d41618bccba2b359e2e86(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_4985546f2f434704a457d37836af7b00(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_b1e86d64c1514835a1e0d2bb72c48a3c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_f2493103c84f4c16a45b2ce989d804ee(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_6ca40a82bceb4af2bcc60965e881ad5f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_f28afa4c16f34284b7e78e80b08a7818(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_ad5e604b3e024d558ea52af8357824e8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_b3e577fdc00348ed84066d3b7f482d4f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_7fc39f5165b344578e09fba0d2539166(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_e1353f3d1b2d463787c6bea29f3dcb64(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_f60854aa571245e79381aa3245bac285(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lower


def func_bd857b43e2cf4da4b434a8b790ee4dc9(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_8921fd35d0484e61bc0f5ae2577e343b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_f640788c1f93413cbe9fce262dc6934e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_377ed0cc76f84477b76ee362e0400697(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_8a02c030df1644d3afc4a5304a0ebe77(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_a1a14f0ba3bc446fa07cff2f2257abcd(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_c82a846f46c447078816c1cf94bdb39e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_5f6493ffc3774759b7f101242061078c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_e0859e20a6e74acda2d7790466d59b8a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_cfec96a6db9648f7a4c37b43f8dcae12(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_3e12ed0926554bbaa835063fdeb11737(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_7f2398fce96143f1ab3e11e968471af7(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_1dbc8fb4ec08436780e5a90b21d14a50(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_d3cf27b9824d437a82e2aa937ee68ac7(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_7955d07354aa4740bcbaa144f738db69(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_48a321de2f18450d8431f785dd882612(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return start


def func_118e47d559c749bbb1eca5e9bbaeebb2(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_28375699872543f592ea7dbc7b9b6f51(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_31a1a8d91d7b45ca95e557f31beac5e5(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_d9926e90a2294c83902a1d7e24c382a2(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_d1b2998abe894b6ead73be62d343396e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_6851b55af8b144788f6b7a915ba7e537(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_0b3a8d0e755f4b1989462fe4fc236b3b(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_1c1cffcdff924acba71cb4befb9fdff0(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_0c78d6fc3f0743a7bbbb9c1e7cd2429b(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_7b571786e56d49fd9378ad5b769480dc(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_1abf21723d794031accb2fa33da5a29c(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_8027771530c5437fa374a6dc1ed86a50(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_50fa87f580534a1a9b254a76c4ed50b4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_92bb7b208b274506a97ea31ef1dcee02(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_105882a1bef346a0bb6f9c1c1d276e6f(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_a98d660551544d119a1d2aea118d1900(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_b3855e7613c94478aef76103df93720c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_374ec043551d4c21998ad685df6a13cc(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_5418a067b3ab4eb38a130e7dfa5ce654(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_0d307a586ad84568a2b12f67f51cd7a2(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_779375f333fb4cb1b8a128b965da4875(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_ee9953433b614c48b598f24b70c872cd(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_d1a09b298a1b40ae8073de9d54f9b926(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_9deebd510b8745d2bde9bbb07410f9d8(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_d86b1f3e77da442aa9fff3d61544b408(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_2457b4e09152484fb5f054a9f17901c0(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_f44a9784685c409687be919fc9bea34e(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_0ef90b7b59584dd385595137caeeae71(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_f16a11e82cf34b2a9abcdee6f152c44c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_216ec4a165404e339510ab4f58f79040(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_0bbd45c472f448e68289833543b59162(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_e05565066fec483f9f1ea1a216487bd6(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_c5d7b65e17174149ab901a0e517aba04(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_cee35b9756fe4eec9fe69d1f3e296b63(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_afca2e3b8c0849249812a06a1c601510(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_128939118ba04cdd95a0396e9e780120(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_53e3a4cdaff042688156241698587201(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_833765badeb54cd6873f27a405e421d8(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_b808a1a7a2c34524ad47f70d45dd8711(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_218aa2d7230a496b90563f8b6ac9e60f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_2e1c78e092db4523839c23175342bde2(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_85aa9c3b9e30440f9a9a2d9eaeff8cc5(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_d6a039a9d5e24dbda257001f06dcb975(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_0302f37ba9954699b5d1b949abf6546f(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_3ac32386bffb4aca925f4d7958bc47ba(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_4cd591e87c674dca999994b2af923565(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_05daace76d7c47728a3d4296b02e7ea0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_d70d275b65094927b48d38a3347da4b0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_d04ceac8d7b14b3f82a5614a59fbcc86(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_8162d5aeeaad47c5931cd388f8a5b15d(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_737060ea5d1b4a54b77df7a4fe67e563(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_e567121b8f4f4dd0a7c89dba9eacb146(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_d7b60886ac0a4ecab7500d8d32dd3887(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_943556df0f5347fdbe186bc46757d1d0(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_e44d4a1b02a8431d9fc4d8a63e7666e3(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_b30bc4acbb624b9ca065a0f2e64745cd(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_16c78011bc15415a96e345f34c641b19(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_bc980d64aac542bcb3ccbf2202d6dfc6(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_f754dc2908964f8088e18b4492ece264(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_530d4a15f273431da38b2ee0c209ae2a(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_a224df49967840aaa0e850a3ba419b88(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_5a894651b9584eb092c74d34c636539b(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_f79fbea298b24064808cf7d2341a36ef(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_435855ee17424a1da6eddd5d2df24976(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_a641ba5bf0014624b9612f8327b49e80(lower, info, start, upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_9d79d5f1fcaa4eec8d60c4a381d461d7(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_2cae8114cd5948fe8b7e8730be1ef3f3(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_87db91085c274b2485e9522797e1ad27(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_44b0c754dca54d0a937cbf1a772b762a(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_f5a1cff2624b4830a531f0e2dc88d11f(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_75a00f9309394d03b97249612fbdc9b4(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_c0fc43c67ebf4b988b9a20ce2dad892f(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_cca5badc293a4f3ba208b8087690a627(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_4fd0b65551874f74acd112bf90fb1bed(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_82d32e7d9f734bf8a691abff43e00e7c(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_eadaa2350bc64257826f44e0628905d3(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_68d841c5a2a04ed08f44da431c0c690a(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_bd07209c32bc4729a7efed632e0f56c9(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_b36ac6cfaaa34cce8fe9db05b52e43c2(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_c000ef8ea2ce4b85885e2d201129d6c8(casenum, lower, fout, info, start,
    upper):
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_7948a3d3f010455582c1448ddee5a3c6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope


def func_8a166d482634426cbe7fc0dfec7d6ac0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return height


def func_374e177ec7dc4f09bfbaed4e703aa788(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return info


def func_8ec2bb287b8146789b433b3f6910a190(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return i


def func_35ebed95678045e3897ab8197d0c7eba(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi


def func_e78d809f54694c1d9bf97bab15f2adfa(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return j


def func_5ac13c7a81794c2d9e506bc4fb7904d4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lower


def func_a1fac3f478ce44389c0f869024603dc6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return area


def func_158b787a277240f190fbbcda480a4ec1(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppslope


def func_cb5c56baa2054e9498d62cd9369ba4f9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return start


def func_ff56242e0f4b40fe8b946c633ac3ccfc(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return upper


def func_415240564a37452aac4eafb0cae1ea47(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return slope


def func_fb8d8719508449689d1ac27293236ece(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi


def func_cc3fa0a9460a4813a31ab28e5936facb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_09621f077f494a55bd02477f2c0ffbe8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_94d49b1782c64165b91eac4c63e0d266(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_cfe219d9056f48c3a27d9ed63f295d79(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_f496985e6fc34496b7907687732810f6(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_14d03cd94cc44da9923f494e22905465(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_084899b3b0364e32aba16e02c5e89174(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_3ec6e746cf744a6c973df38a4b77c5d5(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_dbc76f58ce6b4f6ab462c0c52a5367f4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_f97376901d6b45798a1e974e0277e17f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lower


def func_dd1bd1694b644743ba4cb48ec1159564(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_dd90a614df18483ba8ba5e9a209ee410(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_c928146730294ef8a32c3cc6972b894d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_f67254c75c3648a1b94d39b5b1fa5489(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return upper


def func_3f97e37d8e32411093f0cace38eca26c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_91e13680c1b6476194771760162a1aa1(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_84aeb8e6308446fc928bc190de35bc8b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_a0aa85eb9b6f4fc0bd8d01d45407e9d1(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_57d010f99f1a4a70a7dddb23356f9d4f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return start


def func_a64c529750d34262991c1fbf18420a51(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return j


def func_0882da7b2a7a45238e0ff8b6716a6f72(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_ce02276edbe64e20996392f1b23f4dcb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_eb8bf512fa474b7987d671b8c03ffdb2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_b63acf6f3a1f4f89b6908f9bcd4643a2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_32a51bbb3b3143acae5cb8420c54d3d8(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_6ae78f26e2dc469da69d1fc4e808619a(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_93862930ba3c47b1bf948d37e75e7c49(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return start


def func_4203c394a0d04a0c8def6be8aa9d61a2(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_ac5b3b637f81420eb1ffc817052dd542(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_c9ae4582f3b14db58910ffcd62260cb0(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_9c474fc017c74b39b3a16fc49fbb05d9(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_bb0dbc2eda2e4250957abf5d2b660093(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_041178089d124c259fba75d1c6ed82cd(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_65aeb4e2643a439e99e713965e555004(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_d69f28bb5a7841f9b0cda5ff26e573bc(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_597b7b184d204f6f8cfce92e8d14a4ba(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_d5fe59696d0a48138f6a9aa3c21d1d18(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_d7846029fa3342099378c6fa2cd8943d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_6b3f5f4881f346c18d2d363ecf1dcb2b(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_86c69b885b3342febf419c12c73aec12(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_e4a8592159f8479dbbd4c4c9bc609c9a(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_17d27d5f22e044f9bf06cf61946cbd00(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_32d1c308aedf4ec3aef83d42f94ac596(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_afe52df334694725ab004f40833e0165(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_2950117035a04790a3eca03546bd4975(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_317302fe7d6240f2833b4a2f74b12ef3(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_1cc13e2be65c4a48a4c34a7f3b9e3890(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_d289eb3b8e944a07941b99ca7407d1ef(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_5b207ffcbadc455bbddc1204bdc380b3(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_8e340ecb280942da9366f37a2d586373(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_90a06b6e96e943b5aff4eadab80423f2(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_9b1cdf2e672b4ec5a886d6df687e194e(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_b0964019c2e945aca6c1fb9951d3cde1(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_659a61b2c9a14d7cae9a791c1d7c042c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_a0af73ab5ddf465494892a551ce88769(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_57ab91efaf0a4f0b94546a8dc7e66926(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_fda6ab5b9a9b4f309c31d04167e2a9d8(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_7b100f6b07e54fa1ada28bd196304bb3(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_b0dbcd827b6d4dd0acd4e9eac91fd861(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_7a051a93e8264594ac7c9775425866b2(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_b91b97d3466e4a58a2396f82c5253b56(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_1ea6677eabf54968af26aad8ee5814fa(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_84fdde7d055b468cb20c6f4209bdf861(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_ec4d07c00d184fd79746d53bfc8e56b4(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_f28a46ff6daf49a1aeb5322887667f4d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_b52f8a81d34347cbaab75f66f1324070(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_9abc6f17f0d84ea7a7205ce8e03da07d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_fceee550342a45e3896fed2d38a871d3(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_a724cbe713054f0096eb82b5ac57b6f4(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_57c6218e9eb2463da5074cab231e29ab(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_43b26b1931b94983872e6eabf2d8d397(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_321b0b4f24ae4d4a8ce79d8893b7a080(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_658800ca064a4d56a6744ef79d360c2b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_3baa8095b24f43f6a9b1f358268a8fa2(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_683c391436444b12b120f723a9959359(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_6ae50f897f134ccaaf7ad55687295412(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_3e26d75461ea40028a270f1a138d4232(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_750484963dbe479faa381590492287a7(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_d9d04a613b8443c8883a0964fb722d26(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_28a39b1c9a2041f5ae5411a289489f0b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_d8b5a8c66f6b4aa4ab7d174410c55a95(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_28a55308b85145a2a6c23357e1b7d8a6(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_3ef574a6b34348029e47b4e12a44b7d0(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_a9279031e9f5437cbab94925c7b1ea6b(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_c2721e7c0b1d4984b032916cf2150c1e(lower, info, start, upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_d9b7fc8b5fe24e01a7c6b2fd1d246e5f(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_b819b66bbdb04ef2a0cb7e03c39182f0(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_81a7bb6b1a814e37a80d73f3908668b0(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_8a5a010c9ede4def9f9bfd193d33ba59(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_3500f96979e54d728448b18c8a6be20c(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_f7c6545c5991444f9cd5c4b523c00565(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_29543c34a9834e7f9f4a782db4a95498(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_ab5216ce02834e5b9c02094583bac2af(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_aa6530b8404740a0ad6535b0f111cb7b(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_c7217ddd1a224ef5993136fa244395fa(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_c11bf4fd164148809c7857c9809b9831(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_49d8023280c0420d91446f0642355cab(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_84a9aa88a6ae48ea95bde48c33bc1bfd(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_1424441770634aee86f64b92d9b00c9b(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_51eef6ab707a4e5e9849c2a0592c6b4d(casenum, lower, fout, info, start,
    upper):
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_fa702b19c89e4d3dbb4d1a1c8d64ddea(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowslope


def func_971134ea19d1442a87a78058f0d4d13b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return j


def func_185f67f4a5224062b2e0a912790fd0a4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return upper


def func_ff574cbf15ac42f6abe2cf732ea6c050(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppi


def func_fb4fec4d93894c718a20eb808943a794(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lowi


def func_e5db5955ca9b4b7b83be7580858d4a00(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return i


def func_1cf4335ef09843cebbea2d39c7c96ccd(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return slope


def func_73a3f9c010494a76aaead1028834362d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return area


def func_7c6bc7a4abb640df95875d1fb7cd2fea(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return lower


def func_0871ed6e951a492ea8ba63cfb133047c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return uppslope


def func_5041211b0e60433d963d25640539bd88(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return start


def func_8045836cbaa8467bbf18be8994c2492d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return info


def func_7268824a48d34d84aecfdbb10699086b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    return height


def func_e27845dc0f6c47658c6249cea7a1a4f2(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return upper


def func_9d82c70ce63d4a67b6003a8b75406cf4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_5dfedeeb0f2849feb8929d2183e966f0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_84c53302b70a4653937e0997ae12be44(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_6d565ab241e34b3f9232f5b9e3e8bd6c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return start


def func_72bf24188682496993cf93cea2ba92b9(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_3c399969c8884e2aa44c034729e306fa(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_b5462f23e5174746a634955719814f6e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_247230af3c2648ada1487fe910ff338a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_92da94ca964146f98d74d4ca8880fcf0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_274e854326f34f3aa62b27d1dda6966a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return j


def func_d1f6a6ae01814e98be5395fa01b26f7b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lower


def func_25ba491ffd644dd396d4be25069b45a8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_cb87b5cafe6e4e708b078d7a497b830c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_48d24038cb0043efa2cff4f68c046f9c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_92aeaba2ce174be8b38f0af2cb119312(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_82e9016481194b5ca1405efd6032bb4b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_38eb3d11273a4ddb820c1f5643363c34(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_be67c9dd07df4f11b5e44f9a47d9e8d5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return start


def func_00505ba2edfa425987b4c65c62d54017(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return upper


def func_b9712f7d3164430b9284ce2babc2f239(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_77a02465ed65498d8097ff2df89f8ea7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_be940c6e671442be8248b3d76bb714ee(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_5776b87fdfa14a83a8698d4bc62566e6(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_5618400e4a954cd68f18538f491e85aa(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return j


def func_e65f0a82fc4648868098e6054a58eb43(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_8827845637364c7892dd261365b877fe(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_3757bb8d4ccc457fa2793a033078642d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_ec8c6ab22e2e44568240cb2b0eca96a5(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_9071991db4bb48069c0c9184a2083655(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_637faa96819b41a58dda38f8c3a9f07f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_8fcc325b468d4228aa6fe3eb28391486(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_ac101455bde04fa289224577f5896a01(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_9d12d9f6eb694195b41b186c8e140a12(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return start


def func_a71c3e9c78f643daaa434cd5b17df455(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_ccdbef77cb374633be83cc207343ae2f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_885ea386508e44308fbcaff4be81f21f(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_ccd7bef0f0824c69a061cb3e84f29696(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_4c8fc7d446ea4708b5b073f99b76afce(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_6990333e1518427aa4c3f19b68ebdfb1(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_1ad70a758125408383c498ed974f1f20(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_ad82f8e4f63e4780b27b9244ac594eb3(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_90ddf6e4e60a4a8db080ecbba2828319(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_360807d3645642dfb33fd7b84b1c7866(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_ba040fd465fb498cbb18b42754a09870(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_b7e8d9ae7cf34650bd9e93ab0fe5a106(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_de4a040ac73d4ac7bfe604b250eaa8a1(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_b2264bdfadaf4a63af99b15a9fb746e4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_8a48f5b1a8bf46ac8156b81599fc3039(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_cc745c88483f42f19ec01f3468134162(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_724fe1ee39a742a999590b852c18f11a(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_f30649b423a942a18781330826cf8f51(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_6471d3d6f6434af89d83d726c9199efa(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_b0c2c6b978d94db282246195d523ec80(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_f82d2bf9636440d4a82c32c3cd32000d(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_9d3714d0e86849a184c49ff38e4c0137(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_d2bf39ba971048789c7f4b30cc74dd8b(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_be6f4a777d384459a3c52c97e6fa9189(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_a8fdc1ae8d094494a7838956a4973211(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_23aae6f593d84ccc9f365e106c85e576(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_5bf34e8ff9714a1abf4d930cbf4bffac(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_cf0fe439a2934bfcb0b146e11cedb601(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_1d12e99d6fa24e158baa0f42fefd3e3b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_aad89aef81364d38854a0d3e2d208a11(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_3f84ff0c6eb043788b68e79ed2ed0727(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_d9bee4db74db4f4488849ae3bb49fe9b(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_c847411a0a3443838d1cd1f0acf5b741(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_d5bd7f95275045538021c5b2b9e04323(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_35421bb3a322486594871f7c1d8da6c9(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_cfd47cb3cc354d8f86db1ced4ddd1eef(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_b226f94b2a9d4d66a419b4db0bb2b26c(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_339a2edd57d34dd4b995af37e978d148(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_d62ac283b93f41c98c0bd9423002ac90(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_2540e4e779c64c6081e4860e8c671d89(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_5ba27a0b34114e1384c315b27eb2464d(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_6247c6d79d854ef39a74a57d05867e00(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_5f3240e159ca4ff89d049bc8ed0faafc(lower, info, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_ace953ce8ed74e0c91a6931ce21a693e(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_93752eb508ba446588a2a0daee511693(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_391cff87e0d1418f9a535b9c982693d7(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_faaf648511854ce09192906b8999281c(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_ae85dce1272a47b8829189892a25ac1e(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_f2265264594e4f2484b70cb75ac8e3b6(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_fe95be78482042d5a1ecc7db9ac17222(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_e41bc642cbf8442a8956863052cf8cc9(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_629c8ca3375f4f46a00908628b9f3a62(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_7d83fb3d6f414701a31ee7b135b26791(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_09e924be77bc4c1094e6828ce19e46a0(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_4588edf40c9c4a63ac085479637e7109(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_306f600780a64f399e89bbcad3521c54(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_3ee446eafda545ddbcf4cfb13fc50ff8(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_68577cda9d6248048f48510f6537b4b2(casenum, lower, fout, info, start,
    upper):
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_8a7e75db5ddb406aa3ceeb8b1b9d6efb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppi


def func_1968dec76e114919b750944e1e7fbef0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return slope


def func_8ffc70ec51d04c66a10b9d7042491006(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return j


def func_363ec930e0f94122b0874b8e5e71c821(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return i


def func_4c25c748d7ca4f40a0704381c1a14bf4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return area


def func_79b132f92d304e3fa134f54eb3e0f078(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowi


def func_1418a53a0f044c658ecd0c527a5f70da(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return start


def func_f74bad74c05544709d1b7831582ac58a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return totalarea


def func_c3649c11b9134f369c3f4e4b775d898c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return upper


def func_4cb55ace8c8442a797a184e49d98c0d8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return info


def func_6669e589b2a648f199b379445159a011(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lowslope


def func_26ca3d61df044935a4b690b8bd8fe131(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return height


def func_93fdbf85fa914198b4cbf21ebb723745(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return lower


def func_d4a7af8b5811498ea8fd99983da5ef78(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    return uppslope


def func_9a4594a146ad4ab586e2f6b9eb9275d8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return upper


def func_5f6c2f94835946c8933e805e004378e8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_567e62dd45b74b1499bcea5153c7274e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_745dc8bfe1384f479c55b59a7576e452(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_840960af9a634635bb2e5e6220a11892(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_a54e50964b164b389aeed5fd87840191(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_367c4fb0dd264c6caefc9e8ca9d23340(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_98c06fa9e37e4c27bc82bf467cb69baf(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_18d33a8b3fae4574b48e504c4f32a33b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_d373c6c54cd6401f92abeb1ca16ae489(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return start


def func_9935cb8f666d4857bf87eaa47c386777(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lower


def func_f2bb3447db5141b5af02aba4f3611a41(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_0e849b8181f14c82bebd96eea9bbd22a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return j


def func_74d98ec6aa1840a084c3e7cdd797339f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_0f00460b297744148a0aef3e84f1b2fb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return upper


def func_5dce5f0301fd4fee98da3c544a353c1f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return start


def func_4fd768b1cc754607818886f639e0847e(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_e9491d4a8b0b4c8a9ac3226874782afd(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_4944b90685ad41edb945c0e2412779ff(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_d0f4c750fa1a44edb6907feb91d72646(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_da546d34029a4e9aaf3adb5375aa9328(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_588550b1abcd43069674de78d7799475(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_5a8cad79eb1e46889cb17258a822ea23(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_005be3c13d6c4b75aeee616a71f2dc60(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_d094200ff0e748c18358138cd1638be5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_cecc2410e06c4bd5852ba01530d0c6b5(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return j


def func_86eeb335bd054f9b9f440c3d77da97fe(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_4afd584bf3134dc29acbd799b75395c9(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_2abeeaffcc974459826a2d1554729259(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_7fef84adc63d4693b3752a12c5002e4d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_d2f0179801344fd9a651a31cd98a962b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_e2d3c5210bfd43398efa56b971e582cf(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_893455fa17344210b056181a7637b747(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_94a21f673de540d9aa445a0254021b70(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_dcb51734690f47c89bb20020f0d8bb0b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_9cb5202d594248e2b854abbc8977c968(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return start


def func_38212ffe13c14111bd246f4f9b7a0020(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_3848bb7ac32b45699f939b4ed2786e72(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_092f01c4371a44adbdc6c890810a2fe9(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_965086f6bb474269a80e51f421a671c2(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_4c7d53e6c3a34fb6856a9a85d34f6f31(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_21a92c17dd7548babd1b061cc1fc8f89(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_1ba879898ca94c8e90ac21f1f31f02df(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_5482848fa3a34bd49440a23e1ffcad60(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_34aefe295cae4e289e5d951fdfb50cba(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_09acf69d11624eb78e4efc598c216db0(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_6c02c34183214b2fbc09bb2bb8f0ce8a(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_850d28d5798746158ae1c31dc42694c4(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_ee07173b35d94c81bd284f5aa574f1fe(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_d1d7084cbe974b4187256cef31f62254(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_320a3dfbad894c0091ad91a748d73e92(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_130dea70aa564856bc9228e38d5ab993(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_1da736ec101143afbcace5d058e9eada(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_c02980d307d642e0a81b8dd9b0af2a6d(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_2e18156a75d94abe9d84c49530935ca2(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_95e226c7d36f4ab3bf122dcd3c40202a(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_8700d94e9fe8413e8e358570e50378f9(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_ad6af90255134e05ad5354887b9965d5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_6cf28ddbb4424c4b9a381b77f8951abc(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_01dfbe6b9f6b452e892acdf6ac98c511(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_5bf0020f4cc846e9a1c32776b6f89d75(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_f7d203bdb748454e91c0761c7c51fbc8(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_530e8e39aac24e3193d7999f66dac03c(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_7ebde16bfc0b42c79acdb9d4db4fefb5(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_fd236c2a9db14f7abe324b1563a60d79(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_e8593aa858124f64a3b1e7b4ed9ee5d2(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_a85f32c6881449d08a03cae8ad5a0ec1(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_96960807b81444b6a0c547e56e931ae6(lower, info, start, upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_5fd9b57ec4264b4e8d7448435aa2239e(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_937c89717b5b44a8a95758ced4f63855(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_7157447cdc564e4bb86d76870b78f822(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_31d66570e4ce4bcc818a03ca91050a8a(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_b4b38f4404f44ceeb8dc135b209d1417(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_85b34b55178a463e9076c8dbf9c759ec(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_1b02fe42cd1c42a9a297e9be3f7c830c(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_1645589a5e6e44fdb8877aec9d1138a2(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_88cfa040a5e74c098abc6a71a6d96b82(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_9dc4d3a9eccb44dba103934f1f8bc951(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_bb2c064ab8b24788923b78c5979ba414(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_996924c79b834d8a94f35e4d0017adb1(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_f112a9c06fbd47d188ed0675ad9ac031(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_e6cfd2cb34f74e4ab1efd557badcb0a3(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_a08e52b1b91c4b70b798b8b5fd1a578d(casenum, lower, fout, info, start,
    upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_edcebd33ac9d474686817c73d17ae28c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowi


def func_5f127172adc4471d86b93b842adcf71c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return totalarea


def func_737b300657a24832b7c4b81d228c8abb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return solnstr


def func_3890a7802e0642e6a85864b637429d4e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return i


def func_01ea974ebcf74e718c2c9094e410fb3f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return height


def func_26a4220c2a0d4affa07d039ec0659dbd(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppi


def func_2f00318985ba44f6b501982ff0416a2f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return info


def func_e2b84f7faec84287bb7ac649f4389ddd(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lowslope


def func_2b76ae31ae06433ebbd3aad3eff64140(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return j


def func_351fb59c7e77476db5a7b8807c4d7403(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return area


def func_f71906bed078460082fbb940d9fc6b22(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return slope


def func_d422f43c8cd848bbb98062cbec1d5257(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return uppslope


def func_6c56efa112974dcfa16c6cc528723195(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return start


def func_b28bb575086140fab386efe21033e944(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return lower


def func_aa834c47a0a94dceac4c446cffd3a44e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    return upper


def func_212b61f980654d69bfcd2e2b95c57f6c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_e9b14265a2134c7c8c6354cd4de1ea3d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return upper


def func_388ca6226dc54794af602caf316c33c3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_e177c0137ad34bc79d38dc1be0cf7278(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_23d66073ad5049eca755f4b3f907f940(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return start


def func_8dbebf5157c54c00aa260f1ec02dccbc(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_ae68e2b3c1c5483c83cbdfd9586713a5(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_0cb22b78304d4a92846d79ae8d9c3759(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lower


def func_0087ac094d93452780307da08301cc66(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_01ee42d15be9477fac75245532d67f63(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_6cd34b3c219d44dd9e702efcc9076e1f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return j


def func_8aba8470d6d54f06a0cf27f9f9e5a7f6(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_dc7b69d8ac4c49049047e2c90bba7996(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_674f5b925c5145739dd5146cee367e9e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_d967c60f21124756bcbaab869a7e460e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_eb0bc813964243879953951307594a05(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_577f486b1db04631906c15b506b6ec3a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_3089083259c94115be2ba3568dc97bce(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_acb86dbf9fb84a0fa97a886e46b17741(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_93a6538ad85f42d2a59c216a7a7932eb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_a5edabd67bf748aa82a2ac7e9f0b914c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_af7ad8cc525e4a09b6b7fd67c9a9861a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_9e1bd48d1dc44b879914e3cb61705180(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_0b6a374dd8e4429cbe8908d86019c87d(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return start


def func_e2f356d835ba4580985292f93615ba32(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_f7b11f67becb459db71712288c0ee765(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_96102c28807c43aba78fd7b9c1c03230(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_c66e965b4cfc4d45a6e522b60976c69c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return j


def func_5d24e4b3d3cc4245a1d284dae22f5699(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_8fc50a7bdf8941b0a3dd8851f66801a9(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return upper


def func_6529513303f3469089fd679f8b866a2b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_8e9f9a8497bf48058935358347eee456(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_2552f0c4a1c9488ea67c0a3a4c953483(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_00083fd303ad4b8fbfb4a1e16fbab2d9(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_d4640e3104204ac2846c9fe731a98fb0(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_d716932342974b2ab5aa63132a04c07d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_957d59b4878c4463b786d2f00559e010(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_31777c67ac374b9cb8fdaae01fb2d723(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_64bf4a0cb28d477ab3ea803ad7efbc95(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_516d67fbd6604f2ca179536fdf26fc6e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_995ca1fcdb1e45c1a420e94e6881412d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return start


def func_953b7fa6d67d4773b6717dea81cb3024(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_9d154b5d51e94aac9a42cb6badda0d98(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_5ae83af71aa14caca24de686dc85b142(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_759f724067314a5d845aa0c960b9b75a(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_fa32b1ed076d4e53859e224956e0f917(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_ddc4b173fd3143c38f53e86e60c3c04c(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_d3e5480b412b4a5db4371e7c0dc1b9d1(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_65e9d0b8eedb4d3290186d05a2715200(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_bac854c56035481bbe72cc30ae8e66ce(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_b5f7c78ab86b41dcb6f3dfbc1a1f2a5d(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_b23e1312d8d3411aa24c6f5369daefcc(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_29c2b16285a443b8a547eb556c0a4dd9(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_214fc536d1d74e078119356994f9ff2a(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_7a333a524d6346d0976bd229d33c1f88(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_88ca05a6722f421a9a6c6b9d9a6646f2(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_3af95b32341f4e549138c6bfe028bf7e(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_859e0be0b6694c68ad6052eda965539b(lower, info, start, upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_49818a5aef6348f4b2a3338f629564a6(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_2cfaca94611d4867abafbda390acb338(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_45ced27ff9db44ec8b26dc6311b3c3a9(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_96e40374211445969806f289b1e4b194(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_e785653a6f654042b092cd4003ddcfd8(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_07d3788820ca4ffda3650dc2b48577b7(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_9281046edd32473bbfe3fa4f55c512a5(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_575ccc1d83bd4dd2b3e25262693d9cc5(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_6c0b90da3ae94e4790af981baec7a676(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_62cead5b9b344aab8ed071a9011a46f6(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_b95355aefdc842b09d8d4e204944aeb0(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_62ef42efd4784f868a4a5b7ed8a3412a(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_ec0f27380a0344e59a46f20c85cd1b3e(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_81175589b30f4e609f7eba3d7842f73b(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_385d4b6c25c647439f0abb2af9b61783(casenum, lower, fout, info, start,
    upper):
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_d2cf9384ec3942f593413e8d433b0909(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lower


def func_6c52d65378244cbab9daf3ed76d4cbd6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppi


def func_0b29809b3f6849398284c9729fd69a57(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowslope


def func_c50d4e39c04f453fa3946ebef51a5568(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return totalarea


def func_00aa248b13c144c7968dda891acc7fce(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return lowi


def func_89d1b63ac1084210ac3988818259d25d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return slope


def func_d3abfbb428e44479877c8f1ddb5865f5(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return area


def func_76fc6bf27e8b4b00a524a4845d1f2f9f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return upper


def func_3f8257f926474b8d808f4a475b18e0f3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return solnstr


def func_476835e1b99d491d98103a05fa5fca2d(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return uppslope


def func_7314330a3a4c49caaf64fbc9cc8dd77c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return i


def func_41bde905cd034826bb3683d0d000cd21(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return info


def func_17ac2235b2534aacab8e08bc094d538f(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return height


def func_b5879a83796a42209a142496f3864b17(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return start


def func_3160734bed764759851107397e29e491(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return cut


def func_bd3794bd91c245d8b2ff3a6df79a5b42(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    return j


def func_197bc2c7c2c54430b33f60d0e80c3cac(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_7c5bb71a93d442f68c3dc72793b985c4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_2de2d5ff492f4b67838062c18fe3e075(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return j


def func_b4f6b4feff674b85ab2b3bafb707e487(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_55ebdf6f83a24e908b4e5a2a8bf24a77(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_d81719b98abc45639e183e47fce51ac4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return start


def func_03635ca97dff43b693781d0d246ad92b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_cb12d77b0468445997717d22cfbb45fe(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_56d982a508024e9dbf94e73dfcfd6c4c(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_062ac598d48442c19f8942e9697dbf55(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lower


def func_4431a64e7cb148beaab464db5f241970(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_d7ae78d1652f45978440c76ccf638015(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_ceb2ff46722f4710b3681626d01d58d3(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return upper


def func_9ccdb181c18e45b1a7e732b262d9eded(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_aaa9848e2c0745339eed95c2a64071e4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_095cf2630d8e45a6befe6a655794481f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_6a075be6a35949fa875846666a79cdfc(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_8691ffa3090249e49afade36bbfc8e17(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_1490e8a2f716419b8e7330736929996a(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return start


def func_22a07f7e346a4f89ba0b0a6749a72a90(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_f6cf669258994f5f856992866d17e6d4(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return upper


def func_3c2e22e25361414986da77dbe35077eb(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_069cc819caeb4df1a25f9afb1d6ee369(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_f78e56df6ecf4f548f01b0ec1a92c336(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_e983ad3ad4c244acb665d4a247f7dfca(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return j


def func_98727f7e16c148978a455df29e7a7c01(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_57387c0ac1ec4ad7893ecf8c667b8513(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_2f7f8a7966a64dc8b4d973ff1934d0e0(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_f1ea1b4c0cdb460fbb98fe509c2bdfed(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_95fe1cea34f34a1fac91d95cec8d4616(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_dc231c6ca0364c1dafb6802e6e141d30(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_be1eff8902334f46b35d7489f3f71f80(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_2a5b2fceda024c52a71d5875b6e7044c(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_7ad1721fd7234b55bc30155c555c6507(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_cf44a8e13b714d18a949515e90a21208(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_551f8a91b1cc4f97bd5e197540bd575d(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_3cffb5f3c29040ce8677ddb7f6e185e8(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_3c3af01b49e04af8a9e3295ceee37592(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_e30023b984d64856a6e90f2590a85512(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_ee76db05948a45b1878285016a53318b(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_88ed85f82d8047128dda68a0650e51af(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_0a45a3a1cb5942c5a24fba275ab0c3bf(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_d24d5fe58e2249d2befb3bc8dee0544e(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_3527ca3d0e354e4d83fe1779421defac(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_7f8b896ba8e949b69bf8ea09a9bc7329(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_52a67006e49d46e08da481128ea9fcbb(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_3755652435494dfaadf8528b60fb5c26(lower, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_08a71b41fff1462bb8e5035471933520(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_9ff83a3fb49346e184bce51e231a391a(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_c74894beab144b1c85c6f84bf957a313(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_beacfb1b1c8f4259b969a7c5dda049b6(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_2023b45252be4c2e94f39463acf32b61(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_aea91689739f43a0afd6b91095beafa4(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_f3e342d403eb4270bb9c94f3a53acac3(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_d3697194accd49a495b760070e364081(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_ec8a68eb75d24df3a1914a6da4014c7e(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_972ac4e49dcc46188aaca69545d02abe(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_7ed1ce488a2e452daac9ee5fab503788(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_9a26c4f735ed44e580892cd3852791d3(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_487c0084b9284657b042da6969a06bf8(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_862e14d90cb248f98881022e8fc6f6fa(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_f2bafd5f9856441c8fba16fba2f313d4(casenum, lower, fout, info, start,
    upper):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_70f0ad163f3242d08930fcd18ad0e56b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppslope


def func_44a490f0c2ea4b96994b8b2a92a674f2(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return area


def func_1c84d9445d124c3c968e01879c8c211e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos


def func_46d0d9f0a0f647f883bd73ea3722ce31(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return i


def func_ac304d871b2e45be81377c39a4278fcb(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return solnstr


def func_b56df28639e049b0bb4b7edd107976d3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return upper


def func_2cb35889fcd7440bba1681722115ac8c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return uppi


def func_7af4c73982e548aa969306f5a4584d85(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowi


def func_61339f963ec943068cdbe1a5e44c5cc4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lower


def func_bc04fc9131084c1fbc455107de4c8bd3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return slope


def func_60a6b24587124839a5c15a9cc7285c5e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return start


def func_1844e457773b43a2b2e4f2b5f7c1e10c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return info


def func_6269127ee18c486582a4e0e31eecde78(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut


def func_e319f85515554ffd8349b368304ea0ad(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea


def func_ed3b12000ac34ccbb9755e9482f662cc(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return lowslope


def func_5f768f563adc4b86aaa37a1973119ac0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return j


def func_7bde4df6eaa047a7acfb17c0faa8c037(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return height


def func_0461005c54924bb3a093c511becb601b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_a59c3200b09d4907b567110ffe1eb6a5(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_b6b81cd143de4584bdc043d4f7fd27a1(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_0fab39416cfd4d8b95a881ef9e7a676b(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_88ab0b9adbd448bba3dd7c7cbcc54b18(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return start


def func_ea5fc5c861c748b8a18857fa5e6657e4(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_4bb2f7c2874348cc954afa7d73fa9512(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return j


def func_b63683ff0b4143a4b1706633e7ea0f8d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_74c9f2d1f4914ba0b713a73b83be0a1e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_c8900c7270574595a739f6336d7a52dc(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_f9b75c7de352479f9fbc111420e568cb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_06f5a26f65464dc1a1ee7e930c0a28b8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return upper


def func_8bafde2b7f324dd998b57080777b17ed(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_62d27553057f43bb8fb2916e51891951(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_316b827a71c6457eb93e5f2414ca5dd0(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lower


def func_d3174fe917a44249810130de2d52c938(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_38cd52988c624f15aa164a0de793a1b3(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_ff1ffd51ca4b4585b668cce575b88b9c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_841a67e1e65c45f1932cdeacfcbc0703(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_5434a9fac230497ebeb381a8c198976c(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_889f5577305848a798b069f40c4b5912(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_41d23061d6c74f8282ecf6d8a120d67f(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_f351706b283e4cdabddb9f4c52db7626(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_badd39fee256461eb076162e5a218c13(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_060046b244414e46aba1fd3e5cad479b(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_0e82251ca94546fc992651b4c3394531(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_2c9d9c2ce2874009b82dcefa85b08a72(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_7ba1fb3065c74ade996a4a84d6bb8fa2(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_107fb1174bb7406d93db89fa93e51997(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_1c85377b2c144978b2c7474ebe7958c7(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_0699a4cd63404c4394bd226b37b45255(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_d2a1f9d9ffa5402ea552988b109bd282(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_e33b57fe301947e49779dbb605a5f6d8(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_197f7e2acae34c638e9c6e63ce629499(lower, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_bca1daa371ef4636a7789939d2a18bc1(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_cf01b598db4240d3bf4b7363420c1ea1(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_4e3daa1bd0804e3fa311f3c531936bfb(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_2b9ba1187bcd4dc4832c40d621863e50(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_cd35351c447b40eba5bad0ceea7b7074(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_7eb048cc45fa4215a3b87254bbcd9ca3(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_633c4cd6cc024f418bb636342f522c91(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_bebc4716a0694686876afff706a72669(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_fbf1ff783b5f4df88843cee5c44e5afb(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_8836231fe441489c870a94be7f36601b(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_87957ff74abf492cb292f7cb1e527122(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_62badfb6a1804cc99c526ff6c1b916c9(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_b731256cc03943dc84b414ed88e37833(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_c6ac188ef6714ecb844d94be56f74eea(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_f6872a52ba894a34a4615ec8431aa5f7(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_fb2fadaea0e94a6ca7545e276bb67352(casenum, lower, fout, info, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_7829bfd5ee8a47348ce0be2aa524f7be(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return upper


def func_c1a92c08dcb747f9a8865eb3f8516c84(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return nextpos


def func_dae1e488d0d14789bf2be14f13225816(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppi


def func_7a47c7347b2c4372af3a8ae00a1760a8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return i


def func_0e9ff238333d45cc9bfea58f1f291dc5(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lower


def func_755dee9237ee47518b8a30843e19e6b9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return info


def func_d62e92e58a1a43598fbfefa5ec9881aa(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return j


def func_a0725f9fa159456ba427a61a77d34871(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return area


def func_28ba75464bd6437083417dcc225e0da8(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return cut


def func_bdde3cc8a29d466bb46611f9d1efe9be(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return slope


def func_0a36f3376c974900b31210c87f8c6aa0(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return solnstr


def func_6c8a0ce7311945cca736a86cebee295a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowi


def func_96e3fce77e634b68b6509a70dc18dbe3(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return start


def func_f605a15e50c042cb90533b39afecb0f4(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return height


def func_f8acecac9db348b2b7b4b0ca9f7c871c(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return totalarea


def func_55be8f5d619645dba7b4fd2c248ef968(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return lowslope


def func_8b9704a6b48a4853bcbfbb8d6ac99b91(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    return uppslope


def func_c2a82f63f6984af38ef88ecf63d3a83e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_55e1d741bb6146ebb657b8bd1357041f(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_5f20c0e6d77a4e028a31200eee079aa8(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_550bd168cae542358185a5dfe3e364bb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_c9692f752bbf4c9399ed02f0683379bc(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_4c72a1e48c2e407f8e0649ab33a92c34(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_ccc2243cf282418b9e9e3c3d80d9edea(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_d7ea2d6379ea404c842443be7916b60d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_49f1507ba7904364a559435752092e11(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_7c6950ddc9424591abcb5c26beb0d5cb(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_2cbfe4b8104a40e9ac9b6f08e1cf8991(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_12e126a639d748f9b10a1aa3dc7e608d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_80e16f9db0cc405d874ce572ba1c072e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_bad9ca4b86ea43a29ee79b7d7cfe012d(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lower


def func_07dad23cd0094968bfcfa132439c140e(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_002875e2a08f42f79dc0a179c084e1cc(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_a63779e5f2444f0f9c93bb48602cf152(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_4d469d5bc0ff46ecb8fdcb347c11db6a(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_3db681fd65be4f59a5d53de7d4fa2390(info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_22b0b61ce0784e8a8cff48055647b183(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_b5c66c666c024d6b8813b725b450e415(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_471fbdc1dc854ff7b78a5e5fb52c2739(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_2124ffce5bd64181bf32f98b80063819(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_08bf21909c42443d92c31603be400a36(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_9514c152f6814978a10176ebb66bd8fb(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return j


def func_5f405ef1debd48238b90c35d21eae93f(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_3661cb4a32944e1681c73995a76b67b0(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_09af0099423a40c0802750da30a22ec4(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_1137b624bfd4404ab0e3caf1538850d3(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return upper


def func_5654a563ae5046b8a1926169a20fd638(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_fb13bde76eed4c648c0cdf8be4d052da(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_fcb937cf9f6d4010ae024a38be12adf2(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_7df9d31dfef9462bb87752f31083f37b(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_26ba905faa2d48e6ace523458a79e699(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_ec85945921b840f0a952e00da2bb74ed(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_9b97120a2f1c402aac5d99acbfc191bc(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_c34f27fb8474430daebad1e299a962dd(casenum, lower, fout, info, fin):
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_8c35279270a5467ab3041fa9bdf5e298(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return height


def func_fcd7d7781649421298268c92de3008d9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return solnstr


def func_474d09e1cf5d4b29aa74626ede09da2e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return oldarea


def func_81d459869df54b2194ff7087ae8c6050(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return nextpos


def func_17391b46b1ad476d9ff9ceb1fee35ca6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cut


def func_3c4d8ef0f3a44a2988d39ba9a4b94c62(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowslope


def func_72616ddae8c849e186e42f0b06c0c0f6(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return j


def func_22fc010de39e4856ad1911989a59f49b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return cutfrac


def func_0ec3d9c28f0f4b9e810f5f71c10aa02a(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return start


def func_bdadfebf0d864a0fa6cdb1bb4818775e(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return totalarea


def func_28c80cbb1b784022bb28b69ada266436(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return area


def func_4500459e40e840b59aa81cc95902e9b9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppi


def func_38f2be36987948a5b3c48f9e588437ae(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return remaining


def func_3f37962455a7426fb86493d996630420(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return uppslope


def func_514b78c88ae74ea2bdb15821dbdfb119(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return i


def func_0b1693882869486aab2f195909d8c535(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lower


def func_c378b59f5479426d80d85fc9547b9bf9(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return upper


def func_868010b046914bd798fd06a761f5745b(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return slope


def func_e9f0c2124c534d6ca124205a6fd9c051(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return info


def func_9311171b9f234af4b4e42a054ed25671(fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    return lowi


def func_6db11e9982cf4ec58265f683b3f35863(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_456b771a189a4943b3f6b385b33fdd7a(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_1885115c7e0f4b4cbc13419573b36f09(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_88e40b1322cb4e79942083d5c7602bca(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_222f8ecbc4df4d4094255574ff288ab6(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_d59b98e36e464008894623b4f4af0eb5(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_61f37e9440d64ba394b0bb0b39334286(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return j


def func_b48a969237bc4cc1b38afa8a9e91e07e(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_c271f4e982c2403fa665e34cfa75dc0b(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_1f7d0e0e9ee44809a0432e25ef82cb50(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lower


def func_8e7a45c502324498981799d0742ea5a6(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_0509ffbe14b14b83ba5f67fb2c01db7a(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_ec819cbd28314ff68da9c83d10c572a6(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_0541a72a4c1849cdaf73f99b3680ca14(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_478f0b281ea541f3b085b7c9d54d86b0(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_788a8d44c13040d69d4295cfaf38bdf0(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return upper


def func_d6ee7e9cc6324f689af21f305a6a08a2(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_a2fde79f9b0d48bf9afbd4840595a2d8(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_e9653549b3434db5b3b4cd09aa307d29(casenum, fout, info, fin):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_3c4f27c2152446fe89ef66821fd30e8b(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return info


def func_64f5c4d643fa46f4a54e10d662bc7a30(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_b8112abfff0c4354b1ae61979a183694(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_e23115fd1f384e0bb91fddddb4bf94e3(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_c2d562bb0e964ff5bf4fbdc1a0669867(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_fbefc531f8b2438383214642b8bacfb2(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return upper


def func_08471585992348d2b9257fad3f471bb7(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_9a95bdec2d934f0ab0cd1c5c3e817969(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lower


def func_4ad9bc3467e94d59bb2ff7072a0b1042(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_ecb70a6784b74dcc80fe15cf4769becf(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return j


def func_8a3c82a347ee4666b2ad5e5aeca098ac(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_e48b9729a5b749a3b43d65d744540a5a(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_16823d4dd2b74b21aab5981cbbbc0a0c(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_d207fc27d7de4db7ac9c12a40e4f8b8c(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_6d631eae652e41798cd5807f514dcf4c(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_42a0f8fdb32a4a3d8222a0312b89713c(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_f35354a93cfa43a9b5a8869746d8746a(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_b209c7cdcdd947c495cd70021c055b08(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_2e03a66395ce4c1ebd43592e351eae49(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_723b73d073a94fb3ab477a4cac726262(casenum, fout, fin):
    info = [int(i) for i in fin.readline().split()]
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    while i < info[0]:
        slope = uppslope - lowslope
        area += height + slope / 2
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    i = 0
    height = float(start)
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    totalarea = area
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    area = 0
    while i < info[0]:
        slope = uppslope - lowslope
        oldarea = area
        area += height + slope / 2
        while area > nextpos:
            cutfrac = 0
            remaining = nextpos - oldarea
            if slope == 0:
                cutfrac = remaining / height
            else:
                cutfrac = (-height + (height * height + 2 * slope *
                    remaining) ** 0.5) / slope
            solnstr += '\n' + str(i + cutfrac)
            cut += 1
            nextpos = totalarea * (float(cut) / info[3])
        height += slope
        if i < info[0] - 1:
            if i == lower[lowi][0] - 1:
                lowi += 1
                lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower
                    [lowi][0] - lower[lowi - 1][0])
            if i == upper[uppi][0] - 1:
                uppi += 1
                uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper
                    [uppi][0] - upper[uppi - 1][0])
        i += 1
    fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_8003469a15084f4792c3e07cde7444da(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_49a1d7c0d3ce44be8267578a7da5d4cd(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_f69b518f6fce422a9aa9625bf5a1470c(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return upper


def func_7109672c1ed24c12bbdc8e6acdd9932f(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_3bf1f2dcbd984e03a4e0a21428a4a4a8(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_4e3961a2cc854b6c9cdd56c195a30bd0(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_c855bd4f670c458499b6af755ebaced9(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_dac425ff06224b56973e70ea4c91b73c(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_5d68a8f048874b668287b3aadd317f0e(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_958f7093f6db4adb81eb877c92e4b400(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_6cd460f977e6448b817c5252b3738685(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lower


def func_a4ddf93a8e03477e9548c29e778987d4(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return casenum


def func_00e2ac2a8cd74903b866ac4beeafe1b0(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_4caf456a9fa349ef9650be2c8dc6b8d9(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_5e433babf13a45948fbd2fc24da7f1f3(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return info


def func_8c2101c5f8de482383d87935c3f042e0(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_d9871a1051214c63b979c8837c22d01b(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return j


def func_0fbd5ab8a17c423db4709c24947c1d3f(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_f38dcad24aa54c7fa2b167b0501a57a7(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_aedb71756ab941fbab1eae1339484513(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_8a81aef2059349cf8163f8689703f459(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_07c76e1fca1849fd8baaf01897a1fe10(fout, fin):
    numcases = int(fin.readline())
    for casenum in range(1, numcases + 1):
        print casenum
        info = [int(i) for i in fin.readline().split()]
        lower = [[int(i) for i in fin.readline().split()] for j in range(
            info[1])]
        upper = [[int(i) for i in fin.readline().split()] for j in range(
            info[2])]
        start = upper[0][1] - lower[0][1]
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        area = 0
        height = float(start)
        i = 0
        while i < info[0]:
            slope = uppslope - lowslope
            area += height + slope / 2
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        i = 0
        height = float(start)
        lowi = 1
        uppi = 1
        lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
        uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
        totalarea = area
        solnstr = ''
        cut = 1
        nextpos = totalarea * (float(cut) / info[3])
        area = 0
        while i < info[0]:
            slope = uppslope - lowslope
            oldarea = area
            area += height + slope / 2
            while area > nextpos:
                cutfrac = 0
                remaining = nextpos - oldarea
                if slope == 0:
                    cutfrac = remaining / height
                else:
                    cutfrac = (-height + (height * height + 2 * slope *
                        remaining) ** 0.5) / slope
                solnstr += '\n' + str(i + cutfrac)
                cut += 1
                nextpos = totalarea * (float(cut) / info[3])
            height += slope
            if i < info[0] - 1:
                if i == lower[lowi][0] - 1:
                    lowi += 1
                    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (
                        lower[lowi][0] - lower[lowi - 1][0])
                if i == upper[uppi][0] - 1:
                    uppi += 1
                    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (
                        upper[uppi][0] - upper[uppi - 1][0])
            i += 1
        fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return numcases


def func_736a8207808846a99bf84583787f3f67(lower):
    lowi += 1
    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi][0] -
        lower[lowi - 1][0])
    return lowslope


def func_2992bebe074f49a992836439fe7ab742(lower):
    lowi += 1
    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi][0] -
        lower[lowi - 1][0])
    return lowi


def func_d877e4febd2a464aa2f0d82eb7296dc4(upper):
    uppi += 1
    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi][0] -
        upper[uppi - 1][0])
    return uppslope


def func_c87fc1a4c70746b6ba876c55d968fcff(upper):
    uppi += 1
    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi][0] -
        upper[uppi - 1][0])
    return uppi


def func_603e73360f59471496b190d7e151788e(lower):
    lowi += 1
    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi][0] -
        lower[lowi - 1][0])
    return lowi


def func_7bf7b5eae9564c459c7f49f540095b5f(lower):
    lowi += 1
    lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi][0] -
        lower[lowi - 1][0])
    return lowslope


def func_537bf7ee55ac4618b801f306094a9e00(upper):
    uppi += 1
    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi][0] -
        upper[uppi - 1][0])
    return uppslope


def func_d87b7ae5c8a241439b0108e5a8fb4e8f(upper):
    uppi += 1
    uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi][0] -
        upper[uppi - 1][0])
    return uppi


def func_64f2ee6061a543cb9547d329e88904c5():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return solnstr


def func_ced9c2cdac004ec88adc8e47b1a109ee():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cut


def func_0082866131de4142b4f6de6b17d0b558():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return totalarea


def func_9818e7ae379f4f058f2430b91b4466e1():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return nextpos


def func_2e9abbae67364a5bbf6763a6c0602315():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return info


def func_62b816a5e8f6406eab6f705e87f7c9c8():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppslope


def func_2240d2c0698c4b9cbbef30d66058ed83():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return fout


def func_e091520a1900481a9efb8976884ba8ed():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return oldarea


def func_6bc47abedbbb4f68bf47757123fd1588():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return i


def func_a703dd32aa634ca498649ee2f3363ba8():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return slope


def func_8ac395bd511f48839ce9e409dd42d13a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lower


def func_95b283d86f6b46979c2f5d3e567515c2():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return height


def func_29b01d2c147e42e29a3b8573af6e76a6():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return j


def func_d5ed39bf4db148d9b5613d672fc1a851():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return fin


def func_299dde15ea3c4b3199d08004742bd4d3():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowi


def func_ceb1685a65ed446da2f1fa348ee23cbb():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return numcases


def func_be562fa7420a42b8b337ddf59db7c0a7():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return upper


def func_cf767b55b42a4309b046cc1275a2c330():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return casenum


def func_bb55c82743c34d369f1969bd24081738():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return area


def func_acd0c4adebc04952b85ef7324fedeed3():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return lowslope


def func_75b4452ffc8e410684eecd45635e24c1():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return cutfrac


def func_6123491693864af1a34b6ed3a6d601a4():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return start


def func_eff5691d7d794f62a69f1bc35d57fc9a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return remaining


def func_2f27d51d8c0a41899a1280bcf83eca71():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    return uppi


def func_03e75cb5efda4eb1aba5154d72d173b4(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return j


def func_2a2549db1ff145cb9e0c492caeb90962(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return height


def func_f10d4f705ecb442c85a3e77cfdc12b8f(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fout


def func_a15d88810d1140339deaf5470332da38(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_12815bb896604daea57f22c8b602e8a5(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return slope


def func_67201193e0aa4d2d9dc534ebb5a25800(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lower


def func_94e592d83b894f029add32883800ea36(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return upper


def func_30763664ac3646a3a6986b3cc649a159(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_b749207d11724b9084b7ee3e2eed65a9(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return start


def func_94111cbd6f0d403bba03868e025906f2(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_240e5ecc72424eddb3e1d46d98694012(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_05617f171c1047ee88db5bcf23d1c7c3(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_6fde305ec39842a7a52cfd620fe657b9(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return casenum


def func_1f58032817484dca8e3291dd1a5cde42(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return numcases


def func_aa8997df28d947fb9d1861ea997782e3(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return area


def func_255e19a5d11746ffa8b04b36fbf8081f(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return info


def func_e8ce313dfb504f3d8bacd8587e9000c9(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_f74b099349134a89867d0a04c9b79282(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_6d3dbeff49164ee98593e4f01a0ccd26(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_2eb3c20bdd894a9197efda683c7b3f42(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_4e3306dba04744409fb6b67cfb376457(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_ee2c218e271b42b0be0a385d2437c4f9(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_8897e7060a3144a28aee09142e5cc489(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_8f3eec2fe3114f7da1c658b1797c41c9(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_d2df055b47cb48b4b12b573ea1d22b7e(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_9ed1602555f74253b010db177ae544a4(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_e5c1a84280984c5c80f8f68fc82f3f26(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_1a14528a9e884011b19a6c31a74bcc51(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_06abeb9597d249ffb38e29dc80595c5e(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_35c9352bbdf1432888e3a09e46f21af9():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return j


def func_2bc76f3edc5c439794951ab7c911f1b0():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_46a81fc8f1624bcaaeb6e84f5f54574a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_2fc45658682e45c4b735f45ecc3cb6c4():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_55703ef49b674897a683f3e673241e05():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return start


def func_2bf9016ef86846b9935157174b5d9997():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_56f5a29da9d64d3c8b32a62b2f40a1a9():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return numcases


def func_6282b4dd642c4162a27061a857f849d2():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lower


def func_b5007ef1ee9f4d69a1c8c5e32c28c57d():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return upper


def func_26a3dd2942764a959165e11d1790c831():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_7463c5171e3f4c50839c5b22496f77f4():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fin


def func_7657c44db71942f39d0361abb1fc7eaf():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return slope


def func_94551834a361407fba9c2f792d3aa14d():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fout


def func_12c0e274a73747e28b106d0a5ac479e4():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return info


def func_251a00a45e8b41c281038c0060ad9c50():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return area


def func_8987d64bdc1d43df9be5181a849dfbbb():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return height


def func_b22390a1bf45493383170c17211a767c():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return casenum


def func_814c7c5298614c74a1b41c4b1b60b042(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return area


def func_af83f596b7dd4d95b7a624d24ef33fdd(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_fe1a681db922476bab6d82d61cf98c4e(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return height


def func_2499c489f04b401fa94912bbf25ec923(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return j


def func_00dcf8b403a349839f04f858f4e706af(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return casenum


def func_eeb3454c51884905b5589046ee9fc350(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return upper


def func_2b10dbd2515a4a8e851088deacdb57e0(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return slope


def func_c14ad69673d545cfb6c55aade7fe2d8c(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_391592c6a1bb4aa082a7471e1b7a1d9f(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fout


def func_0336ab8de9164dbd9686fe25d66ff16e(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_1d1653cfd5ba413096a7a9615644d411(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return start


def func_9894a34c7d0e4a2aac199f2de7041e46(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_b02507e9d01a4867a5ea64e0124ec850(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return info


def func_2eab2d418e56408ca2239e1c8e27c22e(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return numcases


def func_75af7c5e2b634918ba4a1980a5d2db86(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lower


def func_ecca966a547f405481a759e8c997cdba(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_f2bca92333a1458c980e92061e0c5258(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_cbe72f1a954b4e86aaa19748b44974a8(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_9d22d00d01e945268f61b497ba6b01d9(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_20a4531d2f8a4901af35e82c23c63b65(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_8e54772dd8a542bda5cee1a24d9176ea(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_938a516c34fc47ebbb61a3b9d2ce3080(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_03a98440b64e42969a0024f6fba38f95(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_38644cbd21f24af68be64d3306f785be(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_0e09ad829463466e84e95fbb7aa0eef0(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_325e01a637584ac59131de0f1013792f(lower, i, upper):
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_d16a45437cfd4c99a25ce7dcf9702e0f():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fin


def func_28bee02f144545c69dc436522fe9387e():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return numcases


def func_4a2c21d8442e49c5ab3563ffd49f0564():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_4a45e002e8f14807970a99400df06c4b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return start


def func_b6fab4d2375d42f2a4f09f935267718a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_c060934a441044caac9998643b7b3a75():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return casenum


def func_b67a379ab42e4850b2f88f4ab10e961d():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fout


def func_574a8e4bb0bf43d29908c287943c794a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return area


def func_b773ecb9c8d44840931a8e5d38f30a8b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_e98a23b5dc1e4dcd998d049fdf2fb30a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return upper


def func_7996e5c813614f2fb01f1c3909f0a104():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return j


def func_8d4594e66693404183052a045f6454b8():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return height


def func_168d878a05924b5787fe34c81bdd5104():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_5e0546f05d804ea38143c3dd1e602bee():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lower


def func_15c5e9c3b3cd4964963b120890b2197b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return info


def func_72e3875f186e4f4296b58d0e42eefafe():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return slope


def func_f6cc5aee1d37429ba3114d88f9adb5fb():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_f5ee234076544b9db513744db2dbb537(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return solnstr


def func_87ad38aae78f49cdb9ba93178eb19b42(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_11544db88e6f4d26a658837ccdea0514(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fout


def func_558fecf5b4224bc6bbacdb11355ccd5a(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return totalarea


def func_43633536eaa44d489fd30f32a43650e8(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return info


def func_8d716851af2e4a928f13bfbb98131bcc(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return casenum


def func_6528864d456c4ba189933572253b25b4(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return nextpos


def func_142db4f678bc42e8ac58f8b7b8c03bfa(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return height


def func_a18c3d1600ff45afa567068619b99350(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return upper


def func_bb468cf283754b81bd3fcd27b6ab7515(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return oldarea


def func_83905dd0c45d4b198e2332fefa7baed6(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return start


def func_c29ffbb017104a9c86bf4e3971880ed3(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return cutfrac


def func_4d05a1a9150e4e5e9f8b1405e30c91ae(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return j


def func_45851e69488c4e4a9eed8b84a8723ba1(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return remaining


def func_0b4319480e7d404d8fda4f9940f7729a(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return area


def func_1c677988d66a488db0eecd4683d57d29(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_bef8d699b7824ee986ad78bc1df5c44c(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_235c1296df784143ab8b564a45367193(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return cut


def func_09fe8d5fea7145ff923502dc1fde30a3(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_440db3b1b6594d65ad0290e748f24346(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return slope


def func_15f7a32ec1a64288afcb9fdc506e5420(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_dfe3b6a87ea7489eb6ad1157ba9c1b96(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lower


def func_74d4eaee02d44eec834f7c956b910e67(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return numcases


def func_95c13ea6eb9c49d6b65fa3f07082a6d3(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_f4ff858c7867435d92404c06a27ec760(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_80b0d832013240d2858cda666c8183e4(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_df10038270714e539cc47f112b234763(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_0c3b7435ea4c428ea0d559bfef4e4aaa(lower, i, upper):
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_5a3a53dbe7e8410a94e840efb6f5669b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fin


def func_524a06ba160042658ea646f699d1c696():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return area


def func_333947d5796e4d1b9c5e4dfe0cdec614():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return slope


def func_c3d184d40ea74715914cc5520ab999f5():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return fout


def func_a3ac22bb2a2c4b89a19a9f1bd9a8895d():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return casenum


def func_aa0c8b8019b84c47a95ae6a4bf524776():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppslope


def func_0aca215a255c45d682cc37f4bf5611ff():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return upper


def func_1f26e8c82ee543a28b8c8af9e7007632():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return start


def func_fe3d0cd9288847f98716f04da726cba3():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return oldarea


def func_9bd12b92241d4b12be0d398366446575():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowslope


def func_e8bbc37a8ffc4c758d9239de7a946bf5():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return remaining


def func_99d596bccbdf46e894bcccfccff14e8b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return nextpos


def func_096df753d1ae48c099eeadc9a5a8c161():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return cutfrac


def func_849fb5f9d1394d2b97a6f7ac51a10ca5():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return j


def func_1482010fcb4746a9bf5efc6b9be328ce():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return numcases


def func_dd5be5cec0e2451aaf790f87b4804b63():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return uppi


def func_c9b4a9846c654b10b29d3f68de55dba9():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return height


def func_198ad050b732433c942b6e7c6fe1b193():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return solnstr


def func_28c3c6e56bb44e038d99ce82b1bb363f():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return info


def func_8ca2c4c654b3490a8fbc5f7e0fb8d070():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return cut


def func_51ae03f1f7ad431f977ad3e004ef3222():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return totalarea


def func_7038a4558ab347498e591942de1752e6():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return i


def func_d8e578ade313409998d2b32abe9320c0():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lower


def func_d131d7d6a58a4ad3b7749a699167902e():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    return lowi


def func_2f72bc541396422593cca54d0604bfa0(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return info


def func_83981d78b8bb4fec951a5b1459202cbc(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return upper


def func_b2f32118fa3245e585879d872619c5d7(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_5db94fdbeab64ac5bae076c49a93289a(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return numcases


def func_830d571158dd49cbb3de8178914b2dc7(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_a5eee85707214ca299fb10fc2a4ec5a5(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fout


def func_5c4c34b714ad40e19e0266009c396a06(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return nextpos


def func_aa94e88c30ca4906ac416bd3261d48b7(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return height


def func_6848ce61c611446a8265f77908d55d9c(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return start


def func_a810d2496c454b3197cb6a892ee4d923(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return casenum


def func_12b4e74ba5274bf58a82d0bcf8d7d412(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lower


def func_dcf3e0d4ec884ec090ad8cc47ab841e1(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return j


def func_91637467414149deb277b97fda9a2334(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return cutfrac


def func_4400e30e5bc94f8391a180a008a6f8e8(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return cut


def func_d9636e2312d64909bb8258afbb1b684d(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return oldarea


def func_23c2f1fcbc084213808ace42dfe6ffe1(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_345a2338abad417ea4a4bf169333df4c(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return totalarea


def func_be69c674715b488e90c59c90496dbe65(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_b11f89e2fbd94a8881a245b25eecfdf6(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return area


def func_bd7e0610548c4f96b4fbfbe4e0e4b7ee(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return slope


def func_4981dfc139f54726bcf5b13c1e2fc38f(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_d2a08d52dbee4dc59ad4ed0110e19677(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return solnstr


def func_5d87bec5a5734625b95b17e083bd0b17(fin):
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return remaining


def func_ad03fe9f4fa0491baedf3fd36dfcc7ee():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return upper


def func_7d7927ffa030433a9fa3db270d8e8459():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowi


def func_a717b25c105543499240d02758e0de61():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return j


def func_a0a56e8a04c14ea38f44a72b3e80da0c():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return start


def func_f8040edb018a421d9d1f70c300d7765a():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return cutfrac


def func_348324c98e884ffcbecb1a840115ae74():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return area


def func_e61ba77e651c478db9d1bbf00ef7525f():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return casenum


def func_34b80fa119dc496cb570176d200ca748():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return info


def func_138bdbaa48064760b6d1b21c93a0de76():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppslope


def func_f3b498d7dee54350854fb420a34b4e02():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fin


def func_02f18e5d2d3d499bacb8ac92f8213e9e():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lowslope


def func_b6266c6d19d14a49a7ce38f25d523ca7():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return nextpos


def func_31d65817b2fd43b39c49feada5d36e06():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return oldarea


def func_9d10a744ae044191b88c76bcbc94b45d():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return numcases


def func_7789f22b66994c3382d02e9eb6968f0c():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return height


def func_b4a17f26971348f18662374291229b1b():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return uppi


def func_ff7e7f602c3947dcb1c9433f124f0534():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return cut


def func_edc2c424fa884eaca035eab1938baf82():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return remaining


def func_c01073946cb34d40a005b812ca7e92c8():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return solnstr


def func_c2fabe3eb26d4a44a8208286e1a3d6a0():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return i


def func_30139f91968341e288be9e2f7455d811():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return lower


def func_1859ff84076c480ca206438064160b82():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return totalarea


def func_6e9765298c4249d6b2f8efb787f3dd27():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return slope


def func_623ec6219a9c403c83fdb937bd519e15():
    with open('test_files/Y11R5P1/A.in', 'r') as fin:
        with open('test_files/Y11R5P1/A.out', 'w') as fout:
            numcases = int(fin.readline())
            for casenum in range(1, numcases + 1):
                print casenum
                info = [int(i) for i in fin.readline().split()]
                lower = [[int(i) for i in fin.readline().split()] for j in
                    range(info[1])]
                upper = [[int(i) for i in fin.readline().split()] for j in
                    range(info[2])]
                start = upper[0][1] - lower[0][1]
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                area = 0
                height = float(start)
                i = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    area += height + slope / 2
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                i = 0
                height = float(start)
                lowi = 1
                uppi = 1
                lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
                uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
                totalarea = area
                solnstr = ''
                cut = 1
                nextpos = totalarea * (float(cut) / info[3])
                area = 0
                while i < info[0]:
                    slope = uppslope - lowslope
                    oldarea = area
                    area += height + slope / 2
                    while area > nextpos:
                        cutfrac = 0
                        remaining = nextpos - oldarea
                        if slope == 0:
                            cutfrac = remaining / height
                        else:
                            cutfrac = (-height + (height * height + 2 *
                                slope * remaining) ** 0.5) / slope
                        solnstr += '\n' + str(i + cutfrac)
                        cut += 1
                        nextpos = totalarea * (float(cut) / info[3])
                    height += slope
                    if i < info[0] - 1:
                        if i == lower[lowi][0] - 1:
                            lowi += 1
                            lowslope = float(lower[lowi][1] - lower[lowi - 
                                1][1]) / (lower[lowi][0] - lower[lowi - 1][0])
                        if i == upper[uppi][0] - 1:
                            uppi += 1
                            uppslope = float(upper[uppi][1] - upper[uppi - 
                                1][1]) / (upper[uppi][0] - upper[uppi - 1][0])
                    i += 1
                fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    with open('test_files/Y11R5P1/A.out', 'w') as fout:
        numcases = int(fin.readline())
        for casenum in range(1, numcases + 1):
            print casenum
            info = [int(i) for i in fin.readline().split()]
            lower = [[int(i) for i in fin.readline().split()] for j in
                range(info[1])]
            upper = [[int(i) for i in fin.readline().split()] for j in
                range(info[2])]
            start = upper[0][1] - lower[0][1]
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            area = 0
            height = float(start)
            i = 0
            while i < info[0]:
                slope = uppslope - lowslope
                area += height + slope / 2
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            i = 0
            height = float(start)
            lowi = 1
            uppi = 1
            lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
            uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
            totalarea = area
            solnstr = ''
            cut = 1
            nextpos = totalarea * (float(cut) / info[3])
            area = 0
            while i < info[0]:
                slope = uppslope - lowslope
                oldarea = area
                area += height + slope / 2
                while area > nextpos:
                    cutfrac = 0
                    remaining = nextpos - oldarea
                    if slope == 0:
                        cutfrac = remaining / height
                    else:
                        cutfrac = (-height + (height * height + 2 * slope *
                            remaining) ** 0.5) / slope
                    solnstr += '\n' + str(i + cutfrac)
                    cut += 1
                    nextpos = totalarea * (float(cut) / info[3])
                height += slope
                if i < info[0] - 1:
                    if i == lower[lowi][0] - 1:
                        lowi += 1
                        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]
                            ) / (lower[lowi][0] - lower[lowi - 1][0])
                    if i == upper[uppi][0] - 1:
                        uppi += 1
                        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]
                            ) / (upper[uppi][0] - upper[uppi - 1][0])
                i += 1
            fout.write('Case #' + str(casenum) + ': ' + solnstr + '\n')
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    if i == lower[lowi][0] - 1:
        lowi += 1
        lowslope = float(lower[lowi][1] - lower[lowi - 1][1]) / (lower[lowi
            ][0] - lower[lowi - 1][0])
    if i == upper[uppi][0] - 1:
        uppi += 1
        uppslope = float(upper[uppi][1] - upper[uppi - 1][1]) / (upper[uppi
            ][0] - upper[uppi - 1][0])
    return fout
