

/************ 000 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 001 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 002 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 003 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 004 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 005 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 006 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 007 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 008 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 009 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 010 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 011 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 012 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 013 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 014 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 015 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 016 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 017 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 018 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 019 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 020 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 021 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 022 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 023 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 024 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 025 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 026 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 027 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 028 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 029 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 030 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 031 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 032 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 033 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 034 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 035 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 036 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 037 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 038 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 039 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 040 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 041 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 042 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 043 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 044 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 045 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 046 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 047 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 048 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 049 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 050 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 051 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 052 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 053 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 054 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 055 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 056 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 057 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 058 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 059 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 060 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 061 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 062 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 063 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 064 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 065 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 066 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 067 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 068 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 5;
  ev.u.input.data[0] = 0x1;
  if (btn1_down)
    ev.u.input.data[1] |= 0x1;

  if (btn2_down)
    ev.u.input.data[1] |= 0x2;

  if (btn3_down)
    ev.u.input.data[1] |= 0x4;

  ev.u.input.data[2] = abs_hor;
  ev.u.input.data[3] = abs_ver;
  ev.u.input.data[4] = wheel;
  return uhid_write(fd, &ev);
}



/************ 069 : create *************/

static int create(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_CREATE;
  strcpy((char *) ev.u.create.name, "test-uhid-device");
  ev.u.create.rd_data = rdesc;
  ev.u.create.rd_size = sizeof(rdesc);
  ev.u.create.bus = BUS_USB;
  ev.u.create.vendor = 0x15d9;
  ev.u.create.product = 0x0a37;
  ev.u.create.version = 0;
  ev.u.create.country = 0;
  return uhid_write(fd, &ev);
}



/************ 070 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}



/************ 071 : send_event *************/

static int send_event(int fd)
{
  struct uhid_event ev;
  memset(&ev, 0, sizeof(ev));
  ev.type = UHID_INPUT;
  ev.u.input.size = 4;
  if (btn1_down)
    ev.u.input.data[0] |= 0x1;

  if (btn2_down)
    ev.u.input.data[0] |= 0x2;

  if (btn3_down)
    ev.u.input.data[0] |= 0x4;

  ev.u.input.data[1] = abs_hor;
  ev.u.input.data[2] = abs_ver;
  ev.u.input.data[3] = wheel;
  return uhid_write(fd, &ev);
}

