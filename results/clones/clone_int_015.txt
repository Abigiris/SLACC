

/************ 000 : f5 *************/

int f5(int x)
{
  if (f2(x, 1))
    f1(1, f4(1));

  return x;
}



/************ 001 : identity *************/

int identity(int x)
{
  return x;
}



/************ 002 : do_something *************/

int do_something(int i)
{
  return i;
}



/************ 003 : execute *************/

int execute(int cmd)
{
  int last = 0;
  if (__builtin_setjmp(buf) == 0)
    while (1)
  {
    last = 1;
    raise0();
  }


  if (last == 0)
    return 0;
  else
    return cmd;

}



/************ 004 : sub1 *************/

int sub1(int val)
{
  return val;
}



/************ 005 : bar *************/

static int bar(int p)
{
  short d;
  if (c)
  {
    for (; f; f = g)
      ;

    foo();
    d = p;
    char e = d;
    if (p)
      return 1;

  }

  return p;
}



/************ 006 : do_something *************/

int do_something(int i)
{
  return i;
}



/************ 007 : filesym *************/

int filesym(int arg)
{
  return arg;
}



/************ 008 : bar *************/

int bar(int i)
{
  return i;
}



/************ 009 : func1 *************/

int func1(int a)
{
  return a;
}



/************ 010 : do_something *************/

int do_something(int i)
{
  return i;
}



/************ 011 : get_rr_node_index *************/

int get_rr_node_index(int i)
{
  return i;
}



/************ 012 : bar *************/

static int bar(int p)
{
  short d;
  if (c)
  {
    for (; f; f = g)
      ;

    foo();
    d = p;
    char e = d;
    if (p)
      return 1;

  }

  return p;
}



/************ 013 : filesym *************/

int filesym(int arg)
{
  return arg;
}



/************ 014 : foo *************/

int foo(int i)
{
  global++;
  return i;
}



/************ 015 : f5 *************/

int f5(int x)
{
  if (f2(x, 1))
    f1(1, f4(1));

  return x;
}

