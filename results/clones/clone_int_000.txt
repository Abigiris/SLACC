

/************ 000 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 001 : initSerialPort *************/

int initSerialPort(int fd)
{
  struct termios options;
  tcgetattr(fd, &options);
  cfsetispeed(&options, B9600);
  cfsetospeed(&options, B9600);
  options.c_cflag |= CLOCAL | CREAD;
  options.c_cflag &= ~PARENB;
  options.c_cflag &= ~CSTOPB;
  options.c_cflag &= ~CSIZE;
  options.c_cflag |= CS8;
  options.c_iflag &= ~((IXON | IXOFF) | IXANY);
  options.c_cflag |= CRTSCTS;
  options.c_lflag &= ~(((ICANON | ECHO) | ECHOE) | ISIG);
  options.c_cc[VMIN] = 1;
  options.c_cc[VTIME] = 0;
  if (tcsetattr(fd, TCSANOW, &options) < 0)
  {
    return -1;
  }

  return 0;
}



/************ 002 : initSerialPort *************/

int initSerialPort(int fd)
{
  struct termios options;
  tcgetattr(fd, &options);
  cfsetispeed(&options, B38400);
  cfsetospeed(&options, B38400);
  options.c_cflag |= CLOCAL | CREAD;
  options.c_cflag &= ~PARENB;
  options.c_cflag &= ~CSTOPB;
  options.c_cflag &= ~CSIZE;
  options.c_cflag |= CS8;
  options.c_iflag &= ~((IXON | IXOFF) | IXANY);
  options.c_cflag |= CRTSCTS;
  options.c_lflag &= ~(((ICANON | ECHO) | ECHOE) | ISIG);
  options.c_cc[VMIN] = 1;
  options.c_cc[VTIME] = 0;
  if (tcsetattr(fd, TCSANOW, &options) < 0)
  {
    return -1;
  }

  return 0;
}



/************ 003 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 004 : do_bsd_test *************/

int do_bsd_test(int count)
{
  int fd;
  int ret;
  int idx;
  fd = open(MYFILENAME, O_RDWR);
  if (fd < 0)
  {
    printf("proc %3d - open(%s) errno %d %s\n", myProcId, MYFILENAME, errno, strerror(errno));
    return -1;
  }

  for (idx = 0; idx < 200; idx++)
  {
    ret = flockUnflock(fd, FLOCK_MODE_READ);
    if (ret != 0)
      break;

    ret = flockUnflock(fd, FLOCK_MODE_WRITE);
    if (ret != 0)
      break;

  }

  close(fd);
  return ret;
}



/************ 005 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 006 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 007 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 008 : argindex *************/

static int argindex(int n)
{
  int i;
  int dashdash = 0;
  if ((argv != 0) && ((*argv) != 0))
  {
    for (i = 1; argv[i]; i++)
    {
      if (dashdash || (!(((argv[i][0] == '-') || (argv[i][0] == '+')) || (strchr(argv[i], '=') != 0))))
      {
        if (n == 0)
          return i;

        n--;
      }

      if (strcmp(argv[i], "--") == 0)
        dashdash = 1;

    }

  }

  return -1;
}



/************ 009 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 010 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 011 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 012 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 013 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 014 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 015 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 016 : getPivotRow *************/

int getPivotRow(int pivotCol)
{
  int i;
  int index = -1;
  float currMin = 100000;
  for (i = 0; i < m; i++)
  {
    if (mat[i][pivotCol] <= 0)
      continue;

    if ((mat[i][n] / mat[i][pivotCol]) < currMin)
    {
      index = i;
      currMin = mat[i][n] / mat[i][pivotCol];
    }

  }

  return index;
}



/************ 017 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 018 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 019 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 020 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 021 : argindex *************/

static int argindex(int n)
{
  int i;
  int dashdash = 0;
  if ((argv != 0) && ((*argv) != 0))
  {
    for (i = 1; argv[i]; i++)
    {
      if (dashdash || (!(((argv[i][0] == '-') || (argv[i][0] == '+')) || (strchr(argv[i], '=') != 0))))
      {
        if (n == 0)
          return i;

        n--;
      }

      if (strcmp(argv[i], "--") == 0)
        dashdash = 1;

    }

  }

  return -1;
}



/************ 022 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 023 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 024 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 025 : byte_row_uhc_1 *************/

static int byte_row_uhc_1(int byte)
{
  if ((byte >= 0x81) && (byte < 0xa1))
    return byte - 0x81;
  else
    return -1;

}



/************ 026 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 027 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 028 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 029 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 030 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 031 : argindex *************/

static int argindex(int n)
{
  int i;
  int dashdash = 0;
  if ((argv != 0) && ((*argv) != 0))
  {
    for (i = 1; argv[i]; i++)
    {
      if (dashdash || (!(((argv[i][0] == '-') || (argv[i][0] == '+')) || (strchr(argv[i], '=') != 0))))
      {
        if (n == 0)
          return i;

        n--;
      }

      if (strcmp(argv[i], "--") == 0)
        dashdash = 1;

    }

  }

  return -1;
}



/************ 032 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 033 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 034 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 035 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 036 : do_posix_test *************/

int do_posix_test(int count)
{
  int fd;
  int ret;
  int idx;
  int posRef;
  fd = open(MYFILENAME, O_RDWR);
  if (fd < 0)
  {
    printf("proc %3d - open(%s) errno %d %s\n", myProcId, MYFILENAME, errno, strerror(errno));
    return -1;
  }

  for (posRef = 0; posRef <= 2; posRef++)
  {
    ret = set_lock(fd, F_GETLK, F_RDLCK, 0, 0, posRef);
    if (ret != 0)
      break;

    ret = set_lock(fd, F_GETLK, F_WRLCK, 0, 0, posRef);
    if (ret != 0)
      break;

    ret = lockAllUnlockByPieces(F_RDLCK, posRef);
    if (ret != 0)
      break;

    ret = lockAllUnlockByPieces(F_WRLCK, posRef);
    if (ret != 0)
      break;

    ret = lockUnlockByOffset(fd, F_RDLCK, posRef);
    if (ret != 0)
      break;

    ret = lockUnlockByOffset(fd, F_WRLCK, posRef);
    if (ret != 0)
      break;

  }

  set_lock(fd, F_SETLKW, F_WRLCK, 0, 0, 0);
  close(fd);
  return ret;
}



/************ 037 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 038 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 039 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 040 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 041 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 042 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 043 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 044 : get_baud *************/

int get_baud(int baud)
{
  switch (baud)
  {
    case 9600:
      return B9600;

    case 19200:
      return B19200;

    case 38400:
      return B38400;

    case 57600:
      return B57600;

    case 115200:
      return B115200;

    case 230400:
      return B230400;

    case 460800:
      return B460800;

    case 500000:
      return B500000;

    case 576000:
      return B576000;

    case 921600:
      return B921600;

    case 1000000:
      return B1000000;

    case 1152000:
      return B1152000;

    case 1500000:
      return B1500000;

    case 2000000:
      return B2000000;

    case 2500000:
      return B2500000;

    case 3000000:
      return B3000000;

    case 3500000:
      return B3500000;

    case 4000000:
      return B4000000;

    default:
      return -1;

  }

}



/************ 045 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 046 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 047 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 048 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 049 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 050 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 051 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 052 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 053 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 054 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 055 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}



/************ 056 : check_powermode *************/

static int check_powermode(int fd)
{
  unsigned char args[4] = {WIN_CHECKPOWERMODE1, 0, 0, 0};
  int state;
  if ((ioctl(fd, HDIO_DRIVE_CMD, &args) && (args[0] = WIN_CHECKPOWERMODE2)) && ioctl(fd, HDIO_DRIVE_CMD, &args))
  {
    if (((errno != EIO) || (args[0] != 0)) || (args[1] != 0))
    {
      state = -1;
    }
    else
      state = 0;

  }
  else
  {
    state = (args[2] == 255) ? (1) : (0);
  }

  ;
  return state;
}

