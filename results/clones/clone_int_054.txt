

/************ 000 : print_page *************/

static int print_page(int iPg)
{
  unsigned char *aData;
  int i;
  int j;
  aData = malloc(pagesize);
  if (aData == 0)
    out_of_memory();

  read(db, aData, pagesize);
  fprintf(stdout, "Page %d:\n", iPg);
  for (i = 0; i < pagesize; i += 16)
  {
    fprintf(stdout, " %03x: ", i);
    for (j = 0; j < 16; j++)
    {
      fprintf(stdout, "%02x ", aData[i + j]);
    }

    for (j = 0; j < 16; j++)
    {
      fprintf(stdout, "%c", (isprint(aData[i + j])) ? (aData[i + j]) : ('.'));
    }

    fprintf(stdout, "\n");
  }

  free(aData);
}



/************ 001 : print_page *************/

static int print_page(int iPg)
{
  int iStart;
  unsigned char *aData;
  iStart = (iPg - 1) * pagesize;
  fprintf(stdout, "Page %d:   (offsets 0x%x..0x%x)\n", iPg, iStart, (iStart + pagesize) - 1);
  aData = print_byte_range(iStart, pagesize, 0);
  free(aData);
}

